<?xml version="1.0" encoding="UTF-8"?>
<modification>
	<id>ADV Profit Module v4.4 for OpenCart v1.5.5.x, v1.5.6.x</id>
	<version>4.4</version>
	<vqmver>2.1.6</vqmver>
	<author><![CDATA[<span style="color:#333; font-weight:bold;">ADV Reports and Statistics</span><br /><a href="http://www.opencart.com/index.php?route=extension/extension&filter_username=cmerry" target="_blank">More Extensions <i class="fa fa-external-link"></i></a>]]></author>
	<email>opencart.reports@gmail.com</email>
	<website>http://www.opencartreports.com</website>	
	
	
	<file name="admin/controller/catalog/product.php">
        <operation>
            <search position="after" offset="1"><![CDATA[
$url .= '&filter_price=' . $this->request->get['filter_price'];
            ]]></search>
            <add><![CDATA[
			if (isset($this->request->get['filter_cost'])) {
				$url .= '&filter_cost=' . $this->request->get['filter_cost'];
			}

			if (isset($this->request->get['filter_profit'])) {
				$url .= '&filter_profit=' . $this->request->get['filter_profit'];
			}
						
			if (isset($this->request->get['filter_sold'])) {
				$url .= '&filter_sold=' . $this->request->get['filter_sold'];
			}			
            ]]></add>
        </operation>

        <operation>		
            <search position="after" offset="1"><![CDATA[
$filter_price = null;
            ]]></search>
            <add><![CDATA[
		if (isset($this->request->get['filter_cost'])) {
			$filter_cost = $this->request->get['filter_cost'];
		} else {
			$filter_cost = null;
		}

		if (isset($this->request->get['filter_profit'])) {
			$filter_profit = $this->request->get['filter_profit'];
		} else {
			$filter_profit = null;
		}
				
		if (isset($this->request->get['filter_sold'])) {
			$filter_sold = $this->request->get['filter_sold'];
		} else {
			$filter_sold = null;
		}		
            ]]></add>
        </operation>

        <operation>		
            <search position="after"><![CDATA[
=> $filter_price,
            ]]></search>
            <add><![CDATA[
			'filter_cost'	  => $filter_cost,
			'filter_profit'	  => $filter_profit,
			'filter_sold'	  => $filter_sold,
            ]]></add>
        </operation>

        <operation>		
            <search position="after"><![CDATA[
$special = false;
            ]]></search>
            <add><![CDATA[
			$profit_special = false;
            ]]></add>
        </operation>

        <operation>		
            <search position="after"><![CDATA[
$special = $product_special['price'];
            ]]></search>
            <add><![CDATA[
					$profit_special = ($product_special['price']-$result['cost']);
            ]]></add>
        </operation>
				
        <operation>		
            <search position="after"><![CDATA[
'price'      => $result['price'],
            ]]></search>
            <add><![CDATA[
				'cost'       		=> $result['cost'],
				'profit'     		=> sprintf("%.4f",($result['price']-$result['cost'])),
				'profit_special'    => sprintf("%.4f",$profit_special),
				'sold'       		=> $result['sold'] ? $result['sold'] : 0,
            ]]></add>
        </operation>

        <operation>		
            <search position="after"><![CDATA[
$this->data['column_price'] = $this->language->get('column_price');	
            ]]></search>
            <add><![CDATA[
		$this->data['auth'] = TRUE;
		$this->data['adv_ext_name'] = $this->language->get('adv_ext_name');
		$this->data['adv_ext_short_name'] = $this->language->get('adv_ext_short_name');
		$this->data['adv_ext_version'] = $this->language->get('adv_ext_version');	
		$this->data['adv_ext_url'] = 'http://www.opencart.com/index.php?route=extension/extension/info&extension_id=16601';	

		$this->data['column_cost'] = $this->language->get('column_cost');
		$this->data['column_profit'] = $this->language->get('column_profit');
		$this->data['column_sold'] = $this->language->get('column_sold');		
            ]]></add>
        </operation>

        <operation>		
            <search position="after"><![CDATA[
$this->data['sort_price'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=p.price' . $url, 'SSL');
            ]]></search>
            <add><![CDATA[
		$this->data['sort_cost'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=p.cost' . $url, 'SSL');
		$this->data['sort_profit'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=profit' . $url, 'SSL');
		$this->data['sort_sold'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=sold' . $url, 'SSL');	
            ]]></add>
        </operation>

        <operation>		
            <search position="after"><![CDATA[
$this->data['filter_price'] = $filter_price;
            ]]></search>
            <add><![CDATA[
		$this->data['filter_cost'] = $filter_cost;
		$this->data['filter_profit'] = $filter_profit;
		$this->data['filter_sold'] = $filter_sold;
            ]]></add>
        </operation>

        <operation>		
            <search position="replace"><![CDATA[
$this->data['quantity'] = 1;
            ]]></search>
            <add><![CDATA[
			$this->data['quantity'] = 0;
            ]]></add>
        </operation>
		
        <operation>
            <search position="before"><![CDATA[
protected function getForm() {
            ]]></search>
            <add><![CDATA[
	public function filter_history() {
	  $this->data['product_id'] = isset($this->request->get['product_id']);
	  
	  if (isset($this->request->get['product_id'])) {
	  $this->data['product_id'] = isset($this->request->get['product_id']);
		
		$json = array();

		$this->data['token'] = $this->session->data['token'];

		if (isset($this->request->get['filter_history_date_start'])) {
			$filter_history_date_start = $this->request->get['filter_history_date_start'];
		} else {
			$filter_history_date_start = '';
		}

		if (isset($this->request->get['filter_history_date_end'])) {
			$filter_history_date_end = $this->request->get['filter_history_date_end'];
		} else {
			$filter_history_date_end = '';
		}
		
		$this->data['ranges_history'] = array();
		
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcustom'),
			'value' => 'custom',
			'style' => 'color:#666',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hweek'),
			'value' => 'week',
			'style' => 'color:#090',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hmonth'),
			'value' => 'month',
			'style' => 'color:#090',
			'id' 	=> '',
		);					
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hquarter'),
			'value' => 'quarter',
			'style' => 'color:#090',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hyear'),
			'value' => 'year',
			'style' => 'color:#090',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcurrent_week'),
			'value' => 'current_week',
			'style' => 'color:#06C',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcurrent_month'),
			'value' => 'current_month',
			'style' => 'color:#06C',
			'id' 	=> '',
		);	
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcurrent_quarter'),
			'value' => 'current_quarter',
			'style' => 'color:#06C',
			'id' 	=> '',
		);			
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcurrent_year'),
			'value' => 'current_year',
			'style' => 'color:#06C',
			'id' 	=> '',
		);			
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hlast_week'),
			'value' => 'last_week',
			'style' => 'color:#F90',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hlast_month'),
			'value' => 'last_month',
			'style' => 'color:#F90',
			'id' 	=> '',
		);	
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hlast_quarter'),
			'value' => 'last_quarter',
			'style' => 'color:#F90',
			'id' 	=> '',
		);			
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hlast_year'),
			'value' => 'last_year',
			'style' => 'color:#F90',
			'id' 	=> '',
		);			
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hall_time'),
			'value' => 'all_time',
			'style' => 'color:#F00',
			'id' 	=> 'chart_all_time',
		);
		
		if (isset($this->request->get['filter_history_range'])) {
			$filter_history_range = $this->request->get['filter_history_range'];
		} else {
			$filter_history_range = 'all_time';
		}

		if (isset($this->request->get['filter_history_option'])) {
			$filter_history_option = $this->request->get['filter_history_option'];
		} else {
			$filter_history_option = '';
		}

		if (isset($this->request->get['sort_history'])) {
			$sort_history = $this->request->get['sort_history'];
		} else {
			$sort_history = 'date_added';
		}

		if (isset($this->request->get['order_history'])) {
			$order_history = $this->request->get['order_history'];
		} else {
			$order_history = 'ASC';
		}
				
		if (isset($this->request->get['page_history'])) {
			$page_history = $this->request->get['page_history'];
		} else {
			$page_history = 1;
		}
		
		$json['histories'] = array();
		
		$data = array(
			'filter_history_date_start'		=> $filter_history_date_start, 
			'filter_history_date_end'	  	=> $filter_history_date_end, 
			'filter_history_range'	  	  	=> $filter_history_range, 
			'filter_history_option'	  	  	=> $filter_history_option, 
			'sort_history'            		=> $sort_history,
			'order_history'           		=> $order_history,
			'start_history'           	  	=> ($page_history - 1) * $this->config->get('config_admin_limit'),
			'limit_history'           	  	=> $this->config->get('config_admin_limit')
		);
		
		$this->load->model('catalog/product');
		
		$prod_history_total = $this->model_catalog_product->getProductHistoryTotal($data, $this->request->get['product_id']);
			
		$prod_history = $this->model_catalog_product->getProductHistory($data, $this->request->get['product_id']);
		
		$this->data['option_histories'] = $this->model_catalog_product->getProductOptionsHistory($data, $this->request->get['product_id']);
		
		foreach ($prod_history as $history) {
		
		$costing_method = strtoupper($history['costing_method']) == 1 ? 'AVCO' : 'FXCO';
		
		if ($history['cost'] > 0) {
			$profit = number_format(($history['price'] - $history['cost']), 4);
			$profit_margin = number_format(100*($history['price'] - $history['cost']) / ($history['cost']+($history['price'] - $history['cost'])), 2) . '%';
		} else {
			$profit = number_format(($history['price'] - $history['cost']), 4);
			$profit_margin = '0%';			
		}
				
		if ($filter_history_option == 0) {				
			$json['histories'][] = array(
				'product_stock_history_id'     		 => $history['product_stock_history_id'],
				'product_option_stock_history_id'    => 0,				
				'nooption'     			=> '1',
				'hproduct_id'     		=> $history['product_id'],
				'hdate_added' 			=> date($this->config->get('adv_date_format') == 'DDMMYYYY' ? 'd/m/Y' : 'm/d/Y', strtotime($history['date_added'])) . ' ' . date($this->config->get('adv_hour_format') == '24' ? 'H:i:s' : 'g:i:s A', strtotime($history['date_added'])),
				'comment'     			=> $history['comment'],
				'hrestock_quantity'     => $history['restock_quantity'],	
				'hstock_quantity'    	=> $history['stock_quantity'],
				'hcosting_method'    	=> $costing_method,
				'hrestock_cost'    		=> $history['restock_cost'],
				'hcost'    				=> $history['cost'],						
				'hprice'    			=> $history['price'],
				'hprofit'    			=> $profit,
				'hprofit_margin'    	=> $profit_margin
			);
		} else {
			$json['histories'][] = array(
				'product_stock_history_id'     		  => 0,			
				'product_option_stock_history_id'     => $history['product_option_stock_history_id'],
				'nooption'     			=> '0',
				'hproduct_id'     		=> $history['product_id'],
				'hdate_added' 			=> date($this->config->get('adv_date_format') == 'DDMMYYYY' ? 'd/m/Y' : 'm/d/Y', strtotime($history['date_added'])) . ' ' . date($this->config->get('adv_hour_format') == '24' ? 'H:i:s' : 'g:i:s A', strtotime($history['date_added'])),
				'comment'     			=> $history['comment'],
				'hrestock_quantity'     => $history['restock_quantity'],	
				'hstock_quantity'    	=> $history['stock_quantity'],
				'hcosting_method'    	=> $costing_method,
				'hrestock_cost'    		=> $history['restock_cost'],
				'hcost'    				=> $history['cost'],						
				'hprice'    			=> $history['price'],
				'hprofit'    			=> $profit,
				'hprofit_margin'    	=> $profit_margin	
			);		
		}
		}
		
		$pagination_history = new Pagination();
		$pagination_history->total = $prod_history_total;
		$pagination_history->page = $page_history;
		$pagination_history->limit = $this->config->get('config_admin_limit');
		$pagination_history->text = $this->language->get('text_pagination');
		$pagination_history->url = $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $this->request->get['product_id'] . '&page_history={page}', 'SSL');
			
		$json['pagination_history'] = $pagination_history->render();

		$this->response->setOutput(json_encode($json));
	  }
	}
	
	public function filter_sale() {
	  $this->data['product_id'] = isset($this->request->get['product_id']);
	  
	  if (isset($this->request->get['product_id'])) {
	  $this->data['product_id'] = isset($this->request->get['product_id']);
		
		$json = array();

		$this->data['token'] = $this->session->data['token'];

		if (isset($this->request->get['filter_sale_date_start'])) {
			$filter_sale_date_start = $this->request->get['filter_sale_date_start'];
		} else {
			$filter_sale_date_start = '';
		}

		if (isset($this->request->get['filter_sale_date_end'])) {
			$filter_sale_date_end = $this->request->get['filter_sale_date_end'];
		} else {
			$filter_sale_date_end = '';
		}
		
		$this->data['ranges_sale'] = array();
		
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcustom'),
			'value' => 'custom',
			'style' => 'color:#666',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_today'),
			'value' => 'today',
			'style' => 'color:#090',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_yesterday'),
			'value' => 'yesterday',
			'style' => 'color:#090',
		);		
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hweek'),
			'value' => 'week',
			'style' => 'color:#090',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hmonth'),
			'value' => 'month',
			'style' => 'color:#090',
		);					
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hquarter'),
			'value' => 'quarter',
			'style' => 'color:#090',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hyear'),
			'value' => 'year',
			'style' => 'color:#090',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcurrent_week'),
			'value' => 'current_week',
			'style' => 'color:#06C',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcurrent_month'),
			'value' => 'current_month',
			'style' => 'color:#06C',
		);	
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcurrent_quarter'),
			'value' => 'current_quarter',
			'style' => 'color:#06C',
		);			
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcurrent_year'),
			'value' => 'current_year',
			'style' => 'color:#06C',
		);			
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hlast_week'),
			'value' => 'last_week',
			'style' => 'color:#F90',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hlast_month'),
			'value' => 'last_month',
			'style' => 'color:#F90',
		);	
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hlast_quarter'),
			'value' => 'last_quarter',
			'style' => 'color:#F90',
		);			
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hlast_year'),
			'value' => 'last_year',
			'style' => 'color:#F90',
		);			
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hall_time'),
			'value' => 'all_time',
			'style' => 'color:#F00',
		);
		
		if (isset($this->request->get['filter_sale_range'])) {
			$filter_sale_range = $this->request->get['filter_sale_range'];
		} else {
			$filter_sale_range = 'all_time';
		}

		if (isset($this->request->get['filter_sale_order_status'])) {
			$filter_sale_order_status = explode('_', $this->request->get['filter_sale_order_status']);
		} else {
			$filter_sale_order_status = 0;
		}

		if (isset($this->request->get['filter_sale_option'])) {
			$filter_sale_option = explode('_', $this->request->get['filter_sale_option']);
		} else {
			$filter_sale_option = 0;
		}
		
		if (isset($this->request->get['sort_sale'])) {
			$sort_sale = $this->request->get['sort_sale'];
		} else {
			$sort_sale = 'product_date_added';
		}

		if (isset($this->request->get['order_sale'])) {
			$order_sale = $this->request->get['order_sale'];
		} else {
			$order_sale = 'DESC';
		}
				
		if (isset($this->request->get['page_sale'])) {
			$page_sale = $this->request->get['page_sale'];
		} else {
			$page_sale = 1;
		}
				
		$json['sales'] = array();
		
		$data = array(
			'filter_sale_date_start'	  	=> $filter_sale_date_start, 
			'filter_sale_date_end'	  		=> $filter_sale_date_end, 
			'filter_sale_range'	  	  		=> $filter_sale_range, 
			'filter_sale_order_status'	  	=> $filter_sale_order_status,
			'filter_sale_option'	  		=> $filter_sale_option,
			'sort_sale'            			=> $sort_sale,
			'order_sale'           			=> $order_sale,
			'start_sale'           	  		=> ($page_sale - 1) * $this->config->get('config_admin_limit'),
			'limit_sale'           	  		=> $this->config->get('config_admin_limit')			
		);
		
		$this->load->model('catalog/product');
		
		$this->data['order_statuses'] = $this->model_catalog_product->getOrderStatuses(); 
		$this->data['order_options'] = $this->model_catalog_product->getOrderOptions($data, $this->request->get['product_id']); 
		
		$prod_sale_total = $this->model_catalog_product->getProductSalesTotal($data, $this->request->get['product_id']);
		
		$product_sales = $this->model_catalog_product->getProductSales($data, $this->request->get['product_id']);
		
		foreach ($product_sales as $sale) {
		
			$product_profit_margin = number_format(100*($sale['product_revenue'] - $sale['product_cost']) / ($sale['product_cost']+($sale['product_revenue'] - $sale['product_cost'])), 2) . '%';
			$product_profit_margin_total = number_format(100*($sale['product_revenue_total'] - $sale['product_cost_total']) / ($sale['product_cost_total']+($sale['product_revenue_total'] - $sale['product_cost_total'])), 2) . '%';
				
			$json['sales'][] = array(
				'product_order_product_id'    	=> $sale['order_product_id'],
				'product_order_id'    			=> $sale['product_order_id'],
				'product_date_added' 			=> date($this->config->get('adv_date_format') == 'DDMMYYYY' ? 'd/m/Y' : 'm/d/Y', strtotime($sale['date_added'])),
				'product_name'    				=> $sale['product_name'],
				'product_option'    			=> html_entity_decode($sale['product_option']),						
				'product_sold'    				=> $sale['product_sold'],
				'product_total_excl_vat'  		=> $this->currency->format($sale['product_total_excl_vat'], $this->config->get('config_currency')),
				'product_tax'    				=> $this->currency->format($sale['product_tax'], $this->config->get('config_currency')),
				'product_total_incl_vat'  		=> $this->currency->format($sale['product_total_incl_vat'], $this->config->get('config_currency')),
				'product_revenue'    			=> $this->currency->format($sale['product_revenue'], $this->config->get('config_currency')),
				'product_cost'    				=> $this->currency->format($sale['product_cost'], $this->config->get('config_currency')),
				'product_profit'    			=> $this->currency->format($sale['product_profit'], $this->config->get('config_currency')),
				'product_profit_raw'    		=> $sale['product_profit'],
				'product_profit_margin'    		=> $product_profit_margin,
				'product_sold_total'    		=> $sale['product_sold_total'],
				'product_total_excl_vat_total'	=> $this->currency->format($sale['product_total_excl_vat_total'], $this->config->get('config_currency')),
				'product_tax_total'    			=> $this->currency->format($sale['product_tax_total'], $this->config->get('config_currency')),
				'product_total_incl_vat_total'	=> $this->currency->format($sale['product_total_incl_vat_total'], $this->config->get('config_currency')),
				'product_revenue_total'    		=> $this->currency->format($sale['product_revenue_total'], $this->config->get('config_currency')),
				'product_cost_total'    		=> $this->currency->format($sale['product_cost_total'], $this->config->get('config_currency')),
				'product_profit_total'    		=> $this->currency->format($sale['product_profit_total'], $this->config->get('config_currency')),
				'product_profit_raw_total'    	=> $sale['product_profit_total'],
				'product_profit_margin_total'   => $product_profit_margin_total			
			);
		}

		$pagination_sale = new Pagination();
		$pagination_sale->total = $prod_sale_total;
		$pagination_sale->page = $page_sale;
		$pagination_sale->limit = $this->config->get('config_admin_limit');
		$pagination_sale->text = $this->language->get('text_pagination');
		$pagination_sale->url = $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $this->request->get['product_id'] . '&page_sale={page}', 'SSL');
			
		$json['pagination_sale'] = $pagination_sale->render();
		
		$this->response->setOutput(json_encode($json));
	  }
	}	
            ]]></add>
        </operation>

        <operation>
            <search position="after"><![CDATA[
protected function getList() {
            ]]></search>
            <add><![CDATA[
		if (!$this->IsInstalled()) {		
			$this->session->data['error'] = $this->language->get('error_installed');
			$this->redirect($this->url->link('extension/module', 'token=' . $this->session->data['token'], 'SSL'));		
		}	
            ]]></add>
        </operation>
				
        <operation>
            <search position="after"><![CDATA[
protected function getForm() {
            ]]></search>
            <add><![CDATA[
	if (!$this->IsInstalled()) {		
		$this->session->data['error'] = $this->language->get('error_installed');
		$this->redirect($this->url->link('extension/module', 'token=' . $this->session->data['token'], 'SSL'));		
	}	
				
	$this->data['product_id'] = isset($this->request->get['product_id']);
	
	if (isset($this->request->get['product_id'])) {
		$this->data['product_id'] = isset($this->request->get['product_id']);

		$this->data['token'] = $this->session->data['token'];
			
		if (isset($this->request->get['filter_history_date_start'])) {
			$filter_history_date_start = $this->request->get['filter_history_date_start'];
		} else {
			$filter_history_date_start = '';
		}

		if (isset($this->request->get['filter_history_date_end'])) {
			$filter_history_date_end = $this->request->get['filter_history_date_end'];
		} else {
			$filter_history_date_end = '';
		}
		
		$this->data['ranges_history'] = array();
		
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcustom'),
			'value' => 'custom',
			'style' => 'color:#666',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hweek'),
			'value' => 'week',
			'style' => 'color:#090',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hmonth'),
			'value' => 'month',
			'style' => 'color:#090',
			'id' 	=> '',
		);					
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hquarter'),
			'value' => 'quarter',
			'style' => 'color:#090',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hyear'),
			'value' => 'year',
			'style' => 'color:#090',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcurrent_week'),
			'value' => 'current_week',
			'style' => 'color:#06C',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcurrent_month'),
			'value' => 'current_month',
			'style' => 'color:#06C',
			'id' 	=> '',
		);	
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcurrent_quarter'),
			'value' => 'current_quarter',
			'style' => 'color:#06C',
			'id' 	=> '',
		);			
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hcurrent_year'),
			'value' => 'current_year',
			'style' => 'color:#06C',
			'id' 	=> '',
		);			
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hlast_week'),
			'value' => 'last_week',
			'style' => 'color:#F90',
			'id' 	=> '',
		);
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hlast_month'),
			'value' => 'last_month',
			'style' => 'color:#F90',
			'id' 	=> '',
		);	
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hlast_quarter'),
			'value' => 'last_quarter',
			'style' => 'color:#F90',
			'id' 	=> '',
		);			
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hlast_year'),
			'value' => 'last_year',
			'style' => 'color:#F90',
			'id' 	=> '',
		);			
		$this->data['ranges_history'][] = array(
			'text'  => $this->language->get('stat_hall_time'),
			'value' => 'all_time',
			'style' => 'color:#F00',
			'id' 	=> 'chart_all_time',
		);
		
		if (isset($this->request->get['filter_history_range'])) {
			$filter_history_range = $this->request->get['filter_history_range'];
		} else {
			$filter_history_range = 'all_time';
		}

		if (isset($this->request->get['filter_history_option'])) {
			$filter_history_option = $this->request->get['filter_history_option'];
		} else {
			$filter_history_option = '';
		}

		if (isset($this->request->get['sort_history'])) {
			$sort_history = $this->request->get['sort_history'];
		} else {
			$sort_history = 'date_added';
		}

		if (isset($this->request->get['order_history'])) {
			$order_history = $this->request->get['order_history'];
		} else {
			$order_history = 'ASC';
		}
				
		if (isset($this->request->get['page_history'])) {
			$page_history = $this->request->get['page_history'];
		} else {
			$page_history = 1;
		}

		$this->data['sort_history'] = $sort_history;
		$this->data['order_history'] = $order_history;
		$this->data['page_history'] = $page_history;
				
		$this->load->model('catalog/product');

		$this->data['histories'] = array();
				
		$data = array(
			'filter_history_date_start'	  		=> $filter_history_date_start, 
			'filter_history_date_end'	  		=> $filter_history_date_end, 
			'filter_history_range'	  	  		=> $filter_history_range, 
			'filter_history_option'	  	  		=> $filter_history_option,
			'sort_history'            			=> $sort_history,
			'order_history'           			=> $order_history,
			'start_history'           	  		=> ($page_history - 1) * $this->config->get('config_admin_limit'),
			'limit_history'           	  		=> $this->config->get('config_admin_limit')			
		);

		$prod_history_total = $this->model_catalog_product->getProductHistoryTotal($data, $this->request->get['product_id']);
		
		$prod_history = $this->model_catalog_product->getProductHistory($data, $this->request->get['product_id']);

		$this->data['option_histories'] = $this->model_catalog_product->getProductOptionsHistory($data, $this->request->get['product_id']);
					
		foreach ($prod_history as $history) {
		
		$costing_method = strtoupper($history['costing_method']) == 1 ? 'AVCO' : 'FXCO';

		if ($history['cost'] > 0) {
			$profit = number_format(($history['price'] - $history['cost']), 4);
			$profit_margin = number_format(100*($history['price'] - $history['cost']) / ($history['cost']+($history['price'] - $history['cost'])), 2) . '%';
		} else {
			$profit = number_format(($history['price'] - $history['cost']), 4);
			$profit_margin = '0%';			
		}
		
		if ($filter_history_option == 0) {	
			$this->data['histories'][] = array(
				'product_stock_history_id'     		 => $history['product_stock_history_id'],
				'product_option_stock_history_id'    => 0,	
				'nooption'     			=> '1',
				'hproduct_id'     		=> $history['product_id'],
				'hdate_added' 			=> date($this->config->get('adv_date_format') == 'DDMMYYYY' ? 'd/m/Y' : 'm/d/Y', strtotime($history['date_added'])) . ' ' . date($this->config->get('adv_hour_format') == '24' ? 'H:i:s' : 'g:i:s A', strtotime($history['date_added'])),
				'comment'     			=> $history['comment'],
				'hrestock_quantity'     => $history['restock_quantity'],	
				'hstock_quantity'    	=> $history['stock_quantity'],
				'hcosting_method'    	=> $costing_method,
				'hrestock_cost'    		=> $history['restock_cost'],
				'hcost'    				=> $history['cost'],						
				'hprice'    			=> $history['price'],
				'hprofit'    			=> $profit,
				'hprofit_margin'    	=> $profit_margin				
			);
		} else {
			$this->data['histories'][] = array(
				'product_stock_history_id'     		  => 0,			
				'product_option_stock_history_id'     => $history['product_option_stock_history_id'],
				'nooption'     			=> '0',
				'hproduct_id'     		=> $history['product_id'],
				'hdate_added' 			=> date($this->config->get('adv_date_format') == 'DDMMYYYY' ? 'd/m/Y' : 'm/d/Y', strtotime($history['date_added'])) . ' ' . date($this->config->get('adv_hour_format') == '24' ? 'H:i:s' : 'g:i:s A', strtotime($history['date_added'])),
				'comment'     			=> $history['comment'],
				'hrestock_quantity'     => $history['restock_quantity'],	
				'hstock_quantity'    	=> $history['stock_quantity'],
				'hcosting_method'    	=> $costing_method,
				'hrestock_cost'    		=> $history['restock_cost'],
				'hcost'    				=> $history['cost'],						
				'hprice'    			=> $history['price'],
				'hprofit'    			=> $profit,
				'hprofit_margin'    	=> $profit_margin	
			);		
		}
		}

		$this->data['ghistories'] = array();
		
		$prod_ghistory = $this->model_catalog_product->getProductChartHistory($data, $this->request->get['product_id']);
		
		foreach ($prod_ghistory as $ghistory) {

			if ($ghistory['cost'] >= 0) {
				$gprofit = ($ghistory['price'] - $ghistory['cost']);
			} else {
				$gprofit = '0';
			}
					
			$this->data['ghistories'][] = array(
				'ghproduct_id'     		=> $ghistory['product_id'],
				'ghdate_added' 			=> date($this->config->get('adv_date_format') == 'DDMMYYYY' ? 'd/m/Y' : 'm/d/Y', strtotime($ghistory['date_added'])) . ' ' . date($this->config->get('adv_hour_format') == '24' ? 'H:i:s' : 'g:i:s A', strtotime($ghistory['date_added'])),	
				'ghstock_quantity'    	=> $ghistory['stock_quantity'],
				'ghcost'    			=> $ghistory['cost'],						
				'ghprice'    			=> $ghistory['price'],
				'ghprofit'    			=> $gprofit
			);
		}
		
		$url = '';

		if (isset($this->request->get['filter_history_date_start'])) {
			$url .= '&filter_history_date_start=' . $this->request->get['filter_history_date_start'];
		}
		
		if (isset($this->request->get['filter_history_date_end'])) {
			$url .= '&filter_history_date_end=' . $this->request->get['filter_history_date_end'];
		}
		
		if (isset($this->request->get['filter_history_range'])) {
			$url .= '&filter_history_range=' . $this->request->get['filter_history_range'];
		}
		
		if (isset($this->request->get['filter_history_option'])) {
			$url .= '&filter_history_option=' . $this->request->get['filter_history_option'];
		}
								
		if ($order_history == 'ASC') {
			$url .= '&order_history=DESC';
		} else {
			$url .= '&order_history=ASC';
		}

		if (isset($this->request->get['page_history'])) {
			$url .= '&page_history=' . $this->request->get['page_history'];
		}
					
		$this->data['sort_history_date_added'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=date_added' . $url, 'SSL');
		$this->data['sort_history_comment'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=comment' . $url, 'SSL');
		$this->data['sort_history_costing_method'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=costing_method' . $url, 'SSL');		
		$this->data['sort_history_restock_quantity'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=restock_quantity' . $url, 'SSL');
		$this->data['sort_history_stock_quantity'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=stock_quantity' . $url, 'SSL');
		$this->data['sort_history_restock_cost'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=restock_cost' . $url, 'SSL');
		$this->data['sort_history_cost'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=cost' . $url, 'SSL');
		$this->data['sort_history_price'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=price' . $url, 'SSL');
		$this->data['sort_history_profit'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=profit' . $url, 'SSL');
		$this->data['sort_history_profit_margin'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_history=profit' . $url, 'SSL');
		
		$pagination_history = new Pagination();
		$pagination_history->total = $prod_history_total;
		$pagination_history->page = $page_history;
		$pagination_history->limit = $this->config->get('config_admin_limit');
		$pagination_history->text = $this->language->get('text_pagination');
		$pagination_history->url = $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $this->request->get['product_id'] . '&page_history={page}', 'SSL');
			
		$this->data['pagination_history'] = $pagination_history->render();
							
		$this->data['filter_history_date_start'] = $filter_history_date_start; 
		$this->data['filter_history_date_end'] = $filter_history_date_end; 		
		$this->data['filter_history_range'] = $filter_history_range; 
		$this->data['filter_history_option'] = $filter_history_option; 	
		
		$this->data['sort_history'] = $sort_history;
		$this->data['order_history'] = $order_history;

		if (defined('_JEXEC')) {
	    $this->document->addScript(JPATH_MIJOSHOP_OC . 'admin/view/javascript/jquery/jquery.tmpl.min.js');
		$this->document->addScript(JPATH_MIJOSHOP_OC . 'admin/view/javascript/multiselect/jquery.multiselect.js');
	    $this->document->addStyle(JPATH_MIJOSHOP_OC . 'admin/view/javascript/multiselect/jquery.multiselect.css');		
		} else {
	    $this->document->addScript('view/javascript/jquery/jquery.tmpl.min.js');
		$this->document->addScript('view/javascript/multiselect/jquery.multiselect.js');
	    $this->document->addStyle('view/javascript/multiselect/jquery.multiselect.css');
		}	
		
		if (isset($this->request->get['filter_sale_date_start'])) {
			$filter_sale_date_start = $this->request->get['filter_sale_date_start'];
		} else {
			$filter_sale_date_start = '';
		}

		if (isset($this->request->get['filter_sale_date_end'])) {
			$filter_sale_date_end = $this->request->get['filter_sale_date_end'];
		} else {
			$filter_sale_date_end = '';
		}
		
		$this->data['ranges_sale'] = array();
		
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcustom'),
			'value' => 'custom',
			'style' => 'color:#666',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_today'),
			'value' => 'today',
			'style' => 'color:#090',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_yesterday'),
			'value' => 'yesterday',
			'style' => 'color:#090',
		);		
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hweek'),
			'value' => 'week',
			'style' => 'color:#090',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hmonth'),
			'value' => 'month',
			'style' => 'color:#090',
		);					
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hquarter'),
			'value' => 'quarter',
			'style' => 'color:#090',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hyear'),
			'value' => 'year',
			'style' => 'color:#090',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcurrent_week'),
			'value' => 'current_week',
			'style' => 'color:#06C',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcurrent_month'),
			'value' => 'current_month',
			'style' => 'color:#06C',
		);	
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcurrent_quarter'),
			'value' => 'current_quarter',
			'style' => 'color:#06C',
		);			
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hcurrent_year'),
			'value' => 'current_year',
			'style' => 'color:#06C',
		);			
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hlast_week'),
			'value' => 'last_week',
			'style' => 'color:#F90',
		);
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hlast_month'),
			'value' => 'last_month',
			'style' => 'color:#F90',
		);	
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hlast_quarter'),
			'value' => 'last_quarter',
			'style' => 'color:#F90',
		);			
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hlast_year'),
			'value' => 'last_year',
			'style' => 'color:#F90',
		);			
		$this->data['ranges_sale'][] = array(
			'text'  => $this->language->get('stat_hall_time'),
			'value' => 'all_time',
			'style' => 'color:#F00',
		);
		
		if (isset($this->request->get['filter_sale_range'])) {
			$filter_sale_range = $this->request->get['filter_sale_range'];
		} else {
			$filter_sale_range = 'all_time';
		}

		if (isset($this->request->get['filter_sale_order_status'])) {
			$filter_sale_order_status = explode('_', $this->request->get['filter_sale_order_status']);
		} else {
			$filter_sale_order_status = 0;
		}

		if (isset($this->request->get['filter_sale_option'])) {
			$filter_sale_option = explode('_', $this->request->get['filter_sale_option']);
		} else {
			$filter_sale_option = 0;
		}
		
		if (isset($this->request->get['sort_sale'])) {
			$sort_sale = $this->request->get['sort_sale'];
		} else {
			$sort_sale = 'product_date_added';
		}

		if (isset($this->request->get['order_sale'])) {
			$order_sale = $this->request->get['order_sale'];
		} else {
			$order_sale = 'DESC';
		}
				
		if (isset($this->request->get['page_sale'])) {
			$page_sale = $this->request->get['page_sale'];
		} else {
			$page_sale = 1;
		}

		$this->data['sort_sale'] = $sort_sale;
		$this->data['order_sale'] = $order_sale;
		$this->data['page_sale'] = $page_sale;
										
		$this->load->model('catalog/product');
				
		$this->data['sales'] = array();
				
		$data = array(
			'filter_sale_date_start'	  	=> $filter_sale_date_start, 
			'filter_sale_date_end'	  		=> $filter_sale_date_end, 
			'filter_sale_range'	  	  		=> $filter_sale_range, 
			'filter_sale_order_status'	  	=> $filter_sale_order_status,
			'filter_sale_option'	  		=> $filter_sale_option,
			'sort_sale'            			=> $sort_sale,
			'order_sale'           			=> $order_sale,
			'start_sale'           	  		=> ($page_sale - 1) * $this->config->get('config_admin_limit'),
			'limit_sale'           	  		=> $this->config->get('config_admin_limit')	
		);
		
		$this->data['order_statuses'] = $this->model_catalog_product->getOrderStatuses();
		$this->data['order_options'] = $this->model_catalog_product->getOrderOptions($data, $this->request->get['product_id']);

		$prod_sale_total = $this->model_catalog_product->getProductSalesTotal($data, $this->request->get['product_id']);
		
		$product_sales = $this->model_catalog_product->getProductSales($data, $this->request->get['product_id']);

		foreach ($product_sales as $sale) {
		
			$product_profit_margin = number_format(100* ($sale['product_revenue'] - $sale['product_cost']) / ($sale['product_cost']+($sale['product_revenue'] - $sale['product_cost'])), 2) . '%';
			$product_profit_margin_total = number_format(100*($sale['product_revenue_total'] - $sale['product_cost_total']) / ($sale['product_cost_total']+($sale['product_revenue_total'] - $sale['product_cost_total'])), 2) . '%';
				
			$this->data['sales'][] = array(
				'product_order_product_id'    	=> $sale['order_product_id'],
				'product_order_id'    			=> $sale['product_order_id'],
				'product_date_added' 			=> date($this->config->get('adv_date_format') == 'DDMMYYYY' ? 'd/m/Y' : 'm/d/Y', strtotime($sale['date_added'])),
				'product_name'    				=> $sale['product_name'],
				'product_option'    			=> html_entity_decode($sale['product_option']),						
				'product_sold'    				=> $sale['product_sold'],
				'product_total_excl_vat'  		=> $this->currency->format($sale['product_total_excl_vat'], $this->config->get('config_currency')),
				'product_tax'    				=> $this->currency->format($sale['product_tax'], $this->config->get('config_currency')),
				'product_total_incl_vat'  		=> $this->currency->format($sale['product_total_incl_vat'], $this->config->get('config_currency')),
				'product_revenue'    			=> $this->currency->format($sale['product_revenue'], $this->config->get('config_currency')),
				'product_cost'    				=> $this->currency->format($sale['product_cost'], $this->config->get('config_currency')),
				'product_profit'    			=> $this->currency->format($sale['product_profit'], $this->config->get('config_currency')),
				'product_profit_raw'    		=> $sale['product_profit'],
				'product_profit_margin'		    => $product_profit_margin,
				'product_sold_total'    		=> $sale['product_sold_total'],
				'product_total_excl_vat_total'	=> $this->currency->format($sale['product_total_excl_vat_total'], $this->config->get('config_currency')),
				'product_tax_total'    			=> $this->currency->format($sale['product_tax_total'], $this->config->get('config_currency')),
				'product_total_incl_vat_total'	=> $this->currency->format($sale['product_total_incl_vat_total'], $this->config->get('config_currency')),
				'product_revenue_total'    		=> $this->currency->format($sale['product_revenue_total'], $this->config->get('config_currency')),
				'product_cost_total'    		=> $this->currency->format($sale['product_cost_total'], $this->config->get('config_currency')),
				'product_profit_total'    		=> $this->currency->format($sale['product_profit_total'], $this->config->get('config_currency')),
				'product_profit_raw_total'    	=> $sale['product_profit_total'],
				'product_profit_margin_total'   => $product_profit_margin_total
			);
		}
		
		$url = '';

		if (isset($this->request->get['filter_sale_date_start'])) {
			$url .= '&filter_sale_date_start=' . $this->request->get['filter_sale_date_start'];
		}
		
		if (isset($this->request->get['filter_sale_date_end'])) {
			$url .= '&filter_sale_date_end=' . $this->request->get['filter_sale_date_end'];
		}
		
		if (isset($this->request->get['filter_sale_range'])) {
			$url .= '&filter_sale_range=' . $this->request->get['filter_sale_range'];
		}
		
		if (isset($this->request->get['filter_sale_order_status'])) {
			$url .= '&filter_sale_order_status=' . $this->request->get['filter_sale_order_status'];
		}

		if (isset($this->request->get['filter_sale_option'])) {
			$url .= '&filter_sale_option=' . $this->request->get['filter_sale_option'];
		}
										
		if ($order_sale == 'ASC') {
			$url .= '&order_sale=DESC';
		} else {
			$url .= '&order_sale=ASC';
		}

		if (isset($this->request->get['page_sale'])) {
			$url .= '&page_sale=' . $this->request->get['page_sale'];
		}
								
		$this->data['sort_sale_order_id'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_date_added' . $url, 'SSL');
		$this->data['sort_sale_date_added'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_date_added' . $url, 'SSL');
		$this->data['sort_sale_name'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_option' . $url, 'SSL');
		$this->data['sort_sale_quantity'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_sold' . $url, 'SSL');		
		$this->data['sort_sale_total_excl_tax'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_total_excl_vat' . $url, 'SSL');
		$this->data['sort_sale_tax'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_tax' . $url, 'SSL');		
		$this->data['sort_sale_total_incl_tax'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_total_incl_vat' . $url, 'SSL');
		$this->data['sort_sale_revenue'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_revenue' . $url, 'SSL');
		$this->data['sort_sale_cost'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_cost' . $url, 'SSL');		
		$this->data['sort_sale_profit'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_profit' . $url, 'SSL');
		$this->data['sort_sale_profit_margin'] = $this->url->link('catalog/product/edit', 'token=' . $this->session->data['token'] . '&sort_sale=product_profit' . $url, 'SSL');
		
		$pagination_sale = new Pagination();
		$pagination_sale->total = $prod_sale_total;
		$pagination_sale->page = $page_sale;
		$pagination_sale->limit = $this->config->get('config_admin_limit');
		$pagination_sale->text = $this->language->get('text_pagination');
		$pagination_sale->url = $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $this->request->get['product_id'] . '&page_sale={page}', 'SSL');
			
		$this->data['pagination_sale'] = $pagination_sale->render();
								
		$this->data['filter_sale_date_start'] = $filter_sale_date_start; 
		$this->data['filter_sale_date_end'] = $filter_sale_date_end; 		
		$this->data['filter_sale_range'] = $filter_sale_range; 
		$this->data['filter_sale_order_status'] = $filter_sale_order_status;
		$this->data['filter_sale_option'] = $filter_sale_option;		
		
		$this->data['sort_sale'] = $sort_sale;
		$this->data['order_sale'] = $order_sale;
	}
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[
protected function validateForm() {
            ]]></search>
            <add><![CDATA[
	public function download_history() {
		$this->response->addheader('Pragma: public');
		$this->response->addheader('Expires: 0');
		$this->response->addheader('Content-Description: File Transfer');
		$this->response->addheader('Content-Type: application/octet-stream');
		$this->response->addheader('Content-Disposition: attachment; filename=stock_history_'.date("Y_m_d").'.sql');
		$this->response->addheader('Content-Transfer-Encoding: binary');
		
		$this->load->model('tool/backup');
		
		$backup = array(
			DB_PREFIX . "product_stock_history",

			DB_PREFIX . "product_option_stock_history"
		);
				
		$this->response->setOutput($this->model_tool_backup->backup($backup));
	}
				
	public function delete_history() {
		$this->load->language('catalog/product');
		$this->load->model('catalog/product');
		$this->model_catalog_product->deleteProductHistory($this->request->get['product_id']);
		$durl = '';
		$this->redirect($this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $this->request->get['product_id'] . $durl, 'SSL'));
	}	

    public function saveProductStockHistoryComment() {
        $product_stock_history_id  = $this->request->get['product_stock_history_id'];
        $comment = $this->request->get['comment'];

        $this->load->model('catalog/product');

        $this->response->setOutput($this->model_catalog_product->saveProductStockHistoryComment($product_stock_history_id,$comment));
    }

    public function saveProductOptionStockHistoryComment() {
        $product_option_stock_history_id  = $this->request->get['product_option_stock_history_id'];
        $comment = $this->request->get['comment'];

        $this->load->model('catalog/product');

        $this->response->setOutput($this->model_catalog_product->saveProductOptionStockHistoryComment($product_option_stock_history_id,$comment));
    }
		
	public function IsInstalled() {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "extension WHERE code = 'adv_profit_module'");
		if (empty($query->num_rows)) {
			return false;
		}
		return true;
	}		
            ]]></add>
        </operation>
				
        <operation>
            <search position="after"><![CDATA[
$this->data['entry_price'] = $this->language->get('entry_price');
            ]]></search>
            <add><![CDATA[
		$this->data['auth'] = TRUE;
		$this->data['adv_ext_name'] = $this->language->get('adv_ext_name');
		$this->data['adv_ext_short_name'] = $this->language->get('adv_ext_short_name');
		$this->data['adv_ext_version'] = $this->language->get('adv_ext_version');	
		$this->data['adv_ext_url'] = 'http://www.opencart.com/index.php?route=extension/extension/info&extension_id=16601';
					
    	$this->data['tab_history'] = $this->language->get('tab_history');	
		$this->data['entry_hrange'] = $this->language->get('entry_hrange');			
		$this->data['entry_hdate_start'] = $this->language->get('entry_hdate_start');
		$this->data['entry_hdate_end'] = $this->language->get('entry_hdate_end');
		$this->data['entry_hoption'] = $this->language->get('entry_hoption');
		$this->data['text_nooption'] = $this->language->get('text_nooption');				
		$this->data['button_hfilter'] = $this->language->get('button_hfilter');
		$this->data['button_hdelete'] = $this->language->get('button_hdelete');
		$this->data['button_hdownload'] = $this->language->get('button_hdownload');
		$this->data['column_hdate_added'] = $this->language->get('column_hdate_added');
		$this->data['column_hcomment'] = $this->language->get('column_hcomment');	
		$this->data['column_hcosting_method'] = $this->language->get('column_hcosting_method');
		$this->data['column_hrestock_quantity'] = $this->language->get('column_hrestock_quantity');
		$this->data['column_hstock_quantity'] = $this->language->get('column_hstock_quantity');	
		$this->data['column_hrestock_cost'] = $this->language->get('column_hrestock_cost');	
		$this->data['column_hcost'] = $this->language->get('column_hcost');	
		$this->data['column_hprice'] = $this->language->get('column_hprice');	
		$this->data['column_hprofit'] = $this->language->get('column_hprofit');					
		$this->data['text_no_results'] = $this->language->get('text_no_results');
    	$this->data['entry_gcost'] = $this->language->get('entry_gcost');	
    	$this->data['entry_gprice'] = $this->language->get('entry_gprice');
		$this->data['entry_gprofit'] = $this->language->get('entry_gprofit');	
		$this->data['entry_gstock_quantity'] = $this->language->get('entry_gstock_quantity');
		$this->data['text_confirm_delete_history'] = $this->language->get('text_confirm_delete_history');	

		$this->data['tab_sales'] = $this->language->get('tab_sales');	
		$this->data['entry_sstatus'] = $this->language->get('entry_sstatus');
		$this->data['entry_soption'] = $this->language->get('entry_soption');
		$this->data['text_select_all'] = $this->language->get('text_select_all');
		$this->data['text_unselect_all'] = $this->language->get('text_unselect_all');
		$this->data['text_selected'] = $this->language->get('text_selected');
		$this->data['text_all_sstatus'] = $this->language->get('text_all_sstatus');
		$this->data['text_all_soption'] = $this->language->get('text_all_soption');
		$this->data['column_prod_order_id'] = $this->language->get('column_prod_order_id');		
		$this->data['column_prod_date_added'] = $this->language->get('column_prod_date_added');
		$this->data['column_prod_name'] = $this->language->get('column_prod_name');
    	$this->data['column_prod_sold'] = $this->language->get('column_prod_sold');
		$this->data['column_prod_total_excl_vat'] = $this->language->get('column_prod_total_excl_vat');
		$this->data['column_prod_tax'] = $this->language->get('column_prod_tax');
		$this->data['column_prod_total_incl_vat'] = $this->language->get('column_prod_total_incl_vat');
		$this->data['column_prod_sales'] = $this->language->get('column_prod_sales');
		$this->data['column_prod_cost'] = $this->language->get('column_prod_cost');
		$this->data['column_prod_profit'] = $this->language->get('column_prod_profit');
		$this->data['column_prod_totals'] = $this->language->get('column_prod_totals');

		$this->data['text_product_price'] = $this->language->get('text_product_price');			
    	$this->data['column_cost'] = $this->language->get('column_cost');	
		$this->data['entry_costing_method'] = $this->language->get('entry_costing_method');
		$this->data['entry_profit'] = $this->language->get('entry_profit');
		$this->data['entry_cost'] = $this->language->get('entry_cost');
		$this->data['help_product_cost'] = $this->language->get('help_product_cost');							
    	$this->data['text_cost_fixed'] = $this->language->get('text_cost_fixed');
		$this->data['text_cost_average'] = $this->language->get('text_cost_average');
		$this->data['text_cost_fifo'] = $this->language->get('text_cost_fifo');
		$this->data['text_cost_average_set'] = $this->language->get('text_cost_average_set');
    	$this->data['text_cost'] = $this->language->get('text_cost');				
    	$this->data['text_cost_amount'] = $this->language->get('text_cost_amount');
    	$this->data['text_cost_or'] = $this->language->get('text_cost_or');		
    	$this->data['text_cost_percentage'] = $this->language->get('text_cost_percentage');	
    	$this->data['text_cost_additional'] = $this->language->get('text_cost_additional');	
		$this->data['text_option_price'] = $this->language->get('text_option_price');	
    	$this->data['text_cost_option_cost'] = $this->language->get('text_cost_option_cost');	
    	$this->data['text_cost_option'] = $this->language->get('text_cost_option');	
    	$this->data['entry_option_restock'] = $this->language->get('entry_option_restock');
    	$this->data['entry_option_cost'] = $this->language->get('entry_option_cost');
		$this->data['text_qty_by_option'] = $this->language->get('text_qty_by_option');
		$this->data['text_qty_set_by_option'] = $this->language->get('text_qty_set_by_option');
		$this->data['text_restock_cost'] = $this->language->get('text_restock_cost');
		$this->data['text_option_restock_cost'] = $this->language->get('text_option_restock_cost');
    	$this->data['text_restock_quantity'] = $this->language->get('text_restock_quantity');
    	$this->data['text_totalstock'] = $this->language->get('text_totalstock');
		$this->data['text_option_cost_average_set'] = $this->language->get('text_option_cost_average_set');
		$this->data['text_option_totalstock'] = $this->language->get('text_option_totalstock');
		$this->data['text_option_cost'] = $this->language->get('text_option_cost');
		
		$this->data['openbay_show_menu'] = $this->config->get('openbaymanager_show_menu');
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[
$this->load->model('localisation/tax_class');
            ]]></search>
            <add><![CDATA[
    	if (isset($this->request->post['costing_method'])) {
      		$this->data['costing_method'] = $this->request->post['costing_method'];
    	} elseif (!empty($product_info)) {
      		$this->data['costing_method'] = $product_info['costing_method'];
    	} else {
			$this->data['costing_method'] = 0;
		}
							
		if (isset($this->request->post['cost'])) {
      		$this->data['cost'] = $this->request->post['cost'];
    	} else if (isset($product_info)) {
			$this->data['cost'] = $product_info['cost'];
		} else {
      		$this->data['cost'] = 0;
    	}

		if (isset($this->request->post['restock_cost'])) {
      		$this->data['restock_cost'] = $this->request->post['restock_cost'];
    	} else if (isset($product_info)) {
			$this->data['restock_cost'] = $product_info['cost_amount'] + (($product_info['cost_percentage'] / 100)*$product_info['price']) + $product_info['cost_additional'];	
		} else {
      		$this->data['restock_cost'] = 0;
    	}
		
		if (isset($this->request->post['cost_amount'])) {
      		$this->data['cost_amount'] = $this->request->post['cost_amount'];
    	} else if (isset($product_info)) {
			$this->data['cost_amount'] = $product_info['cost_amount'];
		} else {
      		$this->data['cost_amount'] = 0;
    	}
		
		if (isset($this->request->post['cost_percentage'])) {
      		$this->data['cost_percentage'] = $this->request->post['cost_percentage'];
    	} else if (isset($product_info)) {
			$this->data['cost_percentage'] = $product_info['cost_percentage'];
		} else {
      		$this->data['cost_percentage'] = 0;
    	}
		
		if (isset($this->request->post['cost_additional'])) {
      		$this->data['cost_additional'] = $this->request->post['cost_additional'];
    	} else if (isset($product_info)) {
			$this->data['cost_additional'] = $product_info['cost_additional'];
		} else {
      		$this->data['cost_additional'] = 0;
    	}
				
		if (isset($this->request->post['restock_quantity'])) {
      		$this->data['restock_quantity'] = $this->request->post['restock_quantity'];
    	} elseif (isset($this->request->get['product_id'])) {
			$this->data['restock_quantity'] = 0;
		} else {
      		$this->data['restock_quantity'] = 0;
    	}
		
		if (isset($this->request->post['restock_quantity_temp'])) {
      		$this->data['restock_quantity_temp'] = $this->request->post['restock_quantity_temp'];
    	} elseif (isset($this->request->get['product_id'])) {
			$this->data['restock_quantity_temp'] = 0;
		} else {
      		$this->data['restock_quantity_temp'] = 0;
    	}

		if (isset($this->request->post['quantity_temp'])) {
      		$this->data['quantity_temp'] = $this->request->post['quantity_temp'];
    	} elseif (isset($this->request->get['product_id'])) {
			$this->data['quantity_temp'] = 0;
		} else {
      		$this->data['quantity_temp'] = 0;
    	}	
		
		if (isset($this->request->post['remove_temp'])) {
      		$this->data['remove_temp'] = $this->request->post['remove_temp'];
    	} elseif (isset($this->request->get['product_id'])) {
			$this->data['remove_temp'] = 0;
		} else {
      		$this->data['remove_temp'] = 0;
    	}									
            ]]></add>
        </operation>

        <operation>
            <search position="after"><![CDATA[
=> $product_option_value['price_prefix'],
            ]]></search>
            <add><![CDATA[
						'option_restock_quantity' => '0',
						'cost'                    => $product_option_value['cost'],	
						'cost_amount'             => $product_option_value['cost_amount'],												
						'cost_prefix'             => $product_option_value['cost_prefix'],
						'costing_method'     	  => $product_option_value['costing_method'],	
            ]]></add>
        </operation>
	
        <operation>
            <search position="before"><![CDATA[
=> (float)$product_option_value['price'] ? $this->currency->format($product_option_value['price'], $this->config->get('config_currency')) : false,
            ]]></search>
            <add><![CDATA[
								'option_restock_quantity' => '0',
								'cost'                    => (float)$product_option_value['cost'] ? $this->currency->format($product_option_value['cost'], $this->config->get('config_currency')) : false,
								'cost_amount'             => (float)$product_option_value['cost_amount'] ? $this->currency->format($product_option_value['cost_amount'], $this->config->get('config_currency')) : false,								
								'cost_prefix'             => $product_option_value['cost_prefix'],
								'costing_method' 	  	  => $product_option_value['costing_method'],
            ]]></add>
        </operation>
	</file>


	<file name="admin/controller/sale/order.php">
        <operation>
            <search position="after"><![CDATA[
$this->data['column_price'] = $this->language->get('column_price');
            ]]></search>
            <add><![CDATA[
		$this->data['auth'] = TRUE;
		$this->data['adv_ext_name'] = $this->language->get('adv_ext_name');
		$this->data['adv_ext_short_name'] = $this->language->get('adv_ext_short_name');
		$this->data['adv_ext_version'] = $this->language->get('adv_ext_version');		
		$this->data['adv_ext_url'] = 'http://www.opencart.com/index.php?route=extension/extension/info&extension_id=16601';
					
		$this->data['entry_extra_cost'] = $this->language->get('entry_extra_cost');				
		$this->data['entry_shipping_cost'] = $this->language->get('entry_shipping_cost');
		$this->data['entry_payment_cost'] = $this->language->get('entry_payment_cost');				
		$this->data['column_cost'] = $this->language->get('column_cost');
		$this->data['edit_extra_cost'] = $this->language->get('edit_extra_cost');				
		$this->data['edit_shipping_cost'] = $this->language->get('edit_shipping_cost');
		$this->data['edit_payment_cost'] = $this->language->get('edit_payment_cost');				
		$this->data['edit_cost'] = $this->language->get('edit_cost');		
		$this->data['text_save'] = $this->language->get('text_save');
		$this->data['text_close'] = $this->language->get('text_close');	
            ]]></add>
        </operation>

		<operation>
			<search position="before"><![CDATA[
if (isset($this->error['shipping_firstname'])) {
			]]></search>
			<add><![CDATA[
		if (isset($this->error['extra_cost'])) {
			$this->data['error_extra_cost'] = $this->error['extra_cost'];
		} else {
			$this->data['error_extra_cost'] = '';
		}
					
		if (isset($this->error['shipping_cost'])) {
			$this->data['error_shipping_cost'] = $this->error['shipping_cost'];
		} else {
			$this->data['error_shipping_cost'] = '';
		}
		
		if (isset($this->error['payment_cost'])) {
			$this->data['error_payment_cost'] = $this->error['payment_cost'];
		} else {
			$this->data['error_payment_cost'] = '';
		}
			]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[
$this->data['countries'] = $this->model_localisation_country->getCountries();
			]]></search>
			<add><![CDATA[
    	if (isset($this->request->post['extra_cost'])) {
      		$this->data['extra_cost'] = $this->request->post['extra_cost'];
    	} elseif (!empty($order_info)) { 
			$this->data['extra_cost'] = $order_info['extra_cost'];
		} else {
      		$this->data['extra_cost'] = '';
    	}
					
    	if (isset($this->request->post['shipping_cost'])) {
      		$this->data['shipping_cost'] = $this->request->post['shipping_cost'];
    	} elseif (!empty($order_info)) { 
			$this->data['shipping_cost'] = $order_info['shipping_cost'];
		} else {
      		$this->data['shipping_cost'] = '';
    	}
		
    	if (isset($this->request->post['payment_cost'])) {
      		$this->data['payment_cost'] = $this->request->post['payment_cost'];
    	} elseif (!empty($order_info)) { 
			$this->data['payment_cost'] = $order_info['payment_cost'];
		} else {
      		$this->data['payment_cost'] = '';
    	}		
			]]></add>	
		</operation>
		
        <operation>
            <search position="after"><![CDATA[
'price'            => $order_product['price'],
            ]]></search>
            <add><![CDATA[
				'cost'             => $order_product['cost'],
            ]]></add>
        </operation>

		<operation>
			<search position="before"><![CDATA[
if ((utf8_strlen($this->request->post['firstname']) < 1) || (utf8_strlen($this->request->post['firstname']) > 32)) {
			]]></search>
			<add><![CDATA[	
		if ((!is_numeric($this->request->post['extra_cost']))) {
			$this->error['extra_cost'] = $this->language->get('error_extra_cost');
		}
						
		if ((!is_numeric($this->request->post['shipping_cost']))) {
			$this->error['shipping_cost'] = $this->language->get('error_shipping_cost');
		}
		
		if ((!is_numeric($this->request->post['payment_cost']))) {
			$this->error['payment_cost'] = $this->language->get('error_payment_cost');
		}		
			]]></add>
		</operation>
	
		<operation>
			<search position="after"><![CDATA[
$this->data['payment_country'] = $order_info['payment_country'];
			]]></search>
			<add><![CDATA[
			$this->data['payment_cost'] = $order_info['payment_cost'];
			$this->data['shipping_cost'] = $order_info['shipping_cost'];
			$this->data['extra_cost'] = $order_info['extra_cost'];			
			]]></add>
		</operation>

        <operation>
            <search position="after"><![CDATA[
'price'    		   => $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),
            ]]></search>
            <add><![CDATA[
					'cost'             => $product['cost'],
            ]]></add>
        </operation>
				
        <operation>
            <search position="before"><![CDATA[
public function createInvoiceNo() {
            ]]></search>
            <add><![CDATA[
    public function saveCost() {
        $id  = $this->request->get['order_product_id'];
        $cost = $this->request->get['cost'];

        $this->load->model('sale/order');

        $this->response->setOutput($this->model_sale_order->saveCost($id,$cost));
    }
	
    public function savePaymentCost() {
        $order_id  = $this->request->get['order_id'];
        $payment_cost = $this->request->get['payment_cost'];

        $this->load->model('sale/order');

        $this->response->setOutput($this->model_sale_order->savePaymentCost($order_id,$payment_cost));
    }
	
    public function saveShippingCost() {
        $order_id  = $this->request->get['order_id'];
        $shipping_cost = $this->request->get['shipping_cost'];

        $this->load->model('sale/order');

        $this->response->setOutput($this->model_sale_order->saveShippingCost($order_id,$shipping_cost));
    }	
	
    public function saveExtraCost() {
        $order_id  = $this->request->get['order_id'];
        $extra_cost = $this->request->get['extra_cost'];

        $this->load->model('sale/order');

        $this->response->setOutput($this->model_sale_order->saveExtraCost($order_id,$extra_cost));
    }		
            ]]></add>
        </operation>
	</file>
	

	<file name="admin/controller/sale/return.php">
        <operation>
            <search position="after"><![CDATA[
$this->data['entry_comment'] = $this->language->get('entry_comment');
            ]]></search>
            <add><![CDATA[
		$this->data['auth'] = TRUE;
		$this->data['adv_ext_name'] = $this->language->get('adv_ext_name');
		$this->data['adv_ext_short_name'] = $this->language->get('adv_ext_short_name');
		$this->data['adv_ext_version'] = $this->language->get('adv_ext_version');			
		$this->data['adv_ext_url'] = 'http://www.opencart.com/index.php?route=extension/extension/info&extension_id=16601';
					
		$this->data['entry_cost'] = $this->language->get('entry_cost');
		$this->data['edit_cost'] = $this->language->get('edit_cost');
		$this->data['text_save'] = $this->language->get('text_save');
		$this->data['text_close'] = $this->language->get('text_close');	
            ]]></add>
        </operation>

		<operation>
			<search position="before"><![CDATA[
if (isset($this->error['model'])) {
			]]></search>
			<add><![CDATA[
		if (isset($this->error['cost'])) {
			$this->data['error_cost'] = $this->error['cost'];
		} else {
			$this->data['error_cost'] = '';
		}
			]]></add>
		</operation>

		<operation>
			<search position="before"><![CDATA[
if (isset($this->request->post['model'])) {
			]]></search>
			<add><![CDATA[
    	if (isset($this->request->post['cost'])) {
      		$this->data['cost'] = $this->request->post['cost'];
    	} elseif (!empty($return_info)) { 
			$this->data['cost'] = $return_info['cost'];
		} else {
      		$this->data['cost'] = '';
    	}		
			]]></add>	
		</operation>
		
        <operation>
            <search position="after"><![CDATA[
$return_reason_info = $this->model_localisation_return_reason->getReturnReason($return_info['return_reason_id']);
            ]]></search>
            <add><![CDATA[
			$this->data['cost'] = $return_info['cost'];
            ]]></add>
        </operation>

		<operation>
			<search position="before"><![CDATA[
if ((utf8_strlen($this->request->post['model']) < 1) || (utf8_strlen($this->request->post['model']) > 64)) {
			]]></search>
			<add><![CDATA[	
		if ((!is_numeric($this->request->post['cost']))) {
			$this->error['cost'] = $this->language->get('error_cost');
		}		
			]]></add>
		</operation>
				
        <operation>
            <search position="before"><![CDATA[
public function history() {
            ]]></search>
            <add><![CDATA[	
    public function saveReturnCost() {
        $return_id  = $this->request->get['return_id'];
        $cost = $this->request->get['cost'];

        $this->load->model('sale/return');

        $this->response->setOutput($this->model_sale_return->saveReturnCost($return_id,$cost));
    }		
            ]]></add>
        </operation>
	</file>
	
		
	<file name="admin/language/*/catalog/product.php">
        <operation>
            <search position="before"><![CDATA[
?>
            ]]></search>
            <add><![CDATA[
$_['adv_ext_name']						= 'ADV Profit Module';
$_['adv_ext_short_name']				= 'adv_profit_module';
$_['adv_ext_version']					= '4.4';				
$_['tab_history']          		  		= 'Stock History';
$_['entry_hrange']       				= 'Statistical Range:';
$_['entry_hdate_start']  				= 'Date Start:';
$_['entry_hdate_end']    				= 'Date End:';
$_['entry_hoption']       		  		= 'Product Option:';
$_['stat_hcustom']       				= 'Custom (use date range)';
$_['stat_today']         				= 'Today';
$_['stat_yesterday']         			= 'Yesterday';
$_['stat_hweek']         				= 'Week (today -7 days)';
$_['stat_hmonth']        				= 'Month (today -30 days)';
$_['stat_hquarter']      				= 'Quarter (today -91 days)';
$_['stat_hyear']         				= 'Year (today -365 days)';
$_['stat_hcurrent_week']     			= 'Current Week (monday to today)';
$_['stat_hcurrent_month']     	 		= 'Current Month (from 1st to today)';
$_['stat_hcurrent_quarter']  		   	= 'Current Quarter (current term)';
$_['stat_hcurrent_year']     			= 'Current Year (1st Jan to today)';
$_['stat_hlast_week']        			= 'Last Week (monday to sunday)';
$_['stat_hlast_month']        			= 'Last Month (from 1st to 31st)';
$_['stat_hlast_quarter']       		 	= 'Last Quarter (last term)';
$_['stat_hlast_year']        			= 'Last Year (1st Jan to 31st Dec)';
$_['stat_hall_time']         			= 'All Time';
$_['text_nooption']         			= '--- Main Product ---';
$_['button_hfilter']       	  			= 'Filter';
$_['button_hdownload']       	  		= 'Download History';
$_['button_hdelete']       	  			= 'Delete History';
$_['column_hdate_added']       			= 'Date & Time of Change';
$_['column_hcomment']       			= 'Comment<br /><span class="help">Field can be edited by clicking on comment</span>';
$_['column_hrestock_quantity']   	  	= 'Restock Quantity';
$_['column_hstock_quantity']     	 	= 'New Quantity';
$_['column_hcosting_method']       	 	= 'Costing Method<br /><span class="help">FXCO - Fixed Cost Method<br>AVCO - Average Cost Method<br>FIFO - First In First Out</span>';
$_['column_hrestock_cost']       	  	= 'Restock Cost';
$_['column_hcost']       	  			= 'New Cost';
$_['column_hprice']       	  			= 'New Price';
$_['column_hprofit']            		= 'Profit';
$_['entry_gcost']            			= 'Cost';
$_['entry_gprice']            			= 'Price';
$_['entry_gprofit']            			= 'Profit';
$_['entry_gstock_quantity']				= 'Quantity';
$_['text_confirm_delete_history']		= 'Delete history for this product and product options?\nAre you sure?';

$_['tab_sales']            				= 'Sales History';
$_['entry_sstatus']     				= 'Order Status:';
$_['entry_soption']     				= 'Product Option:';
$_['text_select_all']   				= 'Select All';
$_['text_unselect_all']   				= 'Unselect All';
$_['text_all_sstatus']   				= 'All Statuses';
$_['text_all_soption']   				= 'All Options';
$_['text_selected']      	  			= '# Selected';
$_['column_prod_order_id']				= 'Order ID';
$_['column_prod_date_added']			= 'Date Added';
$_['column_prod_name']     				= 'Product Name / Options';
$_['column_prod_sold']   				= 'Quantity';
$_['column_prod_total_excl_vat']		= 'Total excl. Tax';
$_['column_prod_tax']        			= 'Tax';
$_['column_prod_total_incl_vat']		= 'Total incl. Tax';
$_['column_prod_sales'] 				= 'Product Sales';
$_['column_prod_cost']      	 	 	= 'Product Cost';
$_['column_prod_profit']       	  		= 'Product Profit';
$_['column_prod_totals']       	  		= 'Totals:';


$_['column_sold']		       			= 'Sold';
$_['column_cost']						= 'Cost';
$_['column_profit']						= 'Profit';
$_['text_product_price']				= 'Sale Price';
$_['entry_costing_method']			 	= 'Costing Method<br /><span class="help">The Costing Method used for calculation of Product Cost (explanation in <a href="http://www.opencartreports.com/documentation/prm/index.html" target="_blank">documentation</a></span>)';
$_['entry_profit']			 			= 'Product Profit<br /><span class="help">Profit (Sale Price minus Product Cost) and Profit Margin [%]</span>';
$_['entry_cost']			 			= 'Product Cost<br /><span class="help">The Product Cost used for profit reporting</span>';
$_['text_cost_fixed']		 			= 'Fixed Cost Method (FXCO)';
$_['text_cost_average']		 			= 'Average Cost Method (AVCO)';
$_['text_cost_fifo']		 			= 'First In First Out (FIFO)';
$_['text_cost_average_set']		 		= 'New Product Cost<br>(average value)';
$_['text_cost']					 		= 'New Product Cost';
$_['text_restock_cost']					= 'Restock<br>Product Cost';
$_['text_cost_amount']					= 'Cost<br><span style=font-size:9px;>(amount)</span>';
$_['text_cost_or']						= 'and/or';
$_['text_cost_percentage']				= 'Cost [%]<br><span style="font-size:9px;">(percentage from<br />Sale Price)</span>';
$_['text_cost_additional']				= 'Additional Cost<br><span style="font-size:9px;">(e.g. supplier<br />Shipping Costs)</span>';
$_['text_option_price']					= 'Option Price';
$_['text_cost_option_cost']				= 'Options Cost';
$_['text_cost_option']					= '<span style="font-size:9px;">(if used)</span>';
$_['text_qty_by_option']		 		= 'Set product quantity according<br>to product options quantity';
$_['text_qty_set_by_option']		 	= 'Quantity was set!';
$_['text_restock_quantity']				= 'Restock<br>Quantity';
$_['text_totalstock']					= 'New Stock<br>Quantity';
$_['entry_option_cost']					= 'Costing Method / Cost';
$_['text_option_cost_average_set']		= 'New Option Cost<br>(average value)';
$_['text_option_restock_cost']			= 'Restock<br>Option Cost';
$_['text_option_totalstock']			= 'New Stock<br>Quantity';
$_['text_option_cost']					= 'New Option Cost';

$_['error_installed']       			= 'ADV Profit Module is not installed!';
            ]]></add>
        </operation>
	</file>


	<file name="admin/language/*/sale/order.php">
        <operation>
            <search position="before"><![CDATA[
?>
            ]]></search>
            <add><![CDATA[
$_['adv_ext_name']						= 'ADV Profit Module';
$_['adv_ext_short_name']				= 'adv_profit_module';
$_['adv_ext_version']					= '4.4';
$_['entry_extra_cost']					= 'Extra Cost (per order):';
$_['edit_extra_cost']					= 'Extra Cost (per order):<br /><span class="help">Click to edit</span>';
$_['error_extra_cost']					= 'Extra Cost (per order) must be a numeric value!';
$_['entry_shipping_cost']				= 'Shipping Cost:';
$_['edit_shipping_cost']				= 'Shipping Cost:<br /><span class="help">Click to edit</span>';
$_['error_shipping_cost']				= 'Shipping Cost must be a numeric value!';
$_['entry_payment_cost']				= 'Payment Cost:';
$_['edit_payment_cost']					= 'Payment Cost:<br /><span class="help">Click to edit</span>';
$_['error_payment_cost']				= 'Payment Cost must be a numeric value!';	
$_['column_cost']						= 'Cost';
$_['edit_cost']							= 'Cost<br /><span class="help">Click to edit</span>';
$_['text_save']							= 'Save';
$_['text_close']						= 'Close';
            ]]></add>
        </operation>
	</file>
		

	<file name="admin/language/*/sale/return.php">
        <operation>
            <search position="before"><![CDATA[
?>
            ]]></search>
            <add><![CDATA[
$_['adv_ext_name']						= 'ADV Profit Module';
$_['adv_ext_short_name']				= 'adv_profit_module';
$_['adv_ext_version']					= '4.4';
$_['entry_cost']						= 'Return Cost:';
$_['edit_cost']							= 'Return Cost:<br /><span class="help">Click to edit</span>';
$_['error_cost']						= 'Return Cost must be a numeric value!';
$_['text_save']							= 'Save';
$_['text_close']						= 'Close';
            ]]></add>
        </operation>
	</file>
	
					
	<file name="admin/model/catalog/product.php">
        <operation>
            <search position="after"><![CDATA[
class ModelCatalogProduct extends Model {
            ]]></search>
            <add><![CDATA[
	public function getProductChartHistory($data = array(), $product_id) {	
		
		$sql = "SELECT * FROM " . DB_PREFIX . "product_stock_history WHERE product_id = '" . (int)$product_id . "' ORDER BY date_added ASC";
					
		$query = $this->db->query($sql);
		
		return $query->rows;
	}
				
	public function getProductHistory($data = array(), $product_id) {		
		$token = $this->session->data['token'];
		
		if (isset($data['filter_history_date_start']) && $data['filter_history_date_start']) {
			$date_start = $data['filter_history_date_start'];
		} else {
			$date_start = '';
		}

		if (isset($data['filter_history_date_end']) && $data['filter_history_date_end']) {
			$date_end = $data['filter_history_date_end'];
		} else {
			$date_end = '';
		}

		if (isset($data['filter_history_range'])) {
			$range_history = $data['filter_history_range'];
		} else {
			$range_history = 'all_time';
		}
		
		switch($range_history) 
		{
			case 'custom';
				$date_start = "DATE(date_added) >= '" . $this->db->escape($data['filter_history_date_start']) . "'";
				$date_end = " AND DATE(date_added) <= '" . $this->db->escape($data['filter_history_date_end']) . "'";				
				break;
			case 'week';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-7 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";	
				break;			
			case 'month';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-30 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";					
				break;			
			case 'quarter';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-91 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";						
				break;
			case 'year';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-365 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";					
				break;
			case 'current_week';
				$date_start = "DATE(date_added) >= CURDATE() - WEEKDAY(CURDATE())";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";			
				break;	
			case 'current_month';
				$date_start = "YEAR(date_added) = YEAR(CURDATE())";
				$date_end = " AND MONTH(date_added) = MONTH(CURDATE())";			
				break;
			case 'current_quarter';
				$date_start = "QUARTER(date_added) = QUARTER(CURDATE())";
				$date_end = " AND YEAR(date_added) = YEAR(CURDATE())";					
				break;					
			case 'current_year';
				$date_start = "YEAR(date_added) = YEAR(CURDATE())";
				$date_end = '';				
				break;					
			case 'last_week';
				$date_start = "DATE(date_added) >= CURDATE() - INTERVAL DAYOFWEEK(CURDATE())+5 DAY";
				$date_end = " AND DATE(date_added) < CURDATE() - INTERVAL DAYOFWEEK(CURDATE())-2 DAY";				
				break;	
			case 'last_month';
				$date_start = "DATE(date_added) >= DATE_FORMAT(CURRENT_DATE - INTERVAL 1 MONTH, '%Y/%m/01')";
				$date_end = " AND DATE(date_added) < DATE_FORMAT(CURRENT_DATE, '%Y/%m/01')";				
				break;
			case 'last_quarter';
				$date_start = "QUARTER(date_added) = QUARTER(DATE_ADD(NOW(), INTERVAL -3 MONTH))";
				$date_end = '';				
				break;					
			case 'last_year';
				$date_start = "DATE(date_added) >= DATE_FORMAT(CURRENT_DATE - INTERVAL 1 YEAR, '%Y/01/01')";
				$date_end = " AND DATE(date_added) < DATE_FORMAT(CURRENT_DATE, '%Y/01/01')";				
				break;					
			case 'all_time';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d','0')) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";						
				break;	
		}

		if (isset($data['filter_history_option'])) {
			$option_history = $data['filter_history_option'];
		} else {
			$option_history = '';
		}

		if (isset($data['filter_history_option']) && $data['filter_history_option'] == 0) {			
			$sql = "SELECT *, (price-cost) AS profit FROM " . DB_PREFIX . "product_stock_history WHERE product_id = '" . (int)$product_id . "' AND (" . $date_start . $date_end . ")";
		} else {
			$sql = "SELECT *, (price-cost) AS profit FROM " . DB_PREFIX . "product_option_stock_history WHERE product_id = '" . (int)$product_id . "' AND CONCAT(product_option_id,option_id,option_value_id) = '" . $option_history . "' AND (" . $date_start . $date_end . ")";		
		}

		$sort_data = array(
			'date_added',
			'comment',
			'costing_method',			
			'restock_quantity',
			'stock_quantity',
			'restock_cost',
			'cost',
			'price',
			'profit'
		);	
			
		if (isset($data['sort_history']) && in_array($data['sort_history'], $sort_data)) {
			$sql .= " ORDER BY " . $data['sort_history'];	
		} else {
			$sql .= " ORDER BY date_added";	
		}
			
		if (isset($data['order_history']) && ($data['order_history'] == 'DESC')) {
			$sql .= " DESC";
		} else {
			$sql .= " ASC";
		}
					
		if (isset($data['start_history']) || isset($data['limit_history'])) {
			if ($data['start_history'] < 0) {
				$data['start_history'] = 0;
			}				

			if ($data['limit_history'] < 1) {
				$data['limit_history'] = 20;
			}	
		
			$sql .= " LIMIT " . (int)$data['start_history'] . "," . (int)$data['limit_history'];
		}
					
		$query = $this->db->query($sql);
		
		return $query->rows;
	}
	
	public function getProductHistoryTotal($data = array(), $product_id) {
		if (isset($data['filter_history_date_start']) && $data['filter_history_date_start']) {
			$date_start = $data['filter_history_date_start'];
		} else {
			$date_start = '';
		}

		if (isset($data['filter_history_date_end']) && $data['filter_history_date_end']) {
			$date_end = $data['filter_history_date_end'];
		} else {
			$date_end = '';
		}

		if (isset($data['filter_history_range'])) {
			$range_history = $data['filter_history_range'];
		} else {
			$range_history = 'all_time';
		}

		switch($range_history) 
		{
			case 'custom';
				$date_start = "DATE(date_added) >= '" . $this->db->escape($data['filter_history_date_start']) . "'";
				$date_end = " AND DATE(date_added) <= '" . $this->db->escape($data['filter_history_date_end']) . "'";				
				break;
			case 'week';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-7 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";	
				break;			
			case 'month';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-30 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";					
				break;			
			case 'quarter';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-91 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";						
				break;
			case 'year';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-365 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";					
				break;
			case 'current_week';
				$date_start = "DATE(date_added) >= CURDATE() - WEEKDAY(CURDATE())";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";			
				break;	
			case 'current_month';
				$date_start = "YEAR(date_added) = YEAR(CURDATE())";
				$date_end = " AND MONTH(date_added) = MONTH(CURDATE())";			
				break;
			case 'current_quarter';
				$date_start = "QUARTER(date_added) = QUARTER(CURDATE())";
				$date_end = " AND YEAR(date_added) = YEAR(CURDATE())";					
				break;					
			case 'current_year';
				$date_start = "YEAR(date_added) = YEAR(CURDATE())";
				$date_end = '';			
				break;					
			case 'last_week';
				$date_start = "DATE(date_added) >= CURDATE() - INTERVAL DAYOFWEEK(CURDATE())+5 DAY";
				$date_end = " AND DATE(date_added) < CURDATE() - INTERVAL DAYOFWEEK(CURDATE())-2 DAY";				
				break;	
			case 'last_month';
				$date_start = "DATE(date_added) >= DATE_FORMAT(CURRENT_DATE - INTERVAL 1 MONTH, '%Y/%m/01')";
				$date_end = " AND DATE(date_added) < DATE_FORMAT(CURRENT_DATE, '%Y/%m/01')";				
				break;
			case 'last_quarter';
				$date_start = "QUARTER(date_added) = QUARTER(DATE_ADD(NOW(), INTERVAL -3 MONTH))";
				$date_end = '';				
				break;					
			case 'last_year';
				$date_start = "DATE(date_added) >= DATE_FORMAT(CURRENT_DATE - INTERVAL 1 YEAR, '%Y/01/01')";
				$date_end = " AND DATE(date_added) < DATE_FORMAT(CURRENT_DATE, '%Y/01/01')";				
				break;					
			case 'all_time';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d','0')) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";						
				break;	
		}

		if (isset($data['filter_history_option'])) {
			$option_history = $data['filter_history_option'];
		} else {
			$option_history = '';
		}

		if (isset($data['filter_history_option']) && $data['filter_history_option'] == 0) {				
			$sql = "SELECT COUNT(product_id) AS total FROM " . DB_PREFIX . "product_stock_history WHERE product_id = '" . (int)$product_id . "' AND (" . $date_start . $date_end . ")";
		} else {
			$sql = "SELECT COUNT(product_id) AS total FROM " . DB_PREFIX . "product_option_stock_history WHERE product_id = '" . (int)$product_id . "' AND CONCAT(product_option_id,option_id,option_value_id) = '" . $option_history . "' AND (" . $date_start . $date_end . ")";
		}
		
		$query = $this->db->query($sql);
		
		return $query->row['total'];
	}
	
	public function getProductSales($data = array(), $product_id) {		
		$token = $this->session->data['token'];
		
		if (isset($data['filter_sale_date_start']) && $data['filter_sale_date_start']) {
			$date_start = $data['filter_sale_date_start'];
		} else {
			$date_start = '';
		}

		if (isset($data['filter_sale_date_end']) && $data['filter_sale_date_end']) {
			$date_end = $data['filter_sale_date_end'];
		} else {
			$date_end = '';
		}

		if (isset($data['filter_sale_range'])) {
			$range_sale = $data['filter_sale_range'];
		} else {
			$range_sale = 'all_time';
		}
		
		switch($range_sale) 
		{
			case 'custom';
				$date_start = "DATE(date_added) >= '" . $this->db->escape($data['filter_sale_date_start']) . "'";
				$date_end = " AND DATE(date_added) <= '" . $this->db->escape($data['filter_sale_date_end']) . "'";				
				break;
			case 'today';
				$date_start = "DATE(date_added) = CURDATE()";
				$date_end = '';
				break;
			case 'yesterday';
				$date_start = "DATE(date_added) >= DATE_ADD(CURDATE(), INTERVAL -1 DAY)";
				$date_end = " AND DATE(date_added) < CURDATE()";
				break;					
			case 'week';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-7 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";	
				break;			
			case 'month';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-30 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";					
				break;			
			case 'quarter';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-91 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";						
				break;
			case 'year';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-365 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";					
				break;
			case 'current_week';
				$date_start = "DATE(date_added) >= CURDATE() - WEEKDAY(CURDATE())";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";			
				break;	
			case 'current_month';
				$date_start = "YEAR(date_added) = YEAR(CURDATE())";
				$date_end = " AND MONTH(date_added) = MONTH(CURDATE())";			
				break;
			case 'current_quarter';
				$date_start = "QUARTER(date_added) = QUARTER(CURDATE())";
				$date_end = " AND YEAR(date_added) = YEAR(CURDATE())";					
				break;					
			case 'current_year';
				$date_start = "YEAR(date_added) = YEAR(CURDATE())";
				$date_end = '';			
				break;					
			case 'last_week';
				$date_start = "DATE(date_added) >= CURDATE() - INTERVAL DAYOFWEEK(CURDATE())+5 DAY";
				$date_end = " AND DATE(date_added) < CURDATE() - INTERVAL DAYOFWEEK(CURDATE())-2 DAY";				
				break;	
			case 'last_month';
				$date_start = "DATE(date_added) >= DATE_FORMAT(CURRENT_DATE - INTERVAL 1 MONTH, '%Y/%m/01')";
				$date_end = " AND DATE(date_added) < DATE_FORMAT(CURRENT_DATE, '%Y/%m/01')";				
				break;
			case 'last_quarter';
				$date_start = "QUARTER(date_added) = QUARTER(DATE_ADD(NOW(), INTERVAL -3 MONTH))";
				$date_end = '';				
				break;					
			case 'last_year';
				$date_start = "DATE(date_added) >= DATE_FORMAT(CURRENT_DATE - INTERVAL 1 YEAR, '%Y/01/01')";
				$date_end = " AND DATE(date_added) < DATE_FORMAT(CURRENT_DATE, '%Y/01/01')";				
				break;					
			case 'all_time';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d','0')) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";						
				break;	
		}

		$date = ' AND (' . $date_start . $date_end . ')';

		$order_status = '';
		if (!empty($data['filter_sale_order_status'])) {
			$order_status = " AND (";
			$implode = array();
			foreach ($data['filter_sale_order_status'] as $filter_sale_order_status) {
				$implode[] = "o.order_status_id = '" . (int)$filter_sale_order_status . "'";
			}

			if ($implode) {
				$order_status .= implode(" OR ", $implode) . "";
			}
			$order_status .= ")";
		} else {
		$order_status = ' AND o.order_status_id > 0';
		}

		$sale_option = '';
		if (!empty($data['filter_sale_option'])) {
			$sale_option = " AND (";
			$implode = array();
			foreach ($data['filter_sale_option'] as $filter_sale_option) {
				$implode[] = "(SELECT DISTINCT oo.order_id FROM `" . DB_PREFIX . "order_option` oo WHERE op.order_product_id = oo.order_product_id AND HEX(CONCAT(oo.name, oo.value, oo.type)) = '" . $filter_sale_option . "')";
			}

			if ($implode) {
				$sale_option .= implode(" AND ", $implode) . "";
			}
			$sale_option .= ")";
		}
				
		$sql = "SELECT o.*, 
		op.product_id, 
		op.order_product_id, 
		CONCAT('<a href=\"index.php?route=sale/order/info&token=$token&order_id=',op.order_id,'\">',op.order_id,'</a>') AS product_order_id, 
		o.date_added AS product_date_added, 
		op.name AS product_name, 
		(SELECT GROUP_CONCAT(CONCAT(oo.name,': ',oo.value) SEPARATOR '<br>') FROM `" . DB_PREFIX . "order_option` oo WHERE op.order_product_id = oo.order_product_id AND (oo.type != 'textarea' OR oo.type != 'file' OR oo.type != 'date' OR oo.type != 'datetime' OR oo.type != 'time') ORDER BY op.order_product_id) AS product_option,  
		SUM(op.quantity) AS product_sold, 
		SUM(op.total) AS product_total_excl_vat, 
		SUM(op.tax*op.quantity) AS product_tax, 
		SUM(op.total+(op.tax*op.quantity)) AS product_total_incl_vat, 
		SUM(op.total) AS product_revenue, 
		SUM(op.cost*op.quantity) AS product_cost, 
		SUM(op.total - (op.cost*op.quantity)) AS product_profit, 
		(SELECT SUM(op.quantity) FROM `" . DB_PREFIX . "order` o INNER JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE op.product_id = '" . (int)$product_id . "'" . $date . $order_status . $sale_option . ") AS product_sold_total, 
		(SELECT SUM(op.total) FROM `" . DB_PREFIX . "order` o INNER JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE op.product_id = '" . (int)$product_id . "'" . $date . $order_status . $sale_option . ") AS product_total_excl_vat_total, 
		(SELECT SUM(op.tax*op.quantity) FROM `" . DB_PREFIX . "order` o INNER JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE op.product_id = '" . (int)$product_id . "'" . $date . $order_status . $sale_option . ") AS product_tax_total, 
		(SELECT SUM(op.total+(op.tax*op.quantity)) FROM `" . DB_PREFIX . "order` o INNER JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE op.product_id = '" . (int)$product_id . "'" . $date . $order_status . $sale_option . ") AS product_total_incl_vat_total, 
		(SELECT SUM(op.total) FROM `" . DB_PREFIX . "order` o INNER JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE op.product_id = '" . (int)$product_id . "'" . $date . $order_status . $sale_option . ") AS product_revenue_total, 
		(SELECT SUM(op.cost*op.quantity) FROM `" . DB_PREFIX . "order` o INNER JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE op.product_id = '" . (int)$product_id . "'" . $date . $order_status . $sale_option . ") AS product_cost_total, 
		(SELECT SUM(op.total - (op.cost*op.quantity)) FROM `" . DB_PREFIX . "order` o INNER JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE op.product_id = '" . (int)$product_id . "'" . $date . $order_status . $sale_option . ") AS product_profit_total 
				
		FROM `" . DB_PREFIX . "order` o INNER JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE op.product_id = '" . (int)$product_id . "'" . $date . $order_status . $sale_option;
			
		$sql .= " GROUP BY op.order_id, product_option";

		$sort_data = array(
			'product_order_id',
			'product_date_added',
			'product_option',
			'product_sold',
			'product_total_excl_vat',
			'product_tax',
			'product_total_incl_vat',			
			'product_revenue',
			'product_cost',												
			'product_profit'
		);	
			
		if (isset($data['sort_sale']) && in_array($data['sort_sale'], $sort_data)) {
			$sql .= " ORDER BY " . $data['sort_sale'];	
		} else {
			$sql .= " ORDER BY product_date_added";	
		}
			
		if (isset($data['order_sale']) && ($data['order_sale'] == 'DESC')) {
			$sql .= " DESC";
		} else {
			$sql .= " ASC";
		}
					
		if (isset($data['start_sale']) || isset($data['limit_sale'])) {
			if ($data['start_sale'] < 0) {
				$data['start_sale'] = 0;
			}				

			if ($data['limit_sale'] < 1) {
				$data['limit_sale'] = 20;
			}	
		
			$sql .= " LIMIT " . (int)$data['start_sale'] . "," . (int)$data['limit_sale'];
		}
		
		$query = $this->db->query($sql);
		
		return $query->rows;
	}	

	public function getProductSalesTotal($data = array(), $product_id) {
		if (isset($data['filter_sale_date_start']) && $data['filter_sale_date_start']) {
			$date_start = $data['filter_sale_date_start'];
		} else {
			$date_start = '';
		}

		if (isset($data['filter_sale_date_end']) && $data['filter_sale_date_end']) {
			$date_end = $data['filter_sale_date_end'];
		} else {
			$date_end = '';
		}

		if (isset($data['filter_sale_range'])) {
			$range_sale = $data['filter_sale_range'];
		} else {
			$range_sale = 'all_time';
		}
		
		switch($range_sale) 
		{
			case 'custom';
				$date_start = "DATE(date_added) >= '" . $this->db->escape($data['filter_sale_date_start']) . "'";
				$date_end = " AND DATE(date_added) <= '" . $this->db->escape($data['filter_sale_date_end']) . "'";				
				break;
			case 'today';
				$date_start = "DATE(date_added) = CURDATE()";
				$date_end = '';
				break;
			case 'yesterday';
				$date_start = "DATE(date_added) >= DATE_ADD(CURDATE(), INTERVAL -1 DAY)";
				$date_end = " AND DATE(date_added) < CURDATE()";
				break;					
			case 'week';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-7 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";	
				break;			
			case 'month';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-30 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";					
				break;			
			case 'quarter';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-91 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";						
				break;
			case 'year';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d', strtotime('-365 day'))) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";					
				break;
			case 'current_week';
				$date_start = "DATE(date_added) >= CURDATE() - WEEKDAY(CURDATE())";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";			
				break;	
			case 'current_month';
				$date_start = "YEAR(date_added) = YEAR(CURDATE())";
				$date_end = " AND MONTH(date_added) = MONTH(CURDATE())";			
				break;
			case 'current_quarter';
				$date_start = "QUARTER(date_added) = QUARTER(CURDATE())";
				$date_end = " AND YEAR(date_added) = YEAR(CURDATE())";					
				break;					
			case 'current_year';
				$date_start = "YEAR(date_added) = YEAR(CURDATE())";
				$date_end = '';			
				break;					
			case 'last_week';
				$date_start = "DATE(date_added) >= CURDATE() - INTERVAL DAYOFWEEK(CURDATE())+5 DAY";
				$date_end = " AND DATE(date_added) < CURDATE() - INTERVAL DAYOFWEEK(CURDATE())-2 DAY";				
				break;	
			case 'last_month';
				$date_start = "DATE(date_added) >= DATE_FORMAT(CURRENT_DATE - INTERVAL 1 MONTH, '%Y/%m/01')";
				$date_end = " AND DATE(date_added) < DATE_FORMAT(CURRENT_DATE, '%Y/%m/01')";				
				break;
			case 'last_quarter';
				$date_start = "QUARTER(date_added) = QUARTER(DATE_ADD(NOW(), INTERVAL -3 MONTH))";
				$date_end = '';				
				break;					
			case 'last_year';
				$date_start = "DATE(date_added) >= DATE_FORMAT(CURRENT_DATE - INTERVAL 1 YEAR, '%Y/01/01')";
				$date_end = " AND DATE(date_added) < DATE_FORMAT(CURRENT_DATE, '%Y/01/01')";				
				break;					
			case 'all_time';
				$date_start = "DATE(date_added) >= '" . $this->db->escape(date('Y-m-d','0')) . "'";
				$date_end = " AND DATE(date_added) <= DATE (NOW())";						
				break;	
		}

		$sql = "SELECT COUNT(op.order_product_id) AS total FROM `" . DB_PREFIX . "order` o INNER JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE op.product_id = '" . (int)$product_id . "'";

		if (!empty($data['filter_sale_order_status'])) {
			$sql .= " AND (";
			$implode = array();
			foreach ($data['filter_sale_order_status'] as $filter_sale_order_status) {
				$implode[] = "o.order_status_id = '" . (int)$filter_sale_order_status . "'";
			}

			if ($implode) {
				$sql .= implode(" OR ", $implode) . "";
			}
			$sql .= ")";
		} else {
			$sql .= " AND o.order_status_id > '0'";
		}
		
		if (!empty($data['filter_sale_option'])) {
			$sql .= " AND (";
			$implode = array();
			foreach ($data['filter_sale_option'] as $filter_sale_option) {
				$implode[] = "(SELECT DISTINCT oo.order_id FROM `" . DB_PREFIX . "order_option` oo WHERE op.order_product_id = oo.order_product_id AND HEX(CONCAT(oo.name, oo.value, oo.type)) = '" . $filter_sale_option . "')";
			}

			if ($implode) {
				$sql .= implode(" AND ", $implode) . "";
			}
			$sql .= ")";
		}
				
		$sql .= ' AND (' . $date_start . $date_end . ')';
				
		$query = $this->db->query($sql);
		
		return $query->row['total'];
	}
            ]]></add>
        </operation>
		
        <operation>
            <search position="replace"><![CDATA[
, price = '" . (float)$data['price'] . "'
            ]]></search>
            <add trim="true"><![CDATA[
, price = '" . (float)$data['price'] . "', cost = '" . (float)$data['cost'] . "', cost_amount = '" . (float)$data['cost_amount'] . "', cost_percentage = '" . (float)$data['cost_percentage'] . "', cost_additional = '" . (float)$data['cost_additional'] . "', costing_method = '" . (int)$data['costing_method'] . "'
            ]]></add>
        </operation>
					
        <operation>
            <search position="replace"><![CDATA[
, price_prefix = '" . $this->db->escape($product_option_value['price_prefix']) . "'
            ]]></search>
            <add trim="true"><![CDATA[
, price_prefix = '" . $this->db->escape($product_option_value['price_prefix']) . "', cost = '" . (float)$product_option_value['cost'] . "', cost_amount = '" . $cost_amount . "', costing_method = '" . (int)$product_option_value['costing_method'] . "', cost_prefix = '" . $this->db->escape($product_option_value['cost_prefix']) . "'
            ]]></add>
        </operation>
		
        <operation>
            <search position="before" index="1"><![CDATA[
foreach ($data['product_description'] as $language_id => $value) {
            ]]></search>
            <add><![CDATA[
		$restock_cost = $data['costing_method'] == '1' ? (float)$data['restock_cost'] : (float)$data['cost'];
		$this->db->query("INSERT INTO " . DB_PREFIX . "product_stock_history (product_id, restock_quantity, stock_quantity, costing_method, restock_cost, cost, price, comment, date_added) SELECT '" . (int)$product_id . "', '0', '" . (int)$data['quantity'] . "', '" . (int)$data['costing_method'] . "', '" . $restock_cost . "', '" . (float)$data['cost'] . "', '" . (float)$data['price'] . "', '', NOW() FROM DUAL WHERE NOT EXISTS (SELECT product_id FROM " . DB_PREFIX . "product_stock_history WHERE product_id = '" . (int)$product_id . "') OR EXISTS (SELECT p1.product_id FROM " . DB_PREFIX . "product_stock_history AS p1 LEFT JOIN " . DB_PREFIX . "product_stock_history AS p2 ON p1.product_id = p2.product_id AND p1.date_added < p2.date_added WHERE p2.product_id IS NULL AND p1.product_id = '" . (int)$product_id . "' AND (p1.cost <> '" . (float)$data['cost'] . "' OR p1.price <> '" . (float)$data['price'] . "' OR p1.stock_quantity <> '" . (int)$data['quantity'] . "'))");
            ]]></add>
        </operation>

        <operation>
            <search position="before" index="2"><![CDATA[
foreach ($data['product_description'] as $language_id => $value) {
            ]]></search>
            <add><![CDATA[
		$restock_cost = $data['costing_method'] == '1' ? (float)$data['restock_cost'] : (float)$data['cost'];
		$this->db->query("INSERT INTO " . DB_PREFIX . "product_stock_history (product_id, restock_quantity, stock_quantity, costing_method, restock_cost, cost, price, comment, date_added) SELECT '" . (int)$product_id . "', '" . (int)$data['restock_quantity'] . "', '" . (int)$data['quantity'] . "', '" . (int)$data['costing_method'] . "', '" . $restock_cost . "', '" . (float)$data['cost'] . "', '" . (float)$data['price'] . "', '', NOW() FROM DUAL WHERE NOT EXISTS (SELECT product_id FROM " . DB_PREFIX . "product_stock_history WHERE product_id = '" . (int)$product_id . "') OR EXISTS (SELECT p1.product_id FROM " . DB_PREFIX . "product_stock_history AS p1 LEFT JOIN " . DB_PREFIX . "product_stock_history AS p2 ON p1.product_id = p2.product_id AND p1.date_added < p2.date_added WHERE p2.product_id IS NULL AND p1.product_id = '" . (int)$product_id . "' AND (p1.cost <> '" . (float)$data['cost'] . "' OR p1.price <> '" . (float)$data['price'] . "' OR p1.stock_quantity <> '" . (int)$data['quantity'] . "'))");
            ]]></add>
        </operation>

        <operation>
            <search position="after" index="1" offset="1"><![CDATA[
foreach ($product_option['product_option_value'] as $product_option_value) {
            ]]></search>
            <add><![CDATA[
							$this->db->query("INSERT INTO " . DB_PREFIX . "product_option_stock_history (product_option_id, product_id, option_id, option_value_id, stock_quantity, costing_method, cost, price, comment, date_added) SELECT '" . (int)$product_option_id . "', '" . (int)$product_id . "', '" . (int)$product_option['option_id'] . "', '" . (int)$product_option_value['option_value_id'] . "', '" . (int)$product_option_value['quantity'] . "', '" . (int)$product_option_value['costing_method'] . "', '" . (float)$product_option_value['cost'] . "', '" . (float)$product_option_value['price'] . "', '', NOW() FROM DUAL WHERE NOT EXISTS (SELECT product_id, option_id, option_value_id FROM " . DB_PREFIX . "product_option_stock_history WHERE product_id = '" . (int)$product_id . "' AND option_id = '" . (int)$product_option['option_id'] . "' AND option_value_id = '" . (int)$product_option_value['option_value_id'] . "') OR EXISTS (SELECT p1.product_id, p1.option_id, p1.option_value_id FROM " . DB_PREFIX . "product_option_stock_history AS p1 LEFT JOIN " . DB_PREFIX . "product_option_stock_history AS p2 ON p1.product_id = p2.product_id AND p1.option_id = p2.option_id AND p1.option_value_id = p2.option_value_id AND p1.date_added < p2.date_added WHERE p2.product_id IS NULL AND p2.option_id IS NULL AND p2.option_value_id IS NULL AND p1.product_id = '" . (int)$product_id . "' AND p1.option_id = '" . (int)$product_option['option_id'] . "' AND p1.option_value_id = '" . (int)$product_option_value['option_value_id'] . "' AND (p1.cost <> '" . (float)$product_option_value['cost'] . "' OR p1.price <> '" . (float)$product_option_value['price'] . "' OR p1.stock_quantity <> '" . (int)$product_option_value['quantity'] . "'))");
            ]]></add>
        </operation>

        <operation>
            <search position="after" index="2" offset="1"><![CDATA[
foreach ($product_option['product_option_value'] as $product_option_value) {
            ]]></search>
            <add><![CDATA[
							$this->db->query("INSERT INTO " . DB_PREFIX . "product_option_stock_history (product_option_id, product_id, option_id, option_value_id, restock_quantity, stock_quantity, costing_method, restock_cost, cost, price, comment, date_added) SELECT '" . (int)$product_option_id . "', '" . (int)$product_id . "', '" . (int)$product_option['option_id'] . "', '" . (int)$product_option_value['option_value_id'] . "', '" . (int)$product_option_value['option_restock_quantity'] . "', '" . (int)$product_option_value['quantity'] . "', '" . (int)$product_option_value['costing_method'] . "', '" . (float)$product_option_value['cost_amount'] . "', '" . (float)$product_option_value['cost'] . "', '" . (float)$product_option_value['price'] . "', '', NOW() FROM DUAL WHERE NOT EXISTS (SELECT product_id, option_id, option_value_id FROM " . DB_PREFIX . "product_option_stock_history WHERE product_id = '" . (int)$product_id . "' AND option_id = '" . (int)$product_option['option_id'] . "' AND option_value_id = '" . (int)$product_option_value['option_value_id'] . "') OR EXISTS (SELECT p1.product_id, p1.option_id, p1.option_value_id FROM " . DB_PREFIX . "product_option_stock_history AS p1 LEFT JOIN " . DB_PREFIX . "product_option_stock_history AS p2 ON p1.product_id = p2.product_id AND p1.option_id = p2.option_id AND p1.option_value_id = p2.option_value_id AND p1.date_added < p2.date_added WHERE p2.product_id IS NULL AND p2.option_id IS NULL AND p2.option_value_id IS NULL AND p1.product_id = '" . (int)$product_id . "' AND p1.option_id = '" . (int)$product_option['option_id'] . "' AND p1.option_value_id = '" . (int)$product_option_value['option_value_id'] . "' AND (p1.cost <> '" . (float)$product_option_value['cost'] . "' OR p1.price <> '" . (float)$product_option_value['price'] . "' OR p1.stock_quantity <> '" . (int)$product_option_value['quantity'] . "'))");
							$this->db->query("DELETE FROM " . DB_PREFIX . "product_option_stock_history WHERE product_id = '" . (int)$product_id . "' AND product_option_id = '" . (int)$product_option_id . "' AND option_id = '" . (int)$product_option['option_id'] . "' AND option_value_id NOT IN (SELECT option_value_id FROM " . DB_PREFIX . "product_option_value WHERE product_id = '" . (int)$product_id . "' AND product_option_id = '" . (int)$product_option_id . "' AND option_id = '" . (int)$product_option['option_id'] . "')");
            ]]></add>
        </operation>

        <operation>
            <search position="after"><![CDATA[
foreach ($product_option['product_option_value'] as $product_option_value) {
            ]]></search>
            <add><![CDATA[
if ($product_option_value['cost'] > 0 && $product_option_value['cost_amount'] == 0) {			
	$cost_amount = (float)$product_option_value['cost'];
} else {
	$cost_amount = (float)$product_option_value['cost_amount'];
}	
            ]]></add>
        </operation>
								
        <operation>
            <search position="before" index="2"><![CDATA[
$this->db->query("DELETE FROM " . DB_PREFIX . "product_description WHERE product_id = '" . (int)$product_id . "'");
            ]]></search>
            <add><![CDATA[
		$this->db->query("DELETE FROM " . DB_PREFIX . "product_stock_history WHERE product_id = '" . (int)$product_id . "'");
		$this->db->query("DELETE FROM " . DB_PREFIX . "product_option_stock_history WHERE product_id = '" . (int)$product_id . "'");		
            ]]></add>
        </operation>
			
        <operation>
            <search position="after"><![CDATA[
$data['status'] = '0';
            ]]></search>
            <add><![CDATA[
			$data['restock_quantity'] = '0';
			$data['costing_method'] = '0';
			$data['restock_quantity_temp'] = '0';
			$data['quantity_temp'] = $data['quantity'];
			$data['remove_temp'] = '0';
            ]]></add>
        </operation>
	
        <operation>
            <search position="before"><![CDATA[
public function getProductOptions($product_id) {
            ]]></search>
            <add><![CDATA[
	public function getProductOptionsHistory($data = array(), $product_id) {
		$query = $this->db->query("SELECT CONCAT(poh.product_option_id,poh.option_id,poh.option_value_id) AS options, od.name AS option_name, ovd.name AS option_value FROM `" . DB_PREFIX . "product_option_stock_history` poh, `" . DB_PREFIX . "option_description` od, `" . DB_PREFIX . "option_value_description` ovd WHERE poh.product_id = '" . (int)$product_id . "' AND poh.option_id = od.option_id AND od.language_id = '" . (int)$this->config->get('config_language_id') . "' AND poh.option_value_id = ovd.option_value_id AND ovd.language_id = '" . (int)$this->config->get('config_language_id') . "' GROUP BY od.name, ovd.name ORDER BY od.name, ovd.name ASC");		

		return $query->rows;
	}	

	public function getOrderStatuses($data = array()) {
		$query = $this->db->query("SELECT DISTINCT os.name, os.order_status_id FROM `" . DB_PREFIX . "order_status` os WHERE os.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY LCASE(os.name) ASC");
		
		return $query->rows;	
	}

	public function getOrderOptions($data = array(), $product_id) {
		$query = $this->db->query("SELECT DISTINCT HEX(CONCAT(oo.name, oo.value, oo.type)) AS options, oo.name AS option_name, oo.value AS option_value FROM `" . DB_PREFIX . "order` o, `" . DB_PREFIX . "order_product` op, `" . DB_PREFIX . "order_option` oo WHERE o.order_id = op.order_id AND op.order_product_id = oo.order_product_id AND op.product_id = '" . (int)$product_id . "' AND o.order_status_id > '0' AND (oo.type = 'radio' OR oo.type = 'checkbox' OR oo.type = 'select' OR oo.type = 'image' OR oo.type = 'colour' OR oo.type = 'size' OR oo.type = 'multiple') GROUP BY oo.name, oo.value, oo.type ORDER BY oo.name, oo.value, oo.type ASC");		

		return $query->rows;
	}
			
	public function deleteProductHistory($product_id) {
		$this->db->query("DELETE FROM " . DB_PREFIX . "product_stock_history WHERE product_id = '" . (int)$product_id . "'");
		$this->db->query("DELETE FROM " . DB_PREFIX . "product_option_stock_history WHERE product_id = '" . (int)$product_id . "'");	
		return true;
	}
	
    public function saveProductStockHistoryComment($product_stock_history_id, $comment) {
        $this->db->query("UPDATE `" . DB_PREFIX . "product_stock_history` SET comment = '" . $comment . "' WHERE product_stock_history_id = '" . (int)$product_stock_history_id . "'");

        $query = $this->db->query("SELECT comment FROM `" . DB_PREFIX . "product_stock_history` WHERE product_stock_history_id = '" . (int)$product_stock_history_id . "'");
        $row = $query->row;

        return $row['comment'];
    }	
	
    public function saveProductOptionStockHistoryComment($product_option_stock_history_id, $comment) {
		$this->db->query("UPDATE `" . DB_PREFIX . "product_option_stock_history` SET comment = '" . $comment . "' WHERE product_option_stock_history_id = '" . (int)$product_option_stock_history_id . "'");

		$query = $this->db->query("SELECT comment FROM `" . DB_PREFIX . "product_option_stock_history` WHERE product_option_stock_history_id = '" . (int)$product_option_stock_history_id . "'");
        $row = $query->row;

        return $row['comment'];
    }	
            ]]></add>
        </operation>
									
        <operation>
            <search position="before"><![CDATA[
if (isset($data['filter_quantity']) && !is_null($data['filter_quantity'])) {
            ]]></search>
            <add><![CDATA[
		if (isset($data['filter_cost']) && !is_null($data['filter_cost'])) {
			$sql .= " AND p.cost LIKE '" . $this->db->escape($data['filter_cost']) . "%'";
		}
            ]]></add>
        </operation>

        <operation>
            <search position="after"><![CDATA[
'p.price',
            ]]></search>
            <add><![CDATA[
			'p.cost',
			'profit',
			'sold',			
            ]]></add>
        </operation>
		
        <operation>
            <search position="after"><![CDATA[
=> $product_option_value['price_prefix'],
            ]]></search>
            <add><![CDATA[
						'cost'                    => $product_option_value['cost'],	
						'cost_amount'             => $product_option_value['cost_amount'],							
						'cost_prefix'             => $product_option_value['cost_prefix'],
						'costing_method'     	  => $product_option_value['costing_method'],
            ]]></add>
        </operation>
		
        <operation>
            <search position="replace"><![CDATA[
$sql = "SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id)";
            ]]></search>
            <add><![CDATA[
$sql = "SELECT *, (SELECT SUM(op.quantity) FROM `" . DB_PREFIX . "order_product` op, `" . DB_PREFIX . "order` o WHERE op.product_id = p.product_id AND op.order_id = o.order_id AND IF (" . (int)$this->config->get('adv_sold_order_status') . " = '',o.order_status_id > 0,o.order_status_id = '" . (int)$this->config->get('adv_sold_order_status') . "')) AS sold, (p.price-p.cost) AS profit FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id)";
            ]]></add>
        </operation>	
	</file>


	<file name="admin/model/sale/order.php">
        <!-- <operation>
            <search position="replace"><![CDATA[
, reward = '" . (int)$order_product['reward'] . "'
            ]]></search>
            <add trim="true"><![CDATA[
, reward = '" . (int)$order_product['reward'] . "', cost = '" . (float)$order_product['cost'] . "'
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[
public function getTotalOrders($data = array()) {
            ]]></search>
            <add><![CDATA[
    public function saveCost($order_product_id, $cost) {
        $this->db->query("UPDATE " . DB_PREFIX . "order_product SET cost = '" . (float)$cost . "' WHERE order_product_id = '". $order_product_id . "'");

        $query = $this->db->query("SELECT cost FROM " . DB_PREFIX . "order_product WHERE order_product_id = '". $order_product_id . "'");
        $row = $query->row;

        return $row['cost'];
    }
	
    public function savePaymentCost($order_id, $payment_cost) {
        $this->db->query("UPDATE `" . DB_PREFIX . "order` SET payment_cost = '" . (float)$payment_cost . "' WHERE order_id = '" . (int)$order_id . "'");

        $query = $this->db->query("SELECT payment_cost FROM `" . DB_PREFIX . "order` WHERE order_id = '" . (int)$order_id . "'");
        $row = $query->row;

        return $row['payment_cost'];
    }
	
    public function saveShippingCost($order_id, $shipping_cost) {
        $this->db->query("UPDATE `" . DB_PREFIX . "order` SET shipping_cost = '" . (float)$shipping_cost . "' WHERE order_id = '" . (int)$order_id . "'");

        $query = $this->db->query("SELECT shipping_cost FROM `" . DB_PREFIX . "order` WHERE order_id = '" . (int)$order_id . "'");
        $row = $query->row;

        return $row['shipping_cost'];
    }
	
    public function saveExtraCost($order_id, $extra_cost) {
        $this->db->query("UPDATE `" . DB_PREFIX . "order` SET extra_cost = '" . (float)$extra_cost . "' WHERE order_id = '" . (int)$order_id . "'");

        $query = $this->db->query("SELECT extra_cost FROM `" . DB_PREFIX . "order` WHERE order_id = '" . (int)$order_id . "'");
        $row = $query->row;

        return $row['extra_cost'];
    }			
            ]]></add>
        </operation>

		<operation>
			<search position="replace"><![CDATA[
, payment_method = '" . $this->db->escape($data['payment_method']) . "'
			]]></search>
			<add trim="true"><![CDATA[
, payment_method = '" . $this->db->escape($data['payment_method']) . "', shipping_cost = '" . $this->db->escape($data['shipping_cost']) . "', payment_cost = '" . $this->db->escape($data['payment_cost']) . "', extra_cost = '" . $this->db->escape($data['extra_cost']) . "'
			]]></add>
		</operation>

		<operation>
			<search position="after"><![CDATA[
'payment_method'          => $order_query->row['payment_method'],
			]]></search>
			<add><![CDATA[
				'shipping_cost'           => $order_query->row['shipping_cost'],
				'payment_cost'            => $order_query->row['payment_cost'],	
				'extra_cost'              => $order_query->row['extra_cost'],				
			]]></add>
		</operation> -->

		<operation>
			<search position="after"><![CDATA[
$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_id = '" . (int)$order_product['product_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
				$product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$order_product['product_id'] . "' AND subtract = '1'");
				foreach ($product_query->rows as $product) {
					$this->db->query("INSERT INTO " . DB_PREFIX . "product_stock_history SET product_id = '" . (int)$product['product_id'] . "', restock_quantity = '-" . (int)$order_product['quantity'] . "', stock_quantity = '" . (int)$product['quantity'] . "', costing_method = '" . (int)$product['costing_method'] . "', restock_cost = (" . (float)$product['cost_amount'] . " + ((" . (float)$product['cost_percentage'] . " / 100) * " . (float)$product['price'] . ") + " . (float)$product['cost_additional'] . "), cost = '" . (float)$product['cost'] . "', price = '" . (float)$product['price'] . "', comment = 'Order ID: " . (int)$order_id . "', date_added = NOW()");
				}			
			]]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[
$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_option_value_id = '" . (int)$order_option['product_option_value_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
						$product_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value WHERE product_option_value_id = '" . (int)$order_option['product_option_value_id'] . "' AND subtract = '1'");
						foreach ($product_option_query->rows as $product_option) {
							$this->db->query("INSERT INTO " . DB_PREFIX . "product_option_stock_history SET product_option_id = '" . (int)$product_option['product_option_id'] . "', product_id = '" . (int)$product_option['product_id'] . "', option_id = '" . (int)$product_option['option_id'] . "', option_value_id = '" . (int)$product_option['option_value_id'] . "', restock_quantity = '-" . (int)$order_product['quantity'] . "', stock_quantity = '" . (int)$product_option['quantity'] . "', costing_method = '" . (int)$product_option['costing_method'] . "', restock_cost = '" . (float)$product_option['cost_amount'] . "', cost = '" . (float)$product_option['cost'] . "', price = '" . (float)$product_option['price'] . "', comment = 'Order ID: " . (int)$order_id . "', date_added = NOW()");
						}		
			]]></add>
		</operation>	
		
		<operation>
			<search position="after"><![CDATA[
$this->db->query("UPDATE `" . DB_PREFIX . "product` SET quantity = (quantity + " . (int)$product['quantity'] . ") WHERE product_id = '" . (int)$product['product_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
				$hproduct_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product['product_id'] . "' AND subtract = '1'");
				foreach ($hproduct_query->rows as $hproduct) {
					$this->db->query("INSERT INTO " . DB_PREFIX . "product_stock_history SET product_id = '" . (int)$hproduct['product_id'] . "', restock_quantity = '" . (int)$product['quantity'] . "', stock_quantity = '" . (int)$hproduct['quantity'] . "', costing_method = '" . (int)$hproduct['costing_method'] . "', restock_cost = (" . (float)$hproduct['cost_amount'] . " + ((" . (float)$hproduct['cost_percentage'] . " / 100) * " . (float)$hproduct['price'] . ") + " . (float)$hproduct['cost_additional'] . "), cost = '" . (float)$hproduct['cost'] . "', price = '" . (float)$hproduct['price'] . "', comment = 'Order ID: " . (int)$order_id . "', date_added = NOW()");
				}		
			]]></add>
		</operation>
		
		<operation>
			<search position="after"><![CDATA[
$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity + " . (int)$product['quantity'] . ") WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
					$hproduct_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
					foreach ($hproduct_option_query->rows as $hproduct_option) {
						$this->db->query("INSERT INTO " . DB_PREFIX . "product_option_stock_history SET product_option_id = '" . (int)$hproduct_option['product_option_id'] . "', product_id = '" . (int)$hproduct_option['product_id'] . "', option_id = '" . (int)$hproduct_option['option_id'] . "', option_value_id = '" . (int)$hproduct_option['option_value_id'] . "', restock_quantity = '" . (int)$product['quantity'] . "', stock_quantity = '" . (int)$hproduct_option['quantity'] . "', costing_method = '" . (int)$hproduct_option['costing_method'] . "', restock_cost = '" . (float)$hproduct_option['cost_amount'] . "', cost = '" . (float)$hproduct_option['cost'] . "', price = '" . (float)$hproduct_option['price'] . "', comment = 'Order ID: " . (int)$order_id . "', date_added = NOW()");
					}
			]]></add>
		</operation>					
	</file>


	<file name="admin/model/sale/return.php">
        <operation>
            <search position="replace"><![CDATA[
, comment = '" . $this->db->escape($data['comment']) . "'
            ]]></search>
            <add trim="true"><![CDATA[
, comment = '" . $this->db->escape($data['comment']) . "', cost = '" . (float)$data['cost'] . "'
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[
public function addReturnHistory($return_id, $data) {
            ]]></search>
            <add><![CDATA[
    public function saveReturnCost($return_id, $cost) {
        $this->db->query("UPDATE `" . DB_PREFIX . "return` SET cost = '" . (float)$cost . "' WHERE return_id = '" . (int)$return_id . "'");

        $query = $this->db->query("SELECT cost FROM `" . DB_PREFIX . "return` WHERE return_id = '" . (int)$return_id . "'");
        $row = $query->row;

        return $row['cost'];
    }			
            ]]></add>
        </operation>				
	</file>
	
	
	<file name="admin/view/template/catalog/product_form.tpl">
		<operation>
			<search position="replace"><![CDATA[<?php echo $heading_title; ?>]]></search>
			<add><![CDATA[<?php echo $heading_title; ?><span class="product_name"></span>]]></add>
		</operation>
		
		<operation>
            <search position="before"><![CDATA[
<?php echo $footer; ?>
			]]></search>
			<add><![CDATA[
				<script type="text/javascript">
				$name = $('input[name="product_description[<?php echo $this->config->get('config_language_id'); ?>][name]"]'); 
				$product_name = $('.product_name');


				if ($name.val() != '') {
					$product_name.html(' - ' + $name.val()); 
				}

				$name.keyup(function() {
					if ($(this).val() != '') {
						$('.product_name').html(' - ' + $(this).val()); 
					} else {
						$('.product_name').html('');
					}
				});
				</script> 
			]]></add>
		</operation>

        <operation>
            <search position="after"><![CDATA[
      		<div class="box">
            ]]></search>
            <add><![CDATA[	  	
			<?php include(DIR_APPLICATION . 'view/image/adv_reports/separator.png'); ?>
            ]]></add>
        </operation>	
				
        <operation>
            <search position="replace"><![CDATA[<a href="#tab-data"><?php echo $tab_data; ?></a>]]></search>
            <add><![CDATA[<a <?php echo ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) ? 'style="border-left:1px solid #F8ACAC; border-right:1px solid #F8ACAC; border-top:1px solid #F8ACAC;"' : '' ?> href="#tab-data"><?php echo $tab_data; ?></a>]]></add>
        </operation>

        <operation>
            <search position="replace"><![CDATA[<a href="#tab-option"><?php echo $tab_option; ?></a>]]></search>
            <add><![CDATA[<a id="optInitialize" <?php echo ($product_options && $this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) ? 'style="border-left:1px solid #F8ACAC; border-right:1px solid #F8ACAC; border-top:1px solid #F8ACAC;"' : '' ?> href="#tab-option"><?php echo $tab_option; ?></a>]]></add>
        </operation>
			
        <operation>
            <search position="replace"><![CDATA[<a href="#tab-design"><?php echo $tab_design; ?></a>]]></search>
            <add><![CDATA[<a href="#tab-design"><?php echo $tab_design; ?></a><?php if ($product_id) { ?><?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>	<a href="#tab-history" style="border-left:1px solid #F8ACAC; border-right:1px solid #F8ACAC; border-top:1px solid #F8ACAC;"><?php echo $tab_history; ?></a><a href="#tab-sales" style="border-left:1px solid #F8ACAC; border-right:1px solid #F8ACAC; border-top:1px solid #F8ACAC;"><?php echo $tab_sales; ?></a><?php } ?><?php } ?>]]></add>
        </operation>

        <operation error="skip">
            <search position="replace"><![CDATA[$('<a href="#tab-openbay"><?php echo $tab_marketplace_links ?></a>').hide().appendTo("#tabs").fadeIn(1000);]]></search>
            <add><![CDATA[<?php if($openbay_show_menu == 1){ ?>
			$('<a href="#tab-openbay"><?php echo $tab_marketplace_links ?></a>').hide().appendTo("#tabs").fadeIn(1000);
			<?php } else { ?>
			$('<a href="#tab-openbay"><?php echo $tab_marketplace_links ?></a>').hide();
			<?php } ?>]]></add>
        </operation>	

        <operation>
            <search position="after"><![CDATA[
</form>
            ]]></search>
            <add><![CDATA[
<?php if ($product_id) { ?> 
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
<div id="tab-history">
<style type="text/css">
.list_main_history {
	border-collapse: collapse;
	width: 100%;
	border-top: 1px solid #DDDDDD;
	border-left: 1px solid #DDDDDD;	
	margin-bottom: 20px;
}
.list_main_history td {
	border-right: 1px solid #DDDDDD;
	border-bottom: 1px solid #DDDDDD;	
}
.list_main_history thead td {
	background-color: #EFEFEF;
	padding: 0px 5px;
}

.list_main_history thead td a, .list_main_history thead td {
	text-decoration: none;
	color: #222222;
	font-weight: bold;	
}
.list_main_history tbody td {
	vertical-align: middle;
	padding: 0px 5px;
}
.list_main_history .left {
	text-align: left;
	padding: 7px;
}
.list_main_history .right {
	text-align: right;
	padding: 7px;
}
.list_main_history .center {
	text-align: center;
	padding: 3px;
}
.list_main_history .asc {
	padding-right: 15px;
	background: url('view/image/asc.png') right center no-repeat;
}
.list_main_history .desc {
	padding-right: 15px;
	background: url('view/image/desc.png') right center no-repeat;
}
.list_main_history .noresult {
	text-align: center;
	padding: 7px;
}

a.cbutton {
	text-decoration: none;
	color: #FFF;
	display: inline-block;
	padding: 5px 15px 5px 15px;
	-webkit-border-radius: 5px 5px 5px 5px;
	-moz-border-radius: 5px 5px 5px 5px;
	-khtml-border-radius: 5px 5px 5px 5px;
	border-radius: 5px 5px 5px 5px;
}

.styled-select-range {
	background-color: #F9F9F9;
 	border: 1px solid #BBB;
	padding: 2px;
	margin-top: 5px;
    -moz-border-radius: 3px; 
    border-radius: 3px;
}
.styled-input-range {
	margin-top: 4px;
	margin-left: 5px;
	height: 17px;
	border: solid 1px #BBB;
	color: #F90;
    -moz-border-radius: 3px; 
    border-radius: 3px;	
}
</style> 
<div class="content">
<input type="hidden" id="page_history" value="<?php echo $page_history ?>">
<input type="hidden" id="sort_history" value="<?php echo $sort_history ?>">
<input type="hidden" id="order_history" value="<?php echo $order_history ?>">
<script type="text/javascript">
$(document).ready(function() {
var $filter_history_range = $('#filter_history_range'), $date_start = $('#date-start-history'), $date_end = $('#date-end-history');
$filter_history_range.change(function () {
    if ($filter_history_range.val() == 'custom') {
        $date_start.removeAttr('disabled');
        $date_end.removeAttr('disabled');
    } else {	
        $date_start.attr('disabled', 'disabled').val('');
        $date_end.attr('disabled', 'disabled').val('');
    }
}).trigger('change');
});
</script>
    <div style="background: #E7EFEF; border: 1px solid #C6D7D7; padding: 3px; margin-bottom: 1px;">
      <table width="100%" cellspacing="0" cellpadding="6">
        <tr>
          <td width="1" align="left" style="background:#E7EFEF;">
		  <table cellpadding="0" cellspacing="0" style="background:#E7EFEF; border:1px solid #C6D7D7; padding:5px; margin-top:3px; margin-bottom:3px;">
       		<tr><td><?php echo $entry_hrange; ?><br />
              <select name="filter_history_range" id="filter_history_range" class="styled-select-range">
              <?php foreach ($ranges_history as $range_history) { ?>
              <?php if ($range_history['value'] == $filter_history_range) { ?>
              <option id="<?php echo $range_history['id']; ?>" value="<?php echo $range_history['value']; ?>" title="<?php echo $range_history['text']; ?>" style="<?php echo $range_history['style']; ?>" selected="selected"><?php echo $range_history['text']; ?></option>
              <?php } else { ?>
              <option id="<?php echo $range_history['id']; ?>" value="<?php echo $range_history['value']; ?>" title="<?php echo $range_history['text']; ?>" style="<?php echo $range_history['style']; ?>"><?php echo $range_history['text']; ?></option>
              <?php } ?>
              <?php } ?>
              </select></td>		
          	  <td><?php echo $entry_hdate_start; ?><br />
              <input type="text" name="filter_history_date_start" value="<?php echo $filter_history_date_start; ?>" id="date-start-history" size="12" class="styled-input-range" /></td>
          	  <td><?php echo $entry_hdate_end; ?><br />
              <input type="text" name="filter_history_date_end" value="<?php echo $filter_history_date_end; ?>" id="date-end-history" size="12" class="styled-input-range" /></td>
			</tr>
		  </table></td>
		  <td align="left" style="background:#E7EFEF;">
		  <table cellpadding="0" cellspacing="0" style="background:#E7EFEF; border:1px solid #C6D7D7; padding:5px; margin-top:3px; margin-bottom:3px;">
       		<tr><td><?php echo $entry_hoption; ?><br />
            <select name="filter_history_option" id="filter_history_option" class="styled-select-range" style="background-color: #ffcc99;">
			<option id="main_product" value="0"><?php echo $text_nooption; ?></option>
            <?php foreach ($option_histories as $option_history) { ?>
			<?php if ($option_history['options'] == $filter_history_option) { ?>             
            <option value="<?php echo $option_history['options']; ?>" selected="selected"><?php echo $option_history['option_name']; ?>: <?php echo $option_history['option_value']; ?></option>
            <?php } else { ?>
            <option value="<?php echo $option_history['options']; ?>"><?php echo $option_history['option_name']; ?>: <?php echo $option_history['option_value']; ?></option>
            <?php } ?>
            <?php } ?>  
            </select></td>
			</tr>
		  </table></td>	  
          <td align="right" style="background:#E7EFEF;"><a onclick="history_download();" class="cbutton" style="background:#699;"><span><?php echo $button_hdownload; ?></span></a>&nbsp;<a onclick="history_delete();" class="cbutton" style="background:#666;"><span><?php echo $button_hdelete; ?></span></a></td>
        </tr>
      </table>
    </div>
<?php if ($histories) { ?>	
<div style="border-left:1px solid #DDDDDD; border-right:1px solid #DDDDDD;">
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<div id="tab_chart_history">
<script type="text/javascript">
	google.load('visualization', '1', {packages:['corechart']});
	function drawVisualization() {
   		var data = google.visualization.arrayToDataTable([
			<?php if ($ghistories) {
				echo "['','". $entry_gstock_quantity . "'],";
					foreach ($ghistories as $key => $ghistory) {
						if (count($ghistories)==($key+1)) {
							echo "['" . $ghistory['ghdate_added'] . "',". $ghistory['ghstock_quantity'] . "]";
						} else {
							echo "['" . $ghistory['ghdate_added'] . "',". $ghistory['ghstock_quantity'] . "],";
						}
					}		
			} 
			;?>
		]);

        var options = {
			title: 'Stock Quantity History',
			width: 1250,	
			height: 266,
			colors: ['#ebd685'],
			pointSize: '4',
			hAxis: {title: '<?php echo $column_hdate_added; ?>', titleTextStyle: {color: '#333', fontSize: 12}, baselineColor: '#fff', gridlineColor: '#fff', textPosition: 'none'},
			legend: {position: 'right', alignment: 'start', textStyle: {color: '#666666', fontSize: 12}}	  
        };

			var chart = new google.visualization.AreaChart(document.getElementById('chart1_div'));
			chart.draw(data, options);
	}
	google.setOnLoadCallback(drawVisualization);	
</script>
<script type="text/javascript">
	google.load('visualization', '1', {packages:['corechart']});
	function drawVisualization() {
   		var data = google.visualization.arrayToDataTable([
			<?php if ($ghistories) {
				echo "['','". $entry_gprice . "','" . $entry_gcost . "','" . $entry_gprofit . "'],";
					foreach ($ghistories as $key => $ghistory) {
						if (count($ghistories)==($key+1)) {
							echo "['" . $ghistory['ghdate_added'] . "',". $ghistory['ghprice'] . ",". $ghistory['ghcost'] . ",". $ghistory['ghprofit'] . "]";
						} else {
							echo "['" . $ghistory['ghdate_added'] . "',". $ghistory['ghprice'] . ",". $ghistory['ghcost'] . ",". $ghistory['ghprofit'] . "],";
						}
					}		
			} 
			;?>
		]);

        var options = {
			title: 'Price, Cost and Profit History of Stock',
			width: 1250,	
			height: 266,
			colors: ['#b5e08b', '#ed9999', '#739cc3'],
			pointSize: '4',
			hAxis: {title: '<?php echo $column_hdate_added; ?>', titleTextStyle: {color: '#333', fontSize: 12}, baselineColor: '#fff', gridlineColor: '#fff', textPosition: 'none'},
			legend: {position: 'right', alignment: 'start', textStyle: {color: '#666666', fontSize: 12}}	  
        };

			var chart = new google.visualization.AreaChart(document.getElementById('chart2_div'));
			chart.draw(data, options);
	}
	google.setOnLoadCallback(drawVisualization);	
</script>  
<script type="text/javascript">
function save_comment(id) {
	var input_comment = $('#comment-'+id+' textarea');
	var comment = $(input_comment).val();
	$.ajax({
		<?php if ($this->user->hasPermission('modify', 'catalog/product')) { ?>
			url: 'index.php?route=catalog/product/saveProductStockHistoryComment&product_stock_history_id='+id+'&comment='+comment+'&token=<?php echo $token; ?>',
		<?php } else { ?>
			url: '',
		<?php } ?>
		dataType: 'html',
		data: {},
		success: function(comment) { 
			$('#comment-'+id).next().html(comment);
		}
	});
	$(input_comment).css('cursor','text');
}
function save_comment_option(id) {
	var input_comment = $('#comment-'+id+' textarea');
	var comment = $(input_comment).val();
	$.ajax({
		<?php if ($this->user->hasPermission('modify', 'catalog/product')) { ?>
			url: 'index.php?route=catalog/product/saveProductOptionStockHistoryComment&product_option_stock_history_id='+id+'&comment='+comment+'&token=<?php echo $token; ?>',
		<?php } else { ?>
			url: '',
		<?php } ?>
		dataType: 'html',
		data: {},
		success: function(comment) { 
			$('#comment-'+id).next().html(comment);
		}
	});
	$(input_comment).css('cursor','text');
}
</script> 
<script type="text/javascript">
function stopRKey(evt) { 
	var evt = (evt) ? evt : ((event) ? event : null); 
	var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null); 
	if ((evt.keyCode == 13) && (node.type=="text")) {
		return false;
	} 
} 
document.onkeypress = stopRKey; 
</script>
      <table align="center" cellspacing="0" cellpadding="3">
        <tr>
          <td><div id="chart1_div"></div><div id="chart2_div"></div></td>
        </tr>
      </table>
</div>	
</div>
<?php } ?>	
    <table class="list_main_history">
      <thead>
        <tr id="head_history">
          <td class="left"><?php if ($sort_history == 'date_added') { ?>
                <a href="<?php echo $sort_history_date_added; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hdate_added; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_date_added; ?>"><?php echo $column_hdate_added; ?></a>
                <?php } ?></td>
          <td class="left"><?php if ($sort_history == 'comment') { ?>
                <a href="<?php echo $sort_history_comment; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hcomment; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_comment; ?>"><?php echo $column_hcomment; ?></a>
                <?php } ?></td>		
          <td class="right"><?php if ($sort_history == 'costing_method') { ?>
                <a href="<?php echo $sort_history_costing_method; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hcosting_method; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_costing_method; ?>"><?php echo $column_hcosting_method; ?></a>
                <?php } ?></td>							
          <td class="right"><?php if ($sort_history == 'restock_quantity') { ?>
                <a href="<?php echo $sort_history_restock_quantity; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hrestock_quantity; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_restock_quantity; ?>"><?php echo $column_hrestock_quantity; ?></a>
                <?php } ?></td>
          <td class="right"><?php if ($sort_history == 'stock_quantity') { ?>
                <a href="<?php echo $sort_history_stock_quantity; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hstock_quantity; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_stock_quantity; ?>"><?php echo $column_hstock_quantity; ?></a>
                <?php } ?></td>             
          <td class="right"><?php if ($sort_history == 'restock_cost') { ?>
                <a href="<?php echo $sort_history_restock_cost; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hrestock_cost; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_restock_cost; ?>"><?php echo $column_hrestock_cost; ?></a>
                <?php } ?></td>				
          <td class="right"><?php if ($sort_history == 'cost') { ?>
                <a href="<?php echo $sort_history_cost; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hcost; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_cost; ?>"><?php echo $column_hcost; ?></a>
                <?php } ?></td>
          <td class="right"><?php if ($sort_history == 'price') { ?>
                <a href="<?php echo $sort_history_price; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hprice; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_price; ?>"><?php echo $column_hprice; ?></a>
                <?php } ?></td>
          <td class="right"><?php if ($sort_history == 'profit') { ?>
                <a href="<?php echo $sort_history_profit; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hprofit; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_profit; ?>"><?php echo $column_hprofit; ?></a>
                <?php } ?></td>	
          <td class="right"><?php if ($sort_history == 'profit') { ?>
                <a href="<?php echo $sort_history_profit_margin; ?>" class="<?php echo strtolower($order_history); ?>"><?php echo $column_hprofit; ?> [%]</a>
                <?php } else { ?>
                <a href="<?php echo $sort_history_profit_margin; ?>"><?php echo $column_hprofit; ?> [%]</a>
                <?php } ?></td>					
        </tr>
      </thead>
      <tbody>
        <?php if ($histories) { ?>
        <?php foreach ($histories as $history) { ?>		
        <tr>
          <td class="left"><?php echo $history['hdate_added']; ?></td>
		  <td class="left">
		  <?php if ($history['nooption'] == 1) { ?>
		  <span id="comment-<?php echo $history['product_stock_history_id']; ?>" value="<?php echo $history['product_stock_history_id']; ?>">
		  <textarea onchange="save_comment(<?php echo $history['product_stock_history_id']; ?>)" style="border:none; width:100%;"><?php echo $history['comment']; ?></textarea>
		  </span> 
		  <?php } else { ?>
		  <span id="comment-<?php echo $history['product_option_stock_history_id']; ?>" value="<?php echo $history['product_option_stock_history_id']; ?>">
		  <textarea onchange="save_comment_option(<?php echo $history['product_option_stock_history_id']; ?>)" style="border:none; width:100%;"><?php echo $history['comment']; ?></textarea>
		  </span> 
		  <?php } ?>
		  </td>		  
          <td class="right"><?php echo $history['hcosting_method']; ?></td>		  
          <td class="right"><?php echo $history['hrestock_quantity']; ?></td>
          <td class="right" style="background:#faf1ce;"><?php echo $history['hstock_quantity']; ?></td>
          <td class="right"><?php echo $history['hrestock_cost']; ?></td>
		  <td class="right" style="background:#e9d1c7;"><?php echo $history['hcost']; ?></td>
          <td class="right" style="background:#e8f5db;"><?php echo $history['hprice']; ?></td>
		  <td class="right" style="background:#d2dbe3;"><?php echo $history['hprofit']; ?></td>
		  <td class="right" style="background:#d2dbe3;"><?php echo $history['hprofit_margin']; ?></td>
        </tr>       
        <?php } ?>
        <?php } else { ?>
        <tr>
          <td class="center" colspan="10"><?php echo $text_no_results; ?></td>
        </tr>
        <?php } ?>
      </tbody>
    </table>
	<div id="pagination_history" class="pagination"><?php echo $pagination_history; ?></div>
</div>
<script id="historyTemplate" type="text/x-jquery-tmpl">
        <tr>
          <td class="left">${hdate_added}</td>
		  <td class="left">
		  {{if nooption == 1}}
		  <span id="comment-${product_stock_history_id}" value="${product_stock_history_id}">
		  <textarea onchange="save_comment(${product_stock_history_id})" style="border:none; width:100%;">${comment}</textarea>
		  </span>
		  {{else}}
		  <span id="comment-${product_option_stock_history_id}" value="${product_option_stock_history_id}">
		  <textarea onchange="save_comment_option(${product_option_stock_history_id})" style="border:none; width:100%;">${comment}</textarea>
		  </span>
		  {{/if}}
		  </td>		  
          <td class="right">${hcosting_method}</td>		  
          <td class="right">${hrestock_quantity}</td>
          <td class="right" style="background:#faf1ce; width:auto;">${hstock_quantity}</td>
          <td class="right">${hrestock_cost}</td>
		  <td class="right" style="background:#e9d1c7;">${hcost}</td>
          <td class="right" style="background:#e8f5db;">${hprice}</td>
		  <td class="right" style="background:#d2dbe3;">${hprofit}</td>
		  <td class="right" style="background:#d2dbe3;">${hprofit_margin}</td>
        </tr>  
</script>
</div>

<div id="tab-sales">
<style type="text/css">
.list_main_sale {
	border-collapse: collapse;
	width: 100%;
	border-top: 1px solid #DDDDDD;
	border-left: 1px solid #DDDDDD;	
	margin-bottom: 20px;
}
.list_main_sale td {
	border-right: 1px solid #DDDDDD;
	border-bottom: 1px solid #DDDDDD;	
}
.list_main_sale thead td {
	background-color: #EFEFEF;
	padding: 0px 5px;
}

.list_main_sale thead td a, .list_main_sale thead td {
	text-decoration: none;
	color: #222222;
	font-weight: bold;	
}
.list_main_sale tbody td {
	vertical-align: middle;
	padding: 0px 5px;
}
.list_main_sale .left {
	text-align: left;
	padding: 7px;
}
.list_main_sale .right {
	text-align: right;
	padding: 7px;
}
.list_main_sale .center {
	text-align: center;
	padding: 3px;
}
.list_main_sale .asc {
	padding-right: 15px;
	background: url('view/image/asc.png') right center no-repeat;
}
.list_main_sale .desc {
	padding-right: 15px;
	background: url('view/image/desc.png') right center no-repeat;
}
.list_main_sale .noresult {
	text-align: center;
	padding: 7px;
}
</style> 
<div class="content">
<input type="hidden" id="page_sale" value="<?php echo $page_sale ?>">
<input type="hidden" id="sort_sale" value="<?php echo $sort_sale ?>">
<input type="hidden" id="order_sale" value="<?php echo $order_sale ?>">
<script type="text/javascript">
$(document).ready(function() {
var $filter_sale_range = $('#filter_sale_range'), $date_start = $('#date-start-sale'), $date_end = $('#date-end-sale');
$filter_sale_range.change(function () {
    if ($filter_sale_range.val() == 'custom') {
        $date_start.removeAttr('disabled');
        $date_end.removeAttr('disabled');
    } else {	
        $date_start.attr('disabled', 'disabled').val('');
        $date_end.attr('disabled', 'disabled').val('');
    }
}).trigger('change');
});
</script>
    <div style="background: #E7EFEF; border: 1px solid #C6D7D7; padding: 3px; margin-bottom: 1px;">
      <table width="100%" cellspacing="0" cellpadding="6">
        <tr>
          <td width="1" align="left" style="background:#E7EFEF;">
		  <table cellpadding="0" cellspacing="0" style="background:#E7EFEF; border:1px solid #C6D7D7; padding:5px; margin-top:3px; margin-bottom:3px;">
       		<tr><td><?php echo $entry_hrange; ?><br />
              <select name="filter_sale_range" id="filter_sale_range" class="styled-select-range">
              <?php foreach ($ranges_sale as $range_sale) { ?>
              <?php if ($range_sale['value'] == $filter_sale_range) { ?>
              <option value="<?php echo $range_sale['value']; ?>" title="<?php echo $range_sale['text']; ?>" style="<?php echo $range_sale['style']; ?>" selected="selected"><?php echo $range_sale['text']; ?></option>
              <?php } else { ?>
              <option value="<?php echo $range_sale['value']; ?>" title="<?php echo $range_sale['text']; ?>" style="<?php echo $range_sale['style']; ?>"><?php echo $range_sale['text']; ?></option>
              <?php } ?>
              <?php } ?>
              </select></td>		
          	  <td><?php echo $entry_hdate_start; ?><br />
              <input type="text" name="filter_sale_date_start" value="<?php echo $filter_sale_date_start; ?>" id="date-start-sale" size="12" class="styled-input-range" /></td>
          	  <td><?php echo $entry_hdate_end; ?><br />
              <input type="text" name="filter_sale_date_end" value="<?php echo $filter_sale_date_end; ?>" id="date-end-sale" size="12" class="styled-input-range" /></td>
			</tr>
		  </table></td>
		  <td width="1" align="left" style="background:#E7EFEF;">
		  <table cellpadding="0" cellspacing="0" style="background:#E7EFEF; border:1px solid #C6D7D7; padding:5px; margin-top:3px; margin-bottom:3px;">
       		<tr><td><?php echo $entry_sstatus; ?><br />
            <select name="filter_sale_order_status" id="sale_order_status" multiple="multiple">
            <?php foreach ($order_statuses as $order_status) { ?>
			<?php if (isset($filter_sale_order_status[$order_status['order_status_id']])) { ?> 
            <option value="<?php echo $order_status['order_status_id']; ?>" selected="selected"><?php echo $order_status['name']; ?></option>
            <?php } else { ?>
            <option value="<?php echo $order_status['order_status_id']; ?>"><?php echo $order_status['name']; ?></option>
            <?php } ?>
            <?php } ?>
          </select></td>
			</tr>
		  </table></td>	 
		  <td width="1" align="left" style="background:#E7EFEF;">
		  <table cellpadding="0" cellspacing="0" style="background:#E7EFEF; border:1px solid #C6D7D7; padding:5px; margin-top:3px; margin-bottom:3px;">
       		<tr><td><?php echo $entry_soption; ?><br />
            <select name="filter_sale_option" id="sale_option" multiple="multiple">		
            <?php foreach ($order_options as $order_option) { ?>
            <?php if ($order_option['options'] == $filter_sale_option) { ?>  
            <option value="<?php echo $order_option['options']; ?>" selected="selected"><?php echo $order_option['option_name']; ?>: <?php echo $order_option['option_value']; ?></option>
            <?php } else { ?>
            <option value="<?php echo $order_option['options']; ?>"><?php echo $order_option['option_name']; ?>: <?php echo $order_option['option_value']; ?></option>
            <?php } ?>
            <?php } ?>
          </select></td>
			</tr>
		  </table></td>			   
          <td align="right" style="background:#E7EFEF;"></td>
        </tr>
      </table>
    </div>	
    <table class="list_main_sale">
      <thead id="head_sale">
        <tr>
          <td class="left"><?php if ($sort_sale == 'product_order_id') { ?>
                <a href="<?php echo $sort_sale_date_added; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_order_id; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_date_added; ?>"><?php echo $column_prod_order_id; ?></a>
                <?php } ?></td>
          <td class="left"><?php if ($sort_sale == 'product_date_added') { ?>
                <a href="<?php echo $sort_sale_date_added; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_date_added; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_date_added; ?>"><?php echo $column_prod_date_added; ?></a>
                <?php } ?></td>
          <td class="left"><?php if ($sort_sale == 'product_option') { ?>
                <a href="<?php echo $sort_sale_name; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_name; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_name; ?>"><?php echo $column_prod_name; ?></a>
                <?php } ?></td> 
          <td class="right"><?php if ($sort_sale == 'product_sold') { ?>
                <a href="<?php echo $sort_sale_quantity; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_sold; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_quantity; ?>"><?php echo $column_prod_sold; ?></a>
                <?php } ?></td>
          <td class="right"><?php if ($sort_sale == 'product_total_excl_vat') { ?>
                <a href="<?php echo $sort_sale_total_excl_tax; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_total_excl_vat; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_total_excl_tax; ?>"><?php echo $column_prod_total_excl_vat; ?></a>
                <?php } ?></td>
          <td class="right"><?php if ($sort_sale == 'product_tax') { ?>
                <a href="<?php echo $sort_sale_tax; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_tax; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_tax; ?>"><?php echo $column_prod_tax; ?></a>
                <?php } ?></td>
          <td class="right"><?php if ($sort_sale == 'product_total_incl_vat') { ?>
                <a href="<?php echo $sort_sale_total_incl_tax; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_total_incl_vat; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_total_incl_tax; ?>"><?php echo $column_prod_total_incl_vat; ?></a>
                <?php } ?></td>	
          <td class="right"><?php if ($sort_sale == 'product_revenue') { ?>
                <a href="<?php echo $sort_sale_revenue; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_sales; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_revenue; ?>"><?php echo $column_prod_sales; ?></a>
                <?php } ?></td>	
          <td class="right"><?php if ($sort_sale == 'product_cost') { ?>
                <a href="<?php echo $sort_sale_cost; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_cost; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_cost; ?>"><?php echo $column_prod_cost; ?></a>
                <?php } ?></td>	
          <td class="right"><?php if ($sort_sale == 'product_profit') { ?>
                <a href="<?php echo $sort_sale_profit; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_profit; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_profit; ?>"><?php echo $column_prod_profit; ?></a>
                <?php } ?></td>
          <td class="right"><?php if ($sort_sale == 'product_profit') { ?>
                <a href="<?php echo $sort_sale_profit_margin; ?>" class="<?php echo strtolower($order_sale); ?>"><?php echo $column_prod_profit; ?> [%]</a>
                <?php } else { ?>
                <a href="<?php echo $sort_sale_profit_margin; ?>"><?php echo $column_prod_profit; ?> [%]</a>
                <?php } ?></td>
        </tr>
      </thead>
      <tbody>
        <?php if ($sales) { ?>
        <?php foreach ($sales as $sale) { ?>
        <tr>
          <td class="left"><?php echo $sale['product_order_id']; ?></td>
		  <td class="left"><?php echo $sale['product_date_added']; ?></td>
          <td class="left"><?php echo $sale['product_name']; ?> 
		  <?php if ($sale['product_option']) { ?>
          <table cellpadding="0" cellspacing="0" border="0" style="border:none;">
          <tr>
		  <td nowrap="nowrap" style="font-size:11px; border:0;"><?php echo $sale['product_option']; ?><?php echo $sale['product_order_product_id']; ?></td>
          </tr>
          </table>
		  <?php } ?>
		  </td>
          <td class="right"><?php echo $sale['product_sold']; ?></td>
		  <td class="right"><?php echo $sale['product_total_excl_vat']; ?></td>
		  <td class="right"><?php echo $sale['product_tax']; ?></td>
		  <td class="right"><?php echo $sale['product_total_incl_vat']; ?></td>
		  <td class="right" style="background-color:#DCFFB9;"><?php echo $sale['product_revenue']; ?></td>
		  <td class="right" style="background-color:#ffd7d7;"><?php echo $sale['product_cost']; ?></td>
		  <?php if ($sale['product_profit_raw'] >= 0) { ?>
		  <td class="right" style="background-color:#c4d9ee; font-weight:bold;"><?php echo $sale['product_profit']; ?></td>
		  <td class="right" style="background-color:#c4d9ee; font-weight:bold;"><?php echo $sale['product_profit_margin']; ?></td>
		  <?php } else { ?>
		  <td class="right" style="background-color:#F99; font-weight:bold;"><?php echo $sale['product_profit']; ?></td>
		  <td class="right" style="background-color:#F99; font-weight:bold;"><?php echo $sale['product_profit_margin']; ?></td>
		  <?php } ?>
        </tr>	
        <?php } ?>
		<tr style="border-top:2px solid #CCC;">
		  <td colspan="3" class="right" style="background-color:#E7EFEF; font-weight:bold;"><?php echo $column_prod_totals; ?></td>
          <td class="right" style="background-color:#E7EFEF; color:#003A88; font-weight:bold;"><?php echo $sale['product_sold_total']; ?></td>
		  <td class="right" style="background-color:#E7EFEF; color:#003A88; font-weight:bold;"><?php echo $sale['product_total_excl_vat_total']; ?></td>
		  <td class="right" style="background-color:#E7EFEF; color:#003A88; font-weight:bold;"><?php echo $sale['product_tax_total']; ?></td>
		  <td class="right" style="background-color:#E7EFEF; color:#003A88; font-weight:bold;"><?php echo $sale['product_total_incl_vat_total']; ?></td>
		  <td class="right" style="background-color:#DCFFB9; color:#003A88; font-weight:bold;"><?php echo $sale['product_revenue_total']; ?></td>
		  <td class="right" style="background-color:#ffd7d7; color:#003A88; font-weight:bold;"><?php echo $sale['product_cost_total']; ?></td>
		  <?php if ($sale['product_profit_raw_total'] >= 0) { ?>
		  <td class="right" style="background-color:#c4d9ee; color:#003A88; font-weight:bold;"><?php echo $sale['product_profit_total']; ?></td>
		  <td class="right" style="background-color:#c4d9ee; color:#003A88; font-weight:bold;"><?php echo $sale['product_profit_margin_total']; ?></td>
		  <?php } else { ?>
		  <td class="right" style="background-color:#F99; color:#003A88; font-weight:bold;"><?php echo $sale['product_profit_total']; ?></td>
		  <td class="right" style="background-color:#F99; color:#003A88; font-weight:bold;"><?php echo $sale['product_profit_margin_total']; ?></td>
		  <?php } ?>
        </tr>			
        <?php } else { ?>
        <tr>
          <td class="center" colspan="11"><?php echo $text_no_results; ?></td>
        </tr>
        <?php } ?>
      </tbody>
    </table>
	<div id="pagination_sale" class="pagination"><?php echo $pagination_sale; ?></div>	
</div>
<script id="saleTemplate" type="text/x-jquery-tmpl">
        <tr>
          <td class="left">{{html product_order_id}}</td>
		  <td class="left">${product_date_added}</td>
          <td class="left">${product_name} 
		  {{if product_option}}
          <table cellpadding="0" cellspacing="0" border="0" style="border:none;">
          <tr>
		  <td nowrap="nowrap" style="font-size:11px; border:0;">{{html product_option}}<span style="font-size:1px; color:#FFF;">${product_order_product_id}</span></td>
          </tr>
          </table>
		  {{/if}}
		  </td>
          <td class="right">${product_sold}</td>
		  <td class="right">${product_total_excl_vat}</td>
		  <td class="right">${product_tax}</td>
		  <td class="right">${product_total_incl_vat}</td>
		  <td class="right" style="background-color:#DCFFB9;">${product_revenue}</td>
		  <td class="right" style="background-color:#ffd7d7;">${product_cost}</td>
		  {{if product_profit_raw >= 0}}
		  <td class="right" style="background-color:#c4d9ee; font-weight:bold;">${product_profit}</td>
		  <td class="right" style="background-color:#c4d9ee; font-weight:bold;">${product_profit_margin}</td>
		  {{else}}
		  <td class="right" style="background-color:#F99; font-weight:bold;">${product_profit}</td>
		  <td class="right" style="background-color:#F99; font-weight:bold;">${product_profit_margin}</td>
		  {{/if}}
        </tr>		
</script>
<script id="sale_totalTemplate" type="text/x-jquery-tmpl">
		<tr style="border-top:2px solid #CCC;">
		  <td colspan="3" class="right" style="background-color:#E7EFEF; font-weight:bold;"><?php echo $column_prod_totals; ?></td>
          <td class="right" style="background-color:#E7EFEF; color:#003A88; font-weight:bold;">${product_sold_total}</td>
		  <td class="right" style="background-color:#E7EFEF; color:#003A88; font-weight:bold;">${product_total_excl_vat_total}</td>
		  <td class="right" style="background-color:#E7EFEF; color:#003A88; font-weight:bold;">${product_tax_total}</td>
		  <td class="right" style="background-color:#E7EFEF; color:#003A88; font-weight:bold;">${product_total_incl_vat_total}</td>
		  <td class="right" style="background-color:#DCFFB9; color:#003A88; font-weight:bold;">${product_revenue_total}</td>
		  <td class="right" style="background-color:#ffd7d7; color:#003A88; font-weight:bold;">${product_cost_total}</td>
		  {{if product_profit_raw_total >= 0}}
		  <td class="right" style="background-color:#c4d9ee; color:#003A88; font-weight:bold;">${product_profit_total}</td>
		  <td class="right" style="background-color:#c4d9ee; color:#003A88; font-weight:bold;">${product_profit_margin_total}</td>
		  {{else}}
		  <td class="right" style="background-color:#F99; color:#003A88; font-weight:bold;">${product_profit_total}</td>
		  <td class="right" style="background-color:#F99; color:#003A88; font-weight:bold;">${product_profit_margin_total}</td>
		  {{/if}}
        </tr>		
</script>
</div>
<?php } ?>
<?php } ?>
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[
<?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($product_id) { ?>	
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>		
<script type="text/javascript">
function filter_history() {
	<?php if (defined('_JEXEC')) { ?>
	url = 'index.php?option=com_mijoshop&format=raw&tmpl=component&route=catalog/product/filter_history&token=<?php echo $token; ?>&product_id=<?php echo $this->request->get['product_id'] ?>';
	<?php } else { ?>
	url = 'index.php?route=catalog/product/filter_history&token=<?php echo $token; ?>&product_id=<?php echo $this->request->get['product_id'] ?>';
	<?php } ?> 

	url += '&page_history=' + $('#page_history').val();

	if ($('#sort_history').val()) {
		url += '&sort_history=' + $('#sort_history').val();
	}
	if ($('#order_history').val()) {
		url += '&order_history=' + $('#order_history').val();
	}
		
	var filter_history_date_start = $('input[name=\'filter_history_date_start\']').attr('value');
	
	if (filter_history_date_start) {
		url += '&filter_history_date_start=' + encodeURIComponent(filter_history_date_start);
	}

	var filter_history_date_end = $('input[name=\'filter_history_date_end\']').attr('value');
	
	if (filter_history_date_end) {
		url += '&filter_history_date_end=' + encodeURIComponent(filter_history_date_end);
	}
		
	var filter_history_range = $('select[name=\'filter_history_range\']').attr('value');
	
	if (filter_history_range) {
		url += '&filter_history_range=' + encodeURIComponent(filter_history_range);
	}

	var filter_history_option = $('select[name=\'filter_history_option\']').attr('value');
	
	if (filter_history_option) {
		url += '&filter_history_option=' + encodeURIComponent(filter_history_option);
	}
		
	$.ajax({
		url: url,
		dataType: 'json',
		success: function(json) {
				  $('table.list_main_history tr:gt(0)').empty();
				  $("#historyTemplate").tmpl(json.histories).appendTo("table.list_main_history");
				  if (document.getElementById('main_product').selected && document.getElementById('chart_all_time').selected) {
				  	$('#tab_chart_history').slideDown('fast');
				  } else {
				  	$('#tab_chart_history').slideUp('fast');					
				  }
				  $('#pagination_history').html(json.pagination_history);
				  $('#page_history').val(1);				  
			  }
	});
}

function filter_sale() {
	<?php if (defined('_JEXEC')) { ?>
	url = 'index.php?option=com_mijoshop&format=raw&tmpl=component&route=catalog/product/filter_sale&token=<?php echo $token; ?>&product_id=<?php echo $this->request->get['product_id'] ?>';
	<?php } else { ?>
	url = 'index.php?route=catalog/product/filter_sale&token=<?php echo $token; ?>&product_id=<?php echo $this->request->get['product_id'] ?>';
	<?php } ?> 

	url += '&page_sale=' + $('#page_sale').val();

	if ($('#sort_sale').val()) {
		url += '&sort_sale=' + $('#sort_sale').val();
	}
	if ($('#order_sale').val()) {
		url += '&order_sale=' + $('#order_sale').val();
	}
			
	var filter_sale_date_start = $('input[name=\'filter_sale_date_start\']').attr('value');
	
	if (filter_sale_date_start) {
		url += '&filter_sale_date_start=' + encodeURIComponent(filter_sale_date_start);
	}

	var filter_sale_date_end = $('input[name=\'filter_sale_date_end\']').attr('value');
	
	if (filter_sale_date_end) {
		url += '&filter_sale_date_end=' + encodeURIComponent(filter_sale_date_end);
	}
		
	var filter_sale_range = $('select[name=\'filter_sale_range\']').attr('value');
	
	if (filter_sale_range) {
		url += '&filter_sale_range=' + encodeURIComponent(filter_sale_range);
	}

	var sale_order_statuses = [];
	$('#sale_order_status option:selected').each(function() {
		sale_order_statuses.push($(this).val());
	});
	
	var filter_sale_order_status = sale_order_statuses.join('_');
	
	if (filter_sale_order_status) {
		url += '&filter_sale_order_status=' + encodeURIComponent(filter_sale_order_status);
	}

	var sale_options = [];
	$('#sale_option option:selected').each(function() {
		sale_options.push($(this).val());
	});
	
	var filter_sale_option = sale_options.join('_');
	
	if (filter_sale_option) {
		url += '&filter_sale_option=' + encodeURIComponent(filter_sale_option);
	}
		
	$.ajax({
		url: url,
		dataType: 'json',
		success: function(json) {		
				  $('table.list_main_sale tr:gt(0)').empty();				  
				  $("#saleTemplate").tmpl(json.sales).appendTo("table.list_main_sale");	
				  $("#sale_totalTemplate").tmpl(json.sales).appendTo("table.list_main_sale");
				  var seen = {};
					$('table.list_main_sale tr').each(function() {
    				var txt = $(this).text();
    				if (seen[txt])
        				$(this).remove();
    				else
        				seen[txt] = true;
				  });				  				  
				  $('#pagination_sale').html(json.pagination_sale);
				  $('#page_sale').val(1);				  
			  }
	});	
} 
</script>
<script type="text/javascript">
function gsUVhistory(e, t, v) {
    var n = String(e).split("?");
    var r = "";
    if (n[1]) {
        var i = n[1].split("&");
        for (var s = 0; s <= i.length; s++) {
            if (i[s]) {
                var o = i[s].split("=");
                if (o[0] && o[0] == t) {
                    r = o[1];
                    if (v != undefined) {
                        i[s] = o[0] +'=' + v;
                    }
                    break;
                }
            }
        }
    }
    if (v != undefined) {
        return n[0] +'?'+ i.join('&');
    }
    return r
}

$('#filter_history_range').bind("change", function() {
	$('#page_history').val(1);
	filter_history();
});

$('#date-start-history').bind("change", function() {
	$('#page_history').val(1);
	filter_history();
});

$('#date-end-history').bind("change", function() {
	$('#page_history').val(1);
	filter_history();
});

$('#filter_history_option').bind("change", function() {
	$('#page_history').val(1);
	filter_history();
});

$('#pagination_history .links a').live("click", function() {
	var page_history = gsUVhistory($(this).attr('href'), 'page_history');
	$('#page_history').val(page_history);
	filter_history();
	return false;
});

$('#head_history a').live("click", function() {
	var sort_history = gsUVhistory($(this).attr('href'), 'sort_history');
	$('#sort_history').val(sort_history);
	var order_history = gsUVhistory($(this).attr('href'), 'order_history');
	$('#order_history').val(order_history);
	$(this).attr('href', gsUVhistory($(this).attr('href'), 'order_history', order_history=='DESC'?'ASC':'DESC'));
	$('#head_history a').removeAttr('class');
	this.className = order_history.toLowerCase();
	filter_history();
	return false;
});


function gsUVsale(e, t, v) {
    var n = String(e).split("?");
    var r = "";
    if (n[1]) {
        var i = n[1].split("&");
        for (var s = 0; s <= i.length; s++) {
            if (i[s]) {
                var o = i[s].split("=");
                if (o[0] && o[0] == t) {
                    r = o[1];
                    if (v != undefined) {
                        i[s] = o[0] +'=' + v;
                    }
                    break;
                }
            }
        }
    }
    if (v != undefined) {
        return n[0] +'?'+ i.join('&');
    }
    return r
}

$('#filter_sale_range').bind("change", function() {
	filter_sale();
});

$('#date-start-sale').bind("change", function() {
	filter_sale();
});

$('#date-end-sale').bind("change", function() {
	filter_sale();
});

$('#sale_order_status').bind("change", function() {
	filter_sale();
});

$('#sale_option').bind("change", function() {
	filter_sale();
});

$('#pagination_sale .links a').live("click", function() {
	var page_sale = gsUVsale($(this).attr('href'), 'page_sale');
	$('#page_sale').val(page_sale);
	filter_sale();
	return false;
});

$('#head_sale a').live("click", function() {
	var sort_sale = gsUVsale($(this).attr('href'), 'sort_sale');
	$('#sort_sale').val(sort_sale);
	var order_sale = gsUVsale($(this).attr('href'), 'order_sale');
	$('#order_sale').val(order_sale);
	$(this).attr('href', gsUVsale($(this).attr('href'), 'order_sale', order_sale=='DESC'?'ASC':'DESC'));
	$('#head_sale a').removeAttr('class');
	this.className = order_sale.toLowerCase();
	filter_sale();
	return false;
});
</script> 
<script type="text/javascript">
$(document).ready(function() {
    $("#sale_order_status").multiselect({ checkAllText: "<?php echo $text_select_all; ?>", uncheckAllText: "<?php echo $text_unselect_all; ?>", noneSelectedText: "<?php echo $text_all_sstatus; ?>", selectedText: "<?php echo $text_selected; ?>", minWidth: "200" }); 
	$("#sale_option").multiselect({ checkAllText: "<?php echo $text_select_all; ?>", uncheckAllText: "<?php echo $text_unselect_all; ?>", noneSelectedText: "<?php echo $text_all_soption; ?>", selectedText: "<?php echo $text_selected; ?>", minWidth: "200" }); 
});
</script>
<script type="text/javascript">
$(document).ready(function() {
	$('#date-start-history').datepicker({changeMonth: true, changeYear: true, dateFormat: 'yy-mm-dd'});
	$('#date-end-history').datepicker({changeMonth: true, changeYear: true, dateFormat: 'yy-mm-dd'});
	
	$('#date-start-sale').datepicker({changeMonth: true, changeYear: true, dateFormat: 'yy-mm-dd'});
	$('#date-end-sale').datepicker({changeMonth: true, changeYear: true, dateFormat: 'yy-mm-dd'});	
	
});
</script>
<script type="text/javascript">
	function history_download() {
		var url = 'index.php?route=catalog/product/download_history&token=<?php echo $token; ?>&product_id=<?php echo $this->request->get['product_id'] ?>';
		location = url;
	}
	
	function history_delete() {
		<?php if ($this->user->hasPermission('modify', 'catalog/product')) { ?>
		if(confirm("<?php echo $text_confirm_delete_history;?>") == false) return false;
		var durl = 'index.php?route=catalog/product/delete_history&token=<?php echo $token; ?>&product_id=<?php echo $this->request->get['product_id'] ?>';
		location = durl;
		<?php } else { ?>
		alert("You do not have permission to delete Stock History!");
		<?php } ?>			
	}
</script>
<?php } ?>
<?php } ?>
            ]]></add>
        </operation>
		
        <operation>
            <search position="replace" offset="18"><![CDATA[
<td><input type="text" name="price" value="<?php echo $price; ?>" /></td>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
  <td><table>
  <tr>	
    <td><input type="text" onKeyUp="totalcost(this.form); if(!this.value) this.value=0; totalcost(this.form);" name="price" id="price" value="<?php echo $price; ?>" style="border:thin solid #0C0;" /></td>
  </tr>
  <tr>	
	<td align="center" nowrap="nowrap" style="padding:3px;"><span class="help"><?php echo $text_product_price; ?></span></td>   
  </tr>
  </table>
  </td>
            </tr>
            <tr>
              <td><?php echo $entry_costing_method; ?></td>
              <td>
<style type="text/css">
#show_restock_cost {
    display: none;
}
.chbutton {
	background-color: #1872a2;
	color: #FFF;
	border: thin solid #1872a2;
	font-size: 12px;
	cursor: pointer;
	padding: 4px 10px 5px 2px;
	-webkit-border-radius: 5px 5px 5px 5px;
	-moz-border-radius: 5px 5px 5px 5px;
	-khtml-border-radius: 5px 5px 5px 5px;
	border-radius: 5px 5px 5px 5px;
}
</style> 
<script type="text/javascript">
$(document).ready(function(){
	if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
		var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
		var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
	} else {
		var profit = '0'
		var profit_margin = '0%'
	}
	document.getElementById('form').profit.value = profit
	document.getElementById('form').profit_margin.value = profit_margin
	
	$('#input-costing-method').on('change', function() {
    	if ($("#cost_average").is(":selected")) {		
			
			$("#cont").html("<span style='color:#F00;'><?php echo $text_cost_average_set; ?></span>");
			$("#qnt").html("<span style='color:blue;'><?php echo $text_restock_quantity; ?></span>");
			$("#equal").html("<>");
			$(".show_restock_cost").show();
			
			if (document.getElementById('form').qty_by_option_checkbox.checked == 1) {			
				if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {
					var cost = parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)
					var restock_quantity_temp = parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value))
					var oldcost = parseFloat(document.getElementById('form').oldcost_temp.value)
					var stockquantity = parseFloat(document.getElementById('form').quantity_temp.value) - (parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value)))
					var quantity_temp = parseFloat(document.getElementById('form').quantity_temp.value)
					var totalcost_opt = (((oldcost*stockquantity)+(restock_quantity_temp*cost))/quantity_temp).toFixed(4)
					document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)						
					document.getElementById('form').cost.value = totalcost_opt
				}
				if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {
					var totalcost_opt = (parseFloat(document.getElementById('form').oldcost_temp.value)).toFixed(4)
					document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)					
					document.getElementById('form').cost.value = totalcost_opt
				}
				if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
					var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
					var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
				} else {
					var profit = '0'
					var profit_margin = '0%'
				}
				document.getElementById('form').profit.value = profit
				document.getElementById('form').profit_margin.value = profit_margin				
			} else if (document.getElementById('form').qty_by_option_checkbox.checked == 0) {			
				if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {				
					var cost = parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)
					var restock_quantity = parseFloat(document.getElementById('form').restock_quantity.value)
					var oldcost = parseFloat(document.getElementById('form').oldcost_temp.value)
					var stockquantity = parseFloat(document.getElementById('form').stockquantity_temp.value)
					var quantity = parseFloat(document.getElementById('form').quantity.value)
					var totalcost = (((oldcost*stockquantity)+(restock_quantity*cost))/quantity).toFixed(4)
					document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
					document.getElementById('form').cost.value = totalcost
				}					
				if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {				
					var totalcost = (parseFloat(document.getElementById('form').oldcost_temp.value)).toFixed(4)
					document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
					document.getElementById('form').cost.value = totalcost
				}
				if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
					var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
					var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
				} else {
					var profit = '0'
					var profit_margin = '0%'
				}
				document.getElementById('form').profit.value = profit
				document.getElementById('form').profit_margin.value = profit_margin					
			}
			
    	} else if ($("#cost_fixed").is(":selected")) {		
		
        	$("#cont").html("<span style='color:#666;'><?php echo $text_cost; ?></span>");
			$("#qnt").html("<span style='color:#666;'><?php echo $text_restock_quantity; ?></span>");
			$("#equal").html("=");
			$(".show_restock_cost").hide();
			
			if (document.getElementById('form').qty_by_option_checkbox.checked == 1) {			
				if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {
					var totalcost_opt = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
					document.getElementById('form').cost.value = totalcost_opt
				}
				if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {
					var totalcost_opt = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
					document.getElementById('form').cost.value = totalcost_opt
				}
				if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
					var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
					var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
				} else {
					var profit = '0'
					var profit_margin = '0%'
				}
				document.getElementById('form').profit.value = profit
				document.getElementById('form').profit_margin.value = profit_margin					
			} else if (document.getElementById('form').qty_by_option_checkbox.checked == 0) {			
				if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {				
					var totalcost = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
					document.getElementById('form').cost.value = totalcost
				}					
				if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {				
					var totalcost = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
					document.getElementById('form').cost.value = totalcost
				}
				if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
					var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
					var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
				} else {
					var profit = '0'
					var profit_margin = '0%'
				}
				document.getElementById('form').profit.value = profit
				document.getElementById('form').profit_margin.value = profit_margin				
			}			
	    }
	});	

  	$("#price").keypress(function (e) {
     	if (e.which != 8 && e.which != 0 && (e.which < 46 || e.which > 57)) {
			return false;
    	}
	});	
  	$("#cost_amount").keypress(function (e) {
     	if (e.which != 8 && e.which != 0 && (e.which < 46 || e.which > 57)) {
			return false;
    	}
	});
  	$("#cost_percentage").keypress(function (e) {
     	if (e.which != 8 && e.which != 0 && (e.which < 46 || e.which > 57)) {
			return false;
    	}
	});
  	$("#cost_additional").keypress(function (e) {
     	if (e.which != 8 && e.which != 0 && (e.which < 46 || e.which > 57)) {
			return false;
    	}
	}); 
  	$("#restock_quantity").keypress(function (e) {
     	if (e.which != 8 && e.which != 0 && (e.which < 45 || e.which > 57)) {
			return false;
    	}
	});   
	
	$("#qty_by_option_checkbox").change(function() {
    if (this.checked) {
		$("#restock_quantity").attr('readonly', 'readonly');
		$("#restock_quantity").css('background-color', '#EEE');
		$("#qupdatemsg").html("<?php echo $text_qty_set_by_option; ?>").show().delay(1000).fadeOut(1500);
		if (document.getElementById('form').restock_quantity_temp.value == 0 && document.getElementById('form').quantity_temp.value == 0 && document.getElementById('form').remove_temp.value == 0) {
			var restock = 0;
			var total = 0;

	  		$('.addRestock').each(function () {
			  	restock += parseInt($(this).val()); 
			});	
	 	 	$('.addOption').each(function () {
			  	restock += parseInt($(this).val()); 
			});
	
			$('.addTotal').each(function () {
			  	total += parseInt($(this).val()); 
	 		});		
			$('.addOption').each(function () {
			 	total += parseInt($(this).val()); 
	  		});			
					
			$('#restock_quantity').val(restock);
			$('#quantity').val(total);
		}

		if (document.getElementById('input-costing-method').value == '1') {
			if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {
				var cost = parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)
				var restock_quantity_temp = parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value))
				var oldcost = parseFloat(document.getElementById('form').oldcost_temp.value)
				var stockquantity = parseFloat(document.getElementById('form').quantity_temp.value) - (parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value)))
				var quantity_temp = parseFloat(document.getElementById('form').quantity_temp.value)
				var totalcost_opt = (((oldcost*stockquantity)+(restock_quantity_temp*cost))/quantity_temp).toFixed(4)
				document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost_opt
			}
			if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {
				var totalcost_opt = (parseFloat(document.getElementById('form').oldcost_temp.value)).toFixed(4)
				document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost_opt
			}
			if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
				var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
				var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
			} else {
				var profit = '0'
				var profit_margin = '0%'
			}
			document.getElementById('form').profit.value = profit
			document.getElementById('form').profit_margin.value = profit_margin				
		} else if (document.getElementById('input-costing-method').value == '0') {
			if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {				
				var totalcost = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost
			}					
			if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {				
				var totalcost = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost
			}
			if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
				var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
				var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
			} else {
				var profit = '0'
				var profit_margin = '0%'
			}
			document.getElementById('form').profit.value = profit
			document.getElementById('form').profit_margin.value = profit_margin			
		}	
				
	} else {
		$("#restock_quantity").removeAttr('readonly');
		$("#restock_quantity").css('background-color', '');	
		
		var restock = 0;
		var quantity = parseFloat(document.getElementById('form').stockquantity_temp.value)
		document.getElementById('form').restock_quantity.value = restock	
		document.getElementById('form').quantity.value = quantity	
		
		if (document.getElementById('input-costing-method').value == '1') {
			if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {
				var cost = parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)
				var restock_quantity_temp = parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value))
				var oldcost = parseFloat(document.getElementById('form').oldcost_temp.value)
				var stockquantity = parseFloat(document.getElementById('form').quantity_temp.value) - (parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value)))
				var quantity_temp = parseFloat(document.getElementById('form').quantity_temp.value)
				var totalcost_opt = (((oldcost*stockquantity)+(restock_quantity_temp*cost))/quantity_temp).toFixed(4)
				document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost_opt
			}
			if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {
				var totalcost_opt = (parseFloat(document.getElementById('form').oldcost_temp.value)).toFixed(4)
				document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost_opt
			}
			if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
				var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
				var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
			} else {
				var profit = '0'
				var profit_margin = '0%'
			}
			document.getElementById('form').profit.value = profit
			document.getElementById('form').profit_margin.value = profit_margin				
		} else if (document.getElementById('input-costing-method').value == '0') {
			if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {				
				var totalcost = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost
			}					
			if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {				
				var totalcost = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost
			}
			if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
				var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
				var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
			} else {
				var profit = '0'
				var profit_margin = '0%'
			}
			document.getElementById('form').profit.value = profit
			document.getElementById('form').profit_margin.value = profit_margin				
		}			
    }
	});	
});

$(function () {
    $('.button-checkbox').each(function () {

        // Settings
        var $widget = $(this),
            $button = $widget.find('button'),
            $checkbox = $widget.find('input:checkbox'),
            color = $button.data('color'),
            settings = {
                on: {
                    icon: 'glyphicon glyphicon-check'
                },
                off: {
                    icon: 'glyphicon glyphicon-unchecked'
                }
            };

        // Event Handlers
        $button.on('click', function () {
            $checkbox.prop('checked', !$checkbox.is(':checked'));
            $checkbox.triggerHandler('change');
            updateDisplay();
        });
        $checkbox.on('change', function () {
            updateDisplay();
        });

        // Actions
        function updateDisplay() {
            var isChecked = $checkbox.is(':checked');

            // Set the button's state
            $button.data('state', (isChecked) ? "on" : "off");

            // Set the button's icon
            $button.find('.state-icon')
                .removeClass()
                .addClass('state-icon ' + settings[$button.data('state')].icon);
        }

        // Initialization
        function init() {

            updateDisplay();

            // Inject the icon if applicable
            if ($button.find('.state-icon').length == 0) {
                $button.prepend('<i class="state-icon ' + settings[$button.data('state')].icon + '"></i> ');
            }
        }
        init();
    });
});

function addRestock() {
	var restock = 0;
	var total = 0;

	$('.addRestock').each(function () {
	  	restock += parseInt($(this).val()); 
	});
	$('.addOption').each(function () {
	  	restock += parseInt($(this).val()); 
	});
			
	$('.addTotal').each(function () {
	 	total += parseInt($(this).val()); 
  	});	
	$('.addOption').each(function () {
	 	total += parseInt($(this).val()); 
  	});	
		
	$('#restock_quantity_temp').val(restock);
	$('#quantity_temp').val(total);			
}

function addOption() {
	var restock = 0;
	var total = 0;

  	$('.addRestock').each(function () {
	  	restock += parseInt($(this).val()); 
	});	
  	$('.addOption').each(function () {
	  	restock += parseInt($(this).val()); 
	});
			
  	$('.addTotal').each(function () {
	 	total += parseInt($(this).val()); 
	});		
  	$('.addOption').each(function () {
	 	total += parseInt($(this).val()); 
	});				

	$('#restock_quantity_temp').val(restock);
	$('#quantity_temp').val(total);
}	

function optRemove() {
	var total = 0;
			
  	$('.addTotal').each(function () {
	 	total += parseInt($(this).val()); 
	});		
  	$('.addOption').each(function () {
	 	total += parseInt($(this).val()); 
	});				

	$('#quantity_temp').val(total);			
}		

function optRemoveGroup() {
	var total = 0;
			
  	$('.addTotal').each(function () {
	 	total += parseInt($(this).val()); 
	});		
  	$('.addOption').each(function () {
	 	total += parseInt($(this).val()); 
	});				

	$('#quantity_temp').val(total);		
}	

$(document).on('mouseup', '#optInitialize', function(event) {
	var total = 0;
			
	$('.addTotal').each(function () {
	 	total += parseInt($(this).val()); 
  	});		
	$('.addOption').each(function () {
	 	total += parseInt($(this).val()); 
  	});				

	$('#quantity_temp').val(total);
	$('#remove_temp').val(total);
	$(this).off(event);
});
	 
function totalcost() {
	if (document.getElementById('input-costing-method').value == '0') {
		var totalcost = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
		document.getElementById('form').cost.value = totalcost
	}	
	
	if (document.getElementById('input-costing-method').value == '1') {
		if ($('#qty_by_option_checkbox').is(':checked')) {
			if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {
				var cost = parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)
				var restock_quantity_temp = parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value))
				var oldcost = parseFloat(document.getElementById('form').oldcost_temp.value)
				var stockquantity = parseFloat(document.getElementById('form').quantity_temp.value) - (parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value)))
				var quantity_temp = parseFloat(document.getElementById('form').quantity_temp.value)
				var totalcost_opt = (((oldcost*stockquantity)+(restock_quantity_temp*cost))/quantity_temp).toFixed(4)
				document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost_opt
			}
		} else {
			if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {		
				var cost = parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)
				var restock_quantity = parseFloat(document.getElementById('form').restock_quantity.value)
				var oldcost = parseFloat(document.getElementById('form').oldcost_temp.value)
				var stockquantity = parseFloat(document.getElementById('form').stockquantity_temp.value)
				var quantity = parseFloat(document.getElementById('form').quantity.value)
				var totalcost = (((oldcost*stockquantity)+(restock_quantity*cost))/quantity).toFixed(4)
				document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
				document.getElementById('form').cost.value = totalcost
			}
		}					
		if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {				
			var totalcost = (parseFloat(document.getElementById('form').oldcost_temp.value)).toFixed(4)
			document.getElementById('form').restock_cost.value = (parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)).toFixed(4)
			document.getElementById('form').cost.value = totalcost
		}
	}
	if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
		var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
		var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
	} else {
		var profit = '0'
		var profit_margin = '0%'
	}
	document.getElementById('form').profit.value = profit
	document.getElementById('form').profit_margin.value = profit_margin		
}

function stockquantity() {
	if (document.getElementById('form').restock_quantity.value != '') {
			var stockquantity = parseFloat(document.getElementById('form').restock_quantity.value) + parseFloat(document.getElementById('form').stockquantity_temp.value)
			document.getElementById('form').quantity.value = stockquantity	
	}
	if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
		var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
		var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
	} else {
		var profit = '0'
		var profit_margin = '0%'
	}
	document.getElementById('form').profit.value = profit
	document.getElementById('form').profit_margin.value = profit_margin		
}

function totalcost_opt() {
  if ($('#qty_by_option_checkbox').is(':checked')) {
	if (document.getElementById('form').restock_quantity.value != '' && document.getElementById('form').restock_quantity.value != 0) {
		if (document.getElementById('input-costing-method').value == '1') {
			var cost = parseFloat(document.getElementById('form').cost_amount.value) + parseFloat((document.getElementById('form').cost_percentage.value / 100)*document.getElementById('form').price.value) + parseFloat(document.getElementById('form').cost_additional.value)
			var restock_quantity_temp = parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value))
			var oldcost = parseFloat(document.getElementById('form').oldcost_temp.value)
			var stockquantity = parseFloat(document.getElementById('form').quantity_temp.value) - (parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value)))
			var quantity_temp = parseFloat(document.getElementById('form').quantity_temp.value)
			var totalcost_opt = (((oldcost*stockquantity)+(restock_quantity_temp*cost))/quantity_temp).toFixed(4)
			document.getElementById('form').cost.value = totalcost_opt
		}
	}
	if (document.getElementById('form').restock_quantity.value == '' || document.getElementById('form').restock_quantity.value == 0) {
		if (document.getElementById('input-costing-method').value == '1') {			
			var totalcost_opt = (parseFloat(document.getElementById('form').oldcost_temp.value)).toFixed(4)
			document.getElementById('form').cost.value = totalcost_opt
		}
	}		
  }
	if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
		var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
		var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
	} else {
		var profit = '0'
		var profit_margin = '0%'
	}
	document.getElementById('form').profit.value = profit
	document.getElementById('form').profit_margin.value = profit_margin	
}

function restockquantity_opt() {
  if ($('#qty_by_option_checkbox').is(':checked')) {
	if (document.getElementById('form').restock_quantity.value != '') {
		var restockquantity_opt = parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value))
		document.getElementById('form').restock_quantity.value = restockquantity_opt
	}
  }
	if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
		var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
		var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
	} else {
		var profit = '0'
		var profit_margin = '0%'
	}
	document.getElementById('form').profit.value = profit
	document.getElementById('form').profit_margin.value = profit_margin	
}

function quantity_opt() {
  if ($('#qty_by_option_checkbox').is(':checked')) {
	var quantity_opt = parseFloat(document.getElementById('form').quantity_temp.value)
	document.getElementById('form').quantity.value = quantity_opt
  }
	if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
		var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
		var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
	} else {
		var profit = '0'
		var profit_margin = '0%'
	}
	document.getElementById('form').profit.value = profit
	document.getElementById('form').profit_margin.value = profit_margin		
}

function restockquantity_ini() {
	if (document.getElementById('form').restock_quantity.value != '') {
		var restockquantity_opt = parseFloat(document.getElementById('form').restock_quantity_temp.value) + ((parseFloat(document.getElementById('form').quantity_temp.value) - parseFloat(document.getElementById('form').restock_quantity_temp.value)) - parseFloat(document.getElementById('form').remove_temp.value))
		document.getElementById('form').restock_quantity.value = restockquantity_opt
	}
	if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
		var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
		var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
	} else {
		var profit = '0'
		var profit_margin = '0%'
	}
	document.getElementById('form').profit.value = profit
	document.getElementById('form').profit_margin.value = profit_margin	
}

function quantity_ini() {
	var quantity_opt = parseFloat(document.getElementById('form').quantity_temp.value)
	document.getElementById('form').quantity.value = quantity_opt
	
	if (document.getElementById('form').cost.value > 0 || document.getElementById('form').cost_amount.value > 0) {
		var profit = (parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)).toFixed(4)
		var profit_margin = (100*(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)) / (parseFloat(document.getElementById('form').cost.value)+(parseFloat(document.getElementById('form').price.value) - parseFloat(document.getElementById('form').cost.value)))).toFixed(2)+'%'
	} else {
		var profit = '0'
		var profit_margin = '0%'
	}
	document.getElementById('form').profit.value = profit
	document.getElementById('form').profit_margin.value = profit_margin	
}
</script>
			  <select name="costing_method" id="input-costing-method" style="border:thin solid #F99;">
                	<?php if (!$costing_method or $costing_method == '0') { ?>
            			<option value="0" id="cost_fixed" selected="selected"><?php echo $text_cost_fixed; ?></option>
            		<?php } else { ?>
            			<option value="0" id="cost_fixed"><?php echo $text_cost_fixed; ?></option>
                	<?php } ?> 
                	<?php if ($costing_method == '1') { ?>
            			<option value="1" id="cost_average" selected="selected"><?php echo $text_cost_average; ?></option>
            		<?php } else { ?>
            			<option value="1" id="cost_average"><?php echo $text_cost_average; ?></option>
                	<?php } ?> 
                	<?php if ($costing_method == '2') { ?>
            			<option value="2" id="cost_fifo" selected="selected" disabled="disabled" style="color:#999"><?php echo $text_cost_fifo; ?></option>
            		<?php } else { ?>
            			<option value="2" id="cost_fifo" disabled="disabled" style="color:#999"><?php echo $text_cost_fifo; ?></option>
                	<?php } ?> 
                </select></td>
            </tr>			
            <tr>
            <td><?php echo $entry_cost; ?></td>
            <td>
  <table> 
  <tr>
    <td nowrap="nowrap"><input type="hidden" id="oldcost_temp" name="oldcost_temp" value="<?php echo $cost; ?>" /><input type="text" id="cost" name="cost" value="<?php echo $cost; ?>" style="text-align:right; background-color:#ffd7d7; border:thin solid #F99;" readonly /></td>
    <td align="center" nowrap="nowrap"><?php if ($costing_method == '1') { ?><span id="equal"><></span><?php } else { ?>&nbsp;<span id="equal">=</span><?php } ?></td>
	<td class="show_restock_cost" width="110" <?php echo ($costing_method == 1) ? '' : 'style="display:none;"' ?> ><input type="text" id="restock_cost" name="restock_cost" value="<?php echo $restock_cost; ?>" style="text-align:right; background-color:#EEE; border:thin solid #F99;" readonly /></td>
	<td class="show_restock_cost" width="10" align="center" <?php echo ($costing_method == 1) ? '' : 'style="display:none;"' ?> >=</td>	
	<td align="center" nowrap="nowrap">
    <table cellspacing="0" cellpadding="3" style="border:#F99 solid 1px;"> 
    <tr>
    <td width="110"><input onKeyUp="totalcost(this.form); if(!this.value) this.value=0; totalcost(this.form);" type="text" id="cost_amount"  name="cost_amount" value="<?php echo $cost_amount; ?>" style="border:thin solid #CCC; width:100px;" /></td>
    <td width="40" align="left"><?php echo $text_cost_or; ?></td>
    <td width="120"><input onKeyUp="totalcost(this.form); if(!this.value) this.value=0; totalcost(this.form);" type="text" id="cost_percentage" name="cost_percentage" maxlength="5" value="<?php echo $cost_percentage; ?>" style="border:thin solid #CCC; width:100px;" /> %</td>
    <td width="10" align="center">+</td>
    <td width="105"><input onKeyUp="totalcost(this.form); if(!this.value) this.value=0; totalcost(this.form);" type="text" id="cost_additional" name="cost_additional" value="<?php echo $cost_additional; ?>" style="border:thin solid #CCC; width:100px;" /></td>
	</tr></table>
  </td>	
  </tr>
  <tr>
    <td align="center" valign="top" nowrap="nowrap"><?php if ($costing_method == '1') { ?><span id="cont" class="help" style="color:#F00;"><?php echo $text_cost_average_set; ?></span><?php } else { ?><span id="cont" class="help"><?php echo $text_cost; ?></span><?php } ?></td>
    <td>&nbsp;</td>
    <td class="show_restock_cost" width="110" align="center" valign="top" nowrap="nowrap" <?php echo ($costing_method == 1) ? '' : 'style="display:none;"' ?> ><span id="cont" class="help" style="color:#F00;"><?php echo $text_restock_cost; ?></span></td>
    <td class="show_restock_cost" width="10" <?php echo ($costing_method == 1) ? '' : 'style="display:none;"' ?> >&nbsp;</td>
	<td>
    <table cellspacing="0" cellpadding="3"> 
    <tr>
    <td width="110" align="center" valign="top" nowrap="nowrap"><span class="help"><?php echo $text_cost_amount; ?></span></td>
    <td width="40">&nbsp;</td>
    <td width="120" align="center" valign="top" nowrap="nowrap"><span class="help"><?php echo $text_cost_percentage; ?></span></td>
    <td width="15">&nbsp;</td>
    <td width="110" align="center" valign="top" nowrap="nowrap"><span class="help"><?php echo $text_cost_additional; ?></span></td>
	</tr></table>
  </td>		
  </tr>
  </table></td>
          </tr>
		  <tr>
              <td><?php echo $entry_profit; ?></td>
  <td><table>
  <tr>	
  	<td>
	<input type="text" id="profit" value="0" style="background-color:#EEE; border:thin solid #999;" readonly />
	</td>
	<td>&nbsp;&nbsp;&nbsp;</td> 
	<td>
	<input type="text" id="profit_margin" value="0" class="form-control" style="background-color:#EEE; border:thin solid #999;" readonly />
	</td>
  </tr>
  </table></td></tr> 
  <tr>
		  <tr>
              <td><?php echo $entry_quantity; ?></td>
  <td><table>
  <tr>	
  	<td align="center" nowrap="nowrap"><input type="hidden" id="restock_quantity_temp" name="restock_quantity_temp" value="<?php echo $restock_quantity_temp; ?>" /><input type="hidden" id="quantity_temp" name="quantity_temp" value="<?php echo $quantity_temp; ?>" /><input type="hidden" id="remove_temp" name="remove_temp" value="<?php echo $remove_temp; ?>" />
	    <span class="button-checkbox">
        <button type="button" onclick="restockquantity_ini(this.form); quantity_ini(this.form);" class="chbutton"><input type="checkbox" id="qty_by_option_checkbox" style="vertical-align:middle;" /><?php echo $text_qty_by_option; ?></button>
    </span>&nbsp;&nbsp;</td>
	<td>
	<input type="text" id="restock_quantity" onKeyUp="stockquantity(this.form); if(!this.value) this.value=0; stockquantity(this.form); totalcost(this.form);" name="restock_quantity" value="<?php echo $restock_quantity; ?>" size="4" style="border:thin solid #69F;" />
	</td>
	<td>&nbsp;&nbsp;</td>
	<td>
	<input type="hidden" id="stockquantity_temp" name="stockquantity_temp" value="<?php echo $quantity; ?>" />
	<input type="text" id="quantity" name="quantity" value="<?php echo $quantity; ?>" size="4" style="background-color:#c4d9ee; border:thin solid #69F;" readonly />
	</td>
  </tr>
  <tr>	
	<td align="center"><span id="qupdatemsg" style="color:#F00;"></span></td>   
    <td nowrap="nowrap" style="padding:3px;"><span id="qnt" class="help" <?php echo ($costing_method == 1) ? 'style="color:blue;"' : 'style="color:#666;"' ?> ><?php echo $text_restock_quantity; ?></span></td>
	<td>&nbsp;&nbsp;</td>
	<td nowrap="nowrap" style="padding:3px;"><span class="help"><?php echo $text_totalstock; ?></span></td>   
  </tr>
  </table></td></tr> 
  <tr>
              <td><?php echo $entry_tax_class; ?></td>
              <td><select name="tax_class_id">
                  <option value="0"><?php echo $text_none; ?></option>
                  <?php foreach ($tax_classes as $tax_class) { ?>
                  <?php if ($tax_class['tax_class_id'] == $tax_class_id) { ?>
                  <option value="<?php echo $tax_class['tax_class_id']; ?>" selected="selected"><?php echo $tax_class['title']; ?></option>
                  <?php } else { ?>
                  <option value="<?php echo $tax_class['tax_class_id']; ?>"><?php echo $tax_class['title']; ?></option>
                  <?php } ?>
                  <?php } ?>
                </select></td>  
<?php } else { ?>
              <td><input type="text" name="price" value="<?php echo $price; ?>" /></td>
            </tr>
            <tr>
              <td><?php echo $entry_tax_class; ?></td>
              <td><select name="tax_class_id">
                  <option value="0"><?php echo $text_none; ?></option>
                  <?php foreach ($tax_classes as $tax_class) { ?>
                  <?php if ($tax_class['tax_class_id'] == $tax_class_id) { ?>
                  <option value="<?php echo $tax_class['tax_class_id']; ?>" selected="selected"><?php echo $tax_class['title']; ?></option>
                  <?php } else { ?>
                  <option value="<?php echo $tax_class['tax_class_id']; ?>"><?php echo $tax_class['title']; ?></option>
                  <?php } ?>
                  <?php } ?>
                </select></td>
            </tr>
            <tr>
              <td><?php echo $entry_quantity; ?></td>
              <td><input type="text" name="quantity" value="<?php echo $quantity; ?>" size="2" />
		  <input type="hidden" name="costing_method" value="<?php echo $costing_method; ?>" />
		  <input type="hidden" name="cost" value="<?php echo $cost; ?>" />
		  <input type="hidden" name="restock_cost" value="<?php echo $restock_cost; ?>" />
		  <input type="hidden" name="cost_amount" value="<?php echo $cost_amount; ?>" />
		  <input type="hidden" name="cost_percentage" value="<?php echo $cost_percentage; ?>" />
		  <input type="hidden" name="cost_additional" value="<?php echo $cost_additional; ?>" />
		  <input type="hidden" name="restock_quantity" value="<?php echo $restock_quantity; ?>" /></td>  
<?php } ?>	
			]]></add>
		</operation>

		<operation>
			<search position="replace" index="1"><![CDATA[
<td class="right"><?php echo $entry_quantity; ?></td>
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>		
				<td class="center"><?php echo $entry_quantity; ?></td>
<?php } else { ?>				
				<td class="right"><?php echo $entry_quantity; ?></td>
<?php } ?>	
			]]></add>
		</operation>

		<operation>
			<search position="replace" index="1"><![CDATA[
<td class="right"><?php echo $entry_price; ?></td>
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>		
                  <td class="center"><?php echo $entry_price; ?></td>
<?php } else { ?>				
                  <td class="right"><?php echo $entry_price; ?></td>
<?php } ?>	
			]]></add>
		</operation>
				
		<operation>
			<search position="before" index="1"><![CDATA[
<td class="right"><?php echo $entry_option_points; ?></td>
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>		
				<td class="center"><?php echo $entry_option_cost; ?></td> 
<?php } ?>	
			]]></add>
		</operation>

		<operation>		
			<search position="replace"><![CDATA[
<td class="right"><input type="text" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][quantity]" value="<?php echo $product_option_value['quantity']; ?>" size="3" /></td>
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
                  <td class="center" nowrap="nowrap">
<script type="text/javascript">
$(document).ready(function(){
	$('#input-costing-method_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>').on('change', function() {
    	if ($("#cost_average_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").is(":selected")) {	
			$("#cont_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").html("<span style='color:#F00;'><?php echo $text_option_cost_average_set; ?></span>");
			$("#recost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").html("<span style='color:#F00;'><?php echo $text_option_restock_cost; ?></span>");
			$("#qnt_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").html("<span style='color:blue;'><?php echo $text_restock_quantity; ?></span>");
			$("#equal_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").html("<>");
			
		if (document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value != '' && document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value != 0) {	
			var option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_cost_amount_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_restockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_oldcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_oldcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_stockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_stock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = (((option_oldcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>*option_stockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>)+(option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>*option_restockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>))/option_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>).toFixed(4)
			document.getElementById('form').option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value = option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>
		}				
		if (document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value == '' || document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value == 0) {				
			var option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = (parseFloat(document.getElementById('form').option_oldcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)).toFixed(4)
			document.getElementById('form').option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value = option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>
		}
					
    	} else if ($("#cost_fixed_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").is(":selected")) {
		
        	$("#cont_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").html("<span style='color:#666;'><?php echo $text_option_cost; ?></span>");
			$("#recost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").html("<span style='color:#666;'><?php echo $text_cost_amount; ?></span>");
			$("#qnt_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").html("<span style='color:#666;'><?php echo $text_restock_quantity; ?></span>");
			$("#equal_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").html("=");
			
			var option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = (parseFloat(document.getElementById('form').option_cost_amount_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)).toFixed(4)
			document.getElementById('form').option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value = option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>			
	    }	
	});
	
  	$("#option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").keypress(function (e) {
     	if (e.which != 8 && e.which != 0 && (e.which < 45 || e.which > 57)) {
			return false;
    	}
	});
  	$("#option_cost_amount_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>").keypress(function (e) {
     	if (e.which != 8 && e.which != 0 && (e.which < 46 || e.which > 57)) {
			return false;
    	}
	});	
});

function option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>() {
	if (document.getElementById('input-costing-method_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>').value == '0') {
		var option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = (parseFloat(document.getElementById('form').option_cost_amount_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)).toFixed(4)
		document.getElementById('form').option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value = option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>
	}	
	
	if (document.getElementById('input-costing-method_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>').value == '1') {
		if (document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value != '' && document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value != 0) {	
			var option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_cost_amount_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_restockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_oldcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_oldcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_stockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_stock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
			var option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = (((option_oldcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>*option_stockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>)+(option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>*option_restockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>))/option_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>).toFixed(4)
			document.getElementById('form').option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value = option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>
		}				
		if (document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value == '' || document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value == 0) {				
			var option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = (parseFloat(document.getElementById('form').option_oldcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)).toFixed(4)
			document.getElementById('form').option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value = option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>
		}						
	}			
}

function option_stockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>() {
	if (document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value != '') {
		var option_stockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?> = parseFloat(document.getElementById('form').option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value) + parseFloat(document.getElementById('form').option_stock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value)
		document.getElementById('form').option_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>.value = option_stockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>
	}
}
</script>
<div align="center">
    <div style="width:100%; display:table-row;">
	<div style="width:50%; display:table-cell; padding-right:2px;">
	<input class="addRestock" onKeyUp="option_stockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>(this.form); if(!this.value) this.value=0; option_stockquantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>(this.form); option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>(this.form); addRestock(this.form); restockquantity_opt(this.form); quantity_opt(this.form); totalcost_opt(this.form);" onblur="if(!this.value) this.value=0;" type="text" id="option_restock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][option_restock_quantity]" value="<?php echo $product_option_value['option_restock_quantity']; ?>" size="4" style="border:thin solid #69F;" /></div>	
	<div style="width:50%; display:table-cell; padding-left:2px;">
	<input class="addTotal" type="text" id="option_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][quantity]" value="<?php echo $product_option_value['quantity']; ?>" size="4" style="background-color:#c4d9ee; border:thin solid #69F;" readonly /><input type="hidden" id="option_stock_quantity_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" value="<?php echo $product_option_value['quantity']; ?>" /></div>
	</div> 
    <div style="width:100%; display:table-row;">
	<div style="width:50%; display:table-cell; text-align:center; padding-right:2px; padding-top:3px;"><span class="help" id="qnt_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" <?php echo ($product_option_value['costing_method'] == '1') ? 'style="color:blue;"' : 'style="color:#666;"' ?> ><?php echo $text_restock_quantity; ?></span></div>
	<div style="width:50%; display:table-cell; text-align:center; padding-left:2px; padding-top:3px;"><span class="help"><?php echo $text_option_totalstock; ?></span></div>
	</div>
</div>	  
				</td>  
<?php } else { ?>
                  <td class="right"><input type="text" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][quantity]" value="<?php echo $product_option_value['quantity']; ?>" size="3" /></td>
<?php } ?>	
			]]></add>
		</operation>

		<operation>		
			<search position="replace" offset="12"><![CDATA[
<td class="right"><select name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][price_prefix]">
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>			
                  <td class="right" nowrap="nowrap">
  <table align="center" cellpadding="0" cellspacing="0">
  <tr>
    <td align="left" style="border:0;"><select name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][price_prefix]" style="border:thin solid #0C0;">
                      <?php if ($product_option_value['price_prefix'] == '+') { ?>
                      <option value="+" selected="selected">+</option>
                      <?php } else { ?>
                      <option value="+">+</option>
                      <?php } ?>
                      <?php if ($product_option_value['price_prefix'] == '-') { ?>
                      <option value="-" selected="selected">-</option>
                      <?php } else { ?>
                      <option value="-">-</option>
                      <?php } ?>
                    </select>
                    <input type="text" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][price]" value="<?php echo $product_option_value['price']; ?>" size="5" style="border:thin solid #0C0;" /></td> 
  </tr>
  <tr>	
	<td align="center" nowrap="nowrap" style="border:0; padding-top:3px;"><span class="help"><?php echo $text_option_price; ?></span></td>   
  </tr>
  </table>
				</td>  
<?php } else { ?>
                  <td class="right">
					<select name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][price_prefix]">
                      <?php if ($product_option_value['price_prefix'] == '+') { ?>
                      <option value="+" selected="selected">+</option>
                      <?php } else { ?>
                      <option value="+">+</option>
                      <?php } ?>
                      <?php if ($product_option_value['price_prefix'] == '-') { ?>
                      <option value="-" selected="selected">-</option>
                      <?php } else { ?>
                      <option value="-">-</option>
                      <?php } ?>
                    </select>
                    <input type="text" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][price]" value="<?php echo $product_option_value['price']; ?>" size="5" />  
				</td>					
<?php } ?>	
			]]></add>
		</operation>

        <operation>		
            <search position="before"><![CDATA[
<td class="right"><select name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][points_prefix]">
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>				
                  <td class="center" nowrap="nowrap">
<div align="center">				  
  <div style="display:table; margin-bottom:3px;">
   <div style="display:table-row;">  
	<div style="display:table-cell; text-align:center;">
                  <select name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][costing_method]" id="input-costing-method_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" style="border:thin solid #F99; width:100%;">
                	<?php if (!$product_option_value['costing_method'] or $product_option_value['costing_method'] == '0') { ?>
            			<option value="0" id="cost_fixed_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" selected="selected"><?php echo $text_cost_fixed; ?></option>
            		<?php } else { ?>
            			<option value="0" id="cost_fixed_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>"><?php echo $text_cost_fixed; ?></option>
                	<?php } ?> 
                	<?php if ($product_option_value['costing_method'] == '1') { ?>
            			<option value="1" id="cost_average_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" selected="selected"><?php echo $text_cost_average; ?></option>
            		<?php } else { ?>
            			<option value="1" id="cost_average_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>"><?php echo $text_cost_average; ?></option>
                	<?php } ?> 
                	<?php if ($product_option_value['costing_method'] == '2') { ?>
            			<option value="2" id="cost_fifo_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" selected="selected" disabled="disabled" style="color:#999;"><?php echo $text_cost_fifo; ?></option>
            		<?php } else { ?>
            			<option value="2" id="cost_fifo_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" disabled="disabled" style="color:#999;"><?php echo $text_cost_fifo; ?></option>
                	<?php } ?> 
                  </select>
	</div>
   </div>
  </div>
  <div style="display:table;">  
   <div style="display:table-row;">
	<div style="display:table-cell; text-align:center;">
				    <select name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][cost_prefix]" style="background-color:#ffd7d7; border:thin solid #F99;">
                      <?php if ($product_option_value['cost_prefix'] == '+') { ?>
                      <option value="+" selected="selected">+</option>
                      <?php } else { ?>
                      <option value="+">+</option>
                      <?php } ?>
                      <?php if ($product_option_value['cost_prefix'] == '-') { ?>
                      <option value="-" selected="selected">-</option>
                      <?php } else { ?>
                      <option value="-">-</option>
                      <?php } ?>
                    </select>
                    <input type="hidden" id="option_oldcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" value="<?php echo $product_option_value['cost']; ?>" /><input type="text" id="option_cost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][cost]" value="<?php echo $product_option_value['cost']; ?>" size="7" style="background-color:#ffd7d7; border:thin solid #F99;" readonly /></div>
	<div style="display:table-cell; padding-left:5px; vertical-align:middle; padding-right:5px;">
	<?php if ($product_option_value['costing_method'] == '1') { ?><span id="equal_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>"><></span><?php } else { ?><span id="equal_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>">=</span><?php } ?></div>
	<div style="display:table-cell; vertical-align:middle;">
	<input onKeyUp="option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>(this.form); if(!this.value) this.value=0; option_totalcost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>(this.form);" type="text" id="option_cost_amount_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][cost_amount]" value="<?php echo $product_option_value['cost_amount']; ?>" size="7" style="border:thin solid #F99;" /></div>
  </div>
  <div style="display:table-row;">
	<div style="display:table-cell; text-align:center; vertical-align:middle; padding-top:3px;">
	<?php if ($product_option_value['costing_method'] == '1') { ?><span id="cont_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" class="help" style="color:#F00;"><?php echo $text_option_cost_average_set; ?></span><?php } else { ?><span id="cont_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" class="help"><?php echo $text_option_cost; ?></span><?php } ?></div>
	<div style="display:table-cell;"></div>
	<div style="display:table-cell; text-align:center; padding-top:3px;">
	<?php if ($product_option_value['costing_method'] == '1') { ?><span id="recost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" class="help" style="color:#F00;"><?php echo $text_option_restock_cost; ?></span><?php } else { ?><span id="recost_<?php echo $option_row; ?>_<?php echo $option_value_row; ?>" class="help"><?php echo $text_cost_amount; ?></span><?php } ?></div>
   </div>
  </div>
</div>  
  </td>	 
<?php } else { ?>
<?php if ($product_option_value['cost_prefix'] == '+') { ?>
		  		  <input type="hidden" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][cost_prefix]" value="+" />
<?php } ?>
<?php if ($product_option_value['cost_prefix'] == '-') { ?>
		  		  <input type="hidden" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][cost_prefix]" value="-" />
<?php } ?>				  
		  		  <input type="hidden" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][costing_method]" value="<?php echo $product_option_value['costing_method']; ?>" />
		  		  <input type="hidden" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][cost_amount]" value="<?php echo $product_option_value['cost_amount']; ?>" />
		  		  <input type="hidden" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][cost]" value="<?php echo $product_option_value['cost']; ?>" />
				  <input type="hidden" name="product_option[<?php echo $option_row; ?>][product_option_value][<?php echo $option_value_row; ?>][option_restock_quantity]" value="<?php echo $product_option_value['option_restock_quantity']; ?>" />
<?php } ?>						
            ]]></add>
        </operation>

        <operation>
            <search position="replace" offset="7"><![CDATA[
<td class="left"><a onclick="$('#option-value-row<?php echo $option_value_row; ?>').remove();" class="button"><?php echo $button_remove; ?></a></td>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
                  <td class="left"><a id="remove-option-value-row<?php echo $option_value_row; ?>" onclick="$('#option-value-row<?php echo $option_value_row; ?>').remove(); optRemove(this.form); restockquantity_opt(this.form); quantity_opt(this.form); totalcost_opt(this.form);" class="button"><?php echo $button_remove; ?></a></td>
<?php } else { ?>
                  <td class="left"><a onclick="$('#option-value-row<?php echo $option_value_row; ?>').remove();" class="button"><?php echo $button_remove; ?></a></td>
<?php } ?>				
                </tr>
              </tbody>
              <?php $option_value_row++; ?>
              <?php } ?>
              <tfoot>
                <tr>
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>				
                  <td colspan="7"></td>
<?php } else { ?>
                  <td colspan="6"></td>	
<?php } ?>					  
            ]]></add>
        </operation>

        <operation>
            <search position="replace"><![CDATA[
<a href="#tab-option-<?php echo $option_row; ?>" id="option-<?php echo $option_row; ?>"><?php echo $product_option['name']; ?>&nbsp;<img src="view/image/delete.png" alt="" onclick="$('#option-<?php echo $option_row; ?>').remove(); $('#tab-option-<?php echo $option_row; ?>').remove(); $('#vtabs a:first').trigger('click'); return false;" /></a>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
            <a href="#tab-option-<?php echo $option_row; ?>" id="option-<?php echo $option_row; ?>"><?php echo $product_option['name']; ?>&nbsp;<img src="view/image/delete.png" alt="" id="remove-tab-option<?php echo $option_row; ?>" onclick="$('#option-<?php echo $option_row; ?>').remove(); $('#tab-option-<?php echo $option_row; ?>').remove(); optRemoveGroup(this.form); restockquantity_opt(this.form); quantity_opt(this.form); totalcost_opt(this.form); $('#vtabs a:first').trigger('click'); return false;" /></a>
<?php } else { ?>
            <a href="#tab-option-<?php echo $option_row; ?>" id="option-<?php echo $option_row; ?>"><?php echo $product_option['name']; ?>&nbsp;<img src="view/image/delete.png" alt="" onclick="$('#option-<?php echo $option_row; ?>').remove(); $('#tab-option-<?php echo $option_row; ?>').remove(); $('#vtabs a:first').trigger('click'); return false;" /></a>
<?php } ?>
            ]]></add>
        </operation>
		
        <operation>
            <search position="replace"><![CDATA[
html += '        <td class="right"><?php echo $entry_quantity; ?></td>';
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>			
			html += '        <td class="center"><?php echo $entry_quantity; ?></td>';
<?php } else { ?>				
			html += '        <td class="right"><?php echo $entry_quantity; ?></td>';
<?php } ?>				
            ]]></add>
        </operation>

        <operation>
            <search position="replace"><![CDATA[
html += '        <td class="right"><?php echo $entry_price; ?></td>';
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>			
			html += '        <td class="center"><?php echo $entry_price; ?></td>';
<?php } else { ?>				
			html += '        <td class="right"><?php echo $entry_price; ?></td>';
<?php } ?>				
            ]]></add>
        </operation>
			
        <operation>
            <search position="before"><![CDATA[
html += '        <td class="right"><?php echo $entry_option_points; ?></td>';
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>			
			html += '        <td class="center"><?php echo $entry_option_cost; ?></td>';
<?php } ?>				
            ]]></add>
        </operation>

        <operation>
            <search position="replace"><![CDATA[
html += '        <td colspan="6"></td>';
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
			html += '        <td colspan="7"></td>';
<?php } else { ?>
			html += '        <td colspan="6"></td>';
<?php } ?>
            ]]></add>
        </operation>
		
        <operation>
            <search position="replace"><![CDATA[
html += '    <td class="right"><input type="text" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][quantity]" value="" size="3" /></td>';
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
	html += '    <td class="center"><input type="text" class="addOption" onKeyUp="if(!this.value) this.value=0; addOption(this.form); restockquantity_opt(this.form); quantity_opt(this.form); totalcost_opt(this.form);" onblur="if(!this.value) this.value=0;" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][quantity]" value="" size="3" style="background-color:#c4d9ee; border:thin solid #69F;" /></td>';
<?php } else { ?>
	html += '    <td class="right"><input type="text" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][quantity]" value="" size="3" /></td>';
<?php } ?>		
            ]]></add>
        </operation>

        <operation>
            <search position="replace" offset="4"><![CDATA[
html += '    <td class="right"><select name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][price_prefix]">';
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
	html += '    <td class="center"><select name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][price_prefix]" style="border:thin solid #0C0;">';
	html += '      <option value="+">+</option>';
	html += '      <option value="-">-</option>';
	html += '    </select>';
	html += '    <input type="text" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][price]" value="" size="5" style="border:thin solid #0C0;" /></td>';
<?php } else { ?>
	html += '    <td class="right"><select name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][price_prefix]">';
	html += '      <option value="+">+</option>';
	html += '      <option value="-">-</option>';
	html += '    </select>';
	html += '    <input type="text" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][price]" value="" size="5" /></td>';
<?php } ?>		
            ]]></add>
        </operation>
				
        <operation>
            <search position="before"><![CDATA[
html += '    <td class="right"><select name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][points_prefix]">';
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>			
	html += '    <td class="center"><select name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][cost_prefix]" style="background-color:#ffd7d7; border:thin solid #F99;">';
	html += '      <option value="+">+</option>';
	html += '      <option value="-">-</option>';
	html += '    </select>';
	html += '    <input type="hidden" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][option_restock_quantity]" value="" /><input type="hidden" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][costing_method]" value="" /><input type="hidden" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][cost_amount]" value="" /><input type="text" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][cost]" value="" size="7" style="background-color:#ffd7d7; border:thin solid #F99;" /></td>';
<?php } else { ?>
	html += '    <input type="hidden" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][cost_prefix]" value="" />';
	html += '    <input type="hidden" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][costing_method]" value="" />';
	html += '    <input type="hidden" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][cost_amount]" value="" />';		
	html += '    <input type="hidden" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][cost]" value="" />';
	html += '    <input type="hidden" name="product_option[' + option_row + '][product_option_value][' + option_value_row + '][option_restock_quantity]" value="" />';
<?php } ?>		
            ]]></add>
        </operation>	
		
        <operation>
            <search position="replace"><![CDATA[
html += '    <td class="left"><a onclick="$(\'#option-value-row' + option_value_row + '\').remove();" class="button"><?php echo $button_remove; ?></a></td>';
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
	html += '    <td class="left"><a onclick="$(\'#option-value-row' + option_value_row + '\').remove(); optRemove(this.form); restockquantity_opt(this.form); quantity_opt(this.form); totalcost_opt(this.form);" class="button"><?php echo $button_remove; ?></a></td>';
<?php } else { ?>
	html += '    <td class="left"><a onclick="$(\'#option-value-row' + option_value_row + '\').remove();" class="button"><?php echo $button_remove; ?></a></td>';
<?php } ?>		
            ]]></add>
        </operation>	
		
        <operation>
            <search position="replace"><![CDATA[
$('#option-add').before('<a href="#tab-option-' + option_row + '" id="option-' + option_row + '">' + ui.item.label + '&nbsp;<img src="view/image/delete.png" alt="" onclick="$(\'#option-' + option_row + '\').remove(); $(\'#tab-option-' + option_row + '\').remove(); $(\'#vtab-option a:first\').trigger(\'click\'); return false;" /></a>');
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
		$('#option-add').before('<a href="#tab-option-' + option_row + '" id="option-' + option_row + '">' + ui.item.label + '&nbsp;<img src="view/image/delete.png" alt="" onclick="$(\'#option-' + option_row + '\').remove(); $(\'#tab-option-' + option_row + '\').remove(); optRemoveGroup(this.form); restockquantity_opt(this.form); quantity_opt(this.form); totalcost_opt(this.form); $(\'#vtab-option a:first\').trigger(\'click\'); return false;" /></a>');
<?php } else { ?>
		$('#option-add').before('<a href="#tab-option-' + option_row + '" id="option-' + option_row + '">' + ui.item.label + '&nbsp;<img src="view/image/delete.png" alt="" onclick="$(\'#option-' + option_row + '\').remove(); $(\'#tab-option-' + option_row + '\').remove(); $(\'#vtab-option a:first\').trigger(\'click\'); return false;" /></a>');
<?php } ?>		
            ]]></add>
        </operation>				
	</file>


	<file name="admin/view/template/catalog/product_list.tpl">	
        <operation>
            <search position="after"><![CDATA[
      		<div class="box">
            ]]></search>
            <add><![CDATA[	  	
			<?php include(DIR_APPLICATION . 'view/image/adv_reports/separator.png'); ?>
            ]]></add>
        </operation>
			
        <operation error="skip">
            <search position="after" offset="1"><![CDATA[
<a href="<?php echo $sort_price; ?>"><?php echo $column_price; ?></a>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) {?>
              <td class="left"><?php if ($sort == 'p.cost') { ?>
                <a href="<?php echo $sort_cost; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_cost; ?></a>
				<?php } else { ?>
                <a href="<?php echo $sort_cost; ?>"><?php echo $column_cost; ?></a>
				<?php } ?></td>
              <td class="left"><?php if ($sort == 'profit') { ?>
                <a href="<?php echo $sort_profit; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_profit; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_profit; ?>"><?php echo $column_profit; ?></a>
                <?php } ?></td>					
<?php } ?> 			
            ]]></add>
        </operation>

        <operation error="skip">
            <search position="before"><![CDATA[
<td class="left"><?php if ($sort == 'p.status') { ?>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) {?>			
              <td class="right"><?php if ($sort == 'sold') { ?>
                <a href="<?php echo $sort_sold; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_sold; ?></a>
                <?php } else { ?>
                <a href="<?php echo $sort_sold; ?>"><?php echo $column_sold; ?></a>
                <?php } ?></td>  
<?php } ?> 					
            ]]></add>
        </operation>
		
        <operation error="skip">
            <search position="after"><![CDATA[
<td align="left"><input type="text" name="filter_price" value="<?php echo $filter_price; ?>" size="8"/></td>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) {?>			
              <td align="left"><input type="text" name="filter_cost" value="<?php echo $filter_cost; ?>" size="8"/></td>
			  <td align="left"><input type="text" name="filter_profit" value="<?php echo $filter_profit; ?>" size="8"/></td>
<?php } ?>  			  
            ]]></add>
        </operation>

        <operation error="skip">
            <search position="after"><![CDATA[
<td align="right"><input type="text" name="filter_quantity" value="<?php echo $filter_quantity; ?>" style="text-align: right;" /></td>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) {?>				
              <td></td>
<?php } ?>  			  
            ]]></add>
        </operation>
		
        <operation error="skip">
            <search position="after" offset="4"><![CDATA[
<span style="text-decoration: line-through;"><?php echo $product['price']; ?></span><br/>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) {?>
              <td class="left"><?php echo $product['cost']; ?></td>
			  <td class="left"><?php if ($product['special']) { ?>
                    <span style="text-decoration: line-through;"><?php echo $product['profit']; ?></span><br/>
                    <span style="color: #b00;"><?php echo $product['profit_special']; ?></span>
                    <?php } else { ?>
                    <?php echo $product['profit']; ?>
              <?php } ?></td>				  
<?php } ?>  
            ]]></add>
        </operation>

        <operation error="skip">
            <search position="before"><![CDATA[
<td class="left"><?php echo $product['status']; ?></td>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) {?>			
              <td class="right"><?php echo $product['sold']; ?></td>
<?php } ?>  			  
            ]]></add>
        </operation>

        <operation error="skip">
            <search position="replace"><![CDATA[
<td class="center" colspan="8"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
              <td class="center" colspan="11"><?php echo $text_no_results; ?></td>
            ]]></add>
        </operation>
				
        <operation error="skip">
            <search position="before"><![CDATA[
var filter_quantity = $('input[name=\'filter_quantity\']').attr('value');
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) {?>				
	var filter_cost = $('input[name=\'filter_cost\']').attr('value');
	
	if (filter_cost) {
		url += '&filter_cost=' + encodeURIComponent(filter_cost);
	}
	
	var filter_profit = $('input[name=\'filter_profit\']').attr('value');
	
	if (filter_profit) {
		url += '&filter_profit=' + encodeURIComponent(filter_profit);
	}	
<?php } ?>
            ]]></add>
        </operation>
	</file>


	<file name="admin/view/template/sale/order_info.tpl">
        <operation>
            <search position="after"><![CDATA[
      		<div class="box">
            ]]></search>
            <add><![CDATA[	  	
			<?php include(DIR_APPLICATION . 'view/image/adv_reports/separator.png'); ?>
            ]]></add>
        </operation>
			
        <operation>
            <search position="before"><![CDATA[
<?php echo $footer; ?>
            ]]></search>
            <add trim="false"><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>	
<style type="text/css">
.ajax-edit {
   display: none;
   float: right;
   margin-right: 5px;
}
.ajax-edit input {
   text-align: right;
   cursor: text;
   background-color: #ffd7d7;
   width: 100px; 
   border: thin solid #999  
}
.ajax-edit +span {
   cursor: pointer;
}

.ajax-edit2 {
   display: none;
   float: left;
   margin-right: 5px;
}
.ajax-edit2 input {
   text-align: left;
   cursor: text;
   background-color: #ffd7d7;
   width: 100px; 
   border: thin solid #999  
}
.ajax-edit2 +span {
   cursor: pointer;
}
</style>
<?php if ($this->user->hasPermission('modify', 'sale/order')) { ?>	
<script type="text/javascript">
$(document).ready(function() {
	$('.ajax-edit').each(function(index, wrapper) {
		$(this).siblings().click(function() {
			$(wrapper).show();
			$(wrapper).siblings().hide();
		})
	});
})

function save_cost(id) {
	var input_cost = $('#cost-'+id+' input');
	var cost = $(input_cost).val();
	$(cost).css('cursor','progress');
	$.ajax({
		<?php if (defined('_JEXEC')) { ?>
		url: 'index.php?option=com_mijoshop&format=raw&tmpl=component&route=sale/order/saveCost&order_product_id='+id+'&cost='+cost+'&token=<?php echo $token; ?>',
		<?php } else { ?>
		url: 'index.php?route=sale/order/saveCost&order_product_id='+id+'&cost='+cost+'&token=<?php echo $token; ?>',
		<?php } ?>
		dataType: 'html',
		data: {},
		success: function(cost) { 
			$('#cost-'+id).next().html(cost);
			close_cost(id);
		}
	});
	$(input_cost).css('cursor','default');
}

function close_cost(id) {
	$('.ajax-edit input').blur();
	$('#cost-'+id).siblings().show();
	$('#cost-'+id).hide();
}


$(document).ready(function() {
	$('.ajax-edit2').each(function(index, wrapper) {
		$(this).siblings().click(function() {
			$(wrapper).show();
			$(wrapper).siblings().hide();
		})
	});
})

function save_payment_cost(id) {
	var input_payment_cost = $('#payment_cost-'+id+' input');
	var payment_cost = $(input_payment_cost).val();
	$(payment_cost).css('cursor','progress');
	$.ajax({
		<?php if (defined('_JEXEC')) { ?>
		url: 'index.php?option=com_mijoshop&format=raw&tmpl=component&route=sale/order/savePaymentCost&order_id='+id+'&payment_cost='+payment_cost+'&token=<?php echo $token; ?>',
		<?php } else { ?>
		url: 'index.php?route=sale/order/savePaymentCost&order_id='+id+'&payment_cost='+payment_cost+'&token=<?php echo $token; ?>',
		<?php } ?>
		dataType: 'html',
		data: {},
		success: function(payment_cost) { 
			$('#payment_cost-'+id).next().html(payment_cost);
			close_payment_cost(id);
		}
	});
	$(input_payment_cost).css('cursor','default');
}

function close_payment_cost(id) {
	$('.ajax-edit2 input').blur();
	$('#payment_cost-'+id).siblings().show();
	$('#payment_cost-'+id).hide();
}

function save_shipping_cost(id) {
	var input_shipping_cost = $('#shipping_cost-'+id+' input');
	var shipping_cost = $(input_shipping_cost).val();
	$(shipping_cost).css('cursor','progress');
	$.ajax({
		<?php if (defined('_JEXEC')) { ?>
		url: 'index.php?option=com_mijoshop&format=raw&tmpl=component&route=sale/order/saveShippingCost&order_id='+id+'&shipping_cost='+shipping_cost+'&token=<?php echo $token; ?>',
		<?php } else { ?>
		url: 'index.php?route=sale/order/saveShippingCost&order_id='+id+'&shipping_cost='+shipping_cost+'&token=<?php echo $token; ?>',
		<?php } ?>
		dataType: 'html',
		data: {},
		success: function(shipping_cost) { 
			$('#shipping_cost-'+id).next().html(shipping_cost);
			close_shipping_cost(id);
		}
	});
	$(input_shipping_cost).css('cursor','default');
}

function close_shipping_cost(id) {
	$('.ajax-edit2 input').blur();
	$('#shipping_cost-'+id).siblings().show();
	$('#shipping_cost-'+id).hide();
}

function save_extra_cost(id) {
	var input_extra_cost = $('#extra_cost-'+id+' input');
	var extra_cost = $(input_extra_cost).val();
	$(extra_cost).css('cursor','progress');
	$.ajax({
		<?php if (defined('_JEXEC')) { ?>
		url: 'index.php?option=com_mijoshop&format=raw&tmpl=component&route=sale/order/saveExtraCost&order_id='+id+'&extra_cost='+extra_cost+'&token=<?php echo $token; ?>',
		<?php } else { ?>
		url: 'index.php?route=sale/order/saveExtraCost&order_id='+id+'&extra_cost='+extra_cost+'&token=<?php echo $token; ?>',
		<?php } ?>
		dataType: 'html',
		data: {},
		success: function(extra_cost) { 
			$('#extra_cost-'+id).next().html(extra_cost);
			close_extra_cost(id);
		}
	});
	$(input_extra_cost).css('cursor','default');
}

function close_extra_cost(id) {
	$('.ajax-edit2 input').blur();
	$('#extra_cost-'+id).siblings().show();
	$('#extra_cost-'+id).hide();
}
</script> 
<?php } ?>
<?php } ?>
            ]]></add>
        </operation>

        <operation>
            <search position="after" offset="1"><![CDATA[
<td><?php echo $payment_method; ?></td>
            ]]></search>
            <add trim="false"><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>					
          <tr>
            <td><?php echo $edit_payment_cost; ?></td>
            <td>
			<?php if ($this->user->hasPermission('modify', 'sale/order')) {?>
				<span class="ajax-edit2" id="payment_cost-<?php echo $order_id; ?>" value="<?php echo $order_id; ?>">
				<input type="text" value="<?php echo $payment_cost; ?>"><br>
    			<a onclick="save_payment_cost(<?php echo $order_id; ?>)"><?php echo $text_save ?></a>&nbsp|&nbsp<a onclick="close_payment_cost(<?php echo $order_id; ?>)"; return false;><?php echo $text_close ?></a>
				</span>   
			<?php } ?>        
            <span style="color: #F00"><?php echo $payment_cost; ?></span>
            </td>
          </tr>  
<?php } ?>
            ]]></add>
        </operation>
	
        <operation>
            <search position="after" offset="2"><![CDATA[
<td><?php echo $shipping_method; ?></td>
            ]]></search>
            <add trim="false"><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>					
          <tr>
            <td><?php echo $edit_shipping_cost; ?></td>
            <td>
			<?php if ($this->user->hasPermission('modify', 'sale/order')) {?>
				<span class="ajax-edit2" id="shipping_cost-<?php echo $order_id; ?>" value="<?php echo $order_id; ?>">
				<input type="text" value="<?php echo $shipping_cost; ?>"><br>
    			<a onclick="save_shipping_cost(<?php echo $order_id; ?>)"><?php echo $text_save ?></a>&nbsp|&nbsp<a onclick="close_shipping_cost(<?php echo $order_id; ?>)"; return false;><?php echo $text_close ?></a>
				</span>     
			<?php } ?>       
            <span style="color: #F00"><?php echo $shipping_cost; ?></span>
            </td>
          </tr>    
<?php } ?>
            ]]></add>
        </operation>
		
        <operation>
            <search position="after"><![CDATA[
<td class="right"><?php echo $column_price; ?></td>
            ]]></search>
            <add trim="false"><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>					
                <td class="right"><?php echo $edit_cost; ?></td>
<?php } ?>
            ]]></add>
        </operation>
	
        <operation>
            <search position="after"><![CDATA[
<td class="right"><?php echo $product['price']; ?></td>
            ]]></search>
            <add trim="false"><![CDATA[	
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>					
				<td class="right">
				<?php if ($this->user->hasPermission('modify', 'sale/order')) {?>
					<span class="ajax-edit" id="cost-<?php echo $product['order_product_id']; ?>" value="<?php echo $product['order_product_id']; ?>">
					<input type="text" value="<?php echo $product['cost']; ?>"><br>
    				<a onclick="save_cost(<?php echo $product['order_product_id']; ?>)"><?php echo $text_save ?></a>&nbsp|&nbsp<a onclick="close_cost(<?php echo $product['order_product_id']; ?>)"; return false;><?php echo $text_close ?></a>
					</span>
				<?php } ?>
				<span style="color: #F00"><?php echo $product['cost']; ?></span>
				</td>
<?php } ?>					
            ]]></add>
        </operation>
	
        <operation>
            <search position="replace"><![CDATA[
<td colspan="4" class="right"><?php echo $totals['title']; ?>:</td>
            ]]></search>
            <add trim="false"><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>				
              <td colspan="5" class="right"><?php echo $totals['title']; ?>:</td>
<?php } else { ?>
              <td colspan="4" class="right"><?php echo $totals['title']; ?>:</td>
<?php } ?>				  
            ]]></add>
        </operation>
		
        <operation>
            <search position="before"><![CDATA[
<?php if ($downloads) { ?>
            ]]></search>
            <add trim="false"><![CDATA[	
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
		<table class="form">
          <tbody>
            <tr>
              <td class="left"><?php echo $edit_extra_cost; ?></td>
              <td class="left">
			<?php if ($this->user->hasPermission('modify', 'sale/order')) {?>
				<span class="ajax-edit2" id="extra_cost-<?php echo $order_id; ?>" value="<?php echo $order_id; ?>">
				<input type="text" value="<?php echo $extra_cost; ?>"><br>
    			<a onclick="save_extra_cost(<?php echo $order_id; ?>)"><?php echo $text_save ?></a>&nbsp|&nbsp<a onclick="close_extra_cost(<?php echo $order_id; ?>)"; return false;><?php echo $text_close ?></a>
				</span>     
			<?php } ?>       
            <span style="color: #F00"><?php echo $extra_cost; ?></span>			  
			  </td>
            </tr>
          </tbody>
		</table>
<?php } ?>			  			  
            ]]></add>
        </operation>		
	</file>
	
	
	<file name="admin/view/template/sale/order_form.tpl">
        <operation>
            <search position="after"><![CDATA[
      		<div class="box">
            ]]></search>
            <add><![CDATA[	  	
			<?php include(DIR_APPLICATION . 'view/image/adv_reports/separator.png'); ?>
            ]]></add>
        </operation>
			
		<operation>
			<search position="after" offset="2"><![CDATA[
<span class="error"><?php echo $error_payment_zone; ?></span>
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>				
		       <tr>
		         <td><?php echo $entry_payment_cost; ?></td>
		         <td><input style="background-color: #ffd7d7; border: thin solid #999;" type="text" name="payment_cost" value="<?php echo $payment_cost; ?>" />
		           <?php if ($error_payment_cost) { ?>
		           <span class="error"><?php echo $error_payment_cost; ?></span>
		           <?php } ?></td>				   
		       </tr>
<?php } else { ?>
<input type="hidden" name="payment_cost" value="<?php echo $payment_cost; ?>" />
<?php } ?>			    
			]]></add>
		</operation>
				
		<operation>
			<search position="after" offset="2"><![CDATA[
<span class="error"><?php echo $error_shipping_zone; ?></span>
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>				
		       <tr>
		         <td><?php echo $entry_shipping_cost; ?></td>
		         <td><input style="background-color: #ffd7d7; border: thin solid #999;" type="text" name="shipping_cost" value="<?php echo $shipping_cost; ?>" />
		           <?php if ($error_shipping_cost) { ?>
		           <span class="error"><?php echo $error_shipping_cost; ?></span>
		           <?php } ?></td>				   
		       </tr>
<?php } else { ?>
<input type="hidden" name="shipping_cost" value="<?php echo $shipping_cost; ?>" />
<?php } ?>			    
			]]></add>
		</operation>

        <operation>
            <search position="after" index="1"><![CDATA[
<td class="right"><?php echo $column_price; ?></td>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
                <td class="right"><?php echo $column_cost; ?></td>
<?php } ?>
            ]]></add>
        </operation>
	
        <operation>
            <search position="after"><![CDATA[
<input type="hidden" name="order_product[<?php echo $product_row; ?>][price]" value="<?php echo $order_product['price']; ?>" /></td>
            ]]></search>
            <add><![CDATA[	
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>					
				<td class="right"><input style="background-color:#ffd7d7; border:thin solid #999; text-align:right; width:80px;" type="text" name="order_product[<?php echo $product_row; ?>][cost]" value="<?php echo $order_product['cost']; ?>" /></td>
<?php } else { ?>
<input type="hidden" name="order_product[<?php echo $product_row; ?>][cost]" value="<?php echo $order_product['cost']; ?>" />
<?php } ?>	
            ]]></add>
        </operation>

        <operation>
            <search position="replace" index="1"><![CDATA[
<td class="center" colspan="6"><?php echo $text_no_results; ?></td>
            ]]></search>
            <add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>					
                <td class="center" colspan="7"><?php echo $text_no_results; ?></td>
<?php } else { ?>
                <td class="center" colspan="6"><?php echo $text_no_results; ?></td>
<?php } ?>	
            ]]></add>
        </operation>

		<operation>
			<search position="after"><![CDATA[
$('select[name=\'payment_country_id\']').attr('value', json['country_id']);
			]]></search>
			<add><![CDATA[
				$('input[name=\'payment_cost\']').attr('value', json['cost']); 
			]]></add>
		</operation>
				
		<operation>
			<search position="after"><![CDATA[
$('select[name=\'shipping_country_id\']').attr('value', json['country_id']);
			]]></search>
			<add><![CDATA[
				$('input[name=\'shipping_cost\']').attr('value', json['cost']); 
			]]></add>
		</operation>
			
		<operation>
			<search position="before"><![CDATA[
if (json['error']['payment']['postcode']) {
			]]></search>
			<add><![CDATA[
					if (json['error']['payment']['cost']) {
						$('input[name=\'payment_cost\']').after('<span class="error">' + json['error']['payment']['cost'] + '</span>');
					}
			]]></add>
		</operation>
				
		<operation>
			<search position="before"><![CDATA[
if (json['error']['shipping']['postcode']) {
			]]></search>
			<add><![CDATA[
					if (json['error']['shipping']['cost']) {
						$('input[name=\'shipping_cost\']').after('<span class="error">' + json['error']['shipping']['cost'] + '</span>');
					}
			]]></add>
		</operation>
		
        <operation>
            <search position="replace"><![CDATA[
html += '  <td class="right">' + product['total'] + '<input type="hidden" name="order_product[' + product_row + '][total]" value="' + product['total'] + '" /><input type="hidden" name="order_product[' + product_row + '][tax]" value="' + product['tax'] + '" /><input type="hidden" name="order_product[' + product_row + '][reward]" value="' + product['reward'] + '" /></td>';
            ]]></search>
            <add><![CDATA[
					html += '  <td class="right">' + product['total'] + '<input type="hidden" name="order_product[' + product_row + '][total]" value="' + product['total'] + '" /><input type="hidden" name="order_product[' + product_row + '][tax]" value="' + product['tax'] + '" /><input type="hidden" name="order_product[' + product_row + '][reward]" value="' + product['reward'] + '" /><input type="hidden" name="order_product[' + product_row + '][cost]" value="' + product['cost'] + '" /></td>';
            ]]></add>
        </operation>
	
        <operation>
            <search position="after"><![CDATA[
option: item.option,
            ]]></search>
            <add><![CDATA[
						cost: item.cost,
            ]]></add>
        </operation>
	
		<operation>
			<search position="after"><![CDATA[
html += '  <td class="right">' + product['price'] + '<input type="hidden" name="order_product[' + product_row + '][price]" value="' + product['price'] + '" /></td>';
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
					html += '  <td class="right"><input style="background-color:#ffd7d7; border:thin solid #999; text-align:right; width:80px;" type="text" name="order_product[' + product_row + '][cost]" value="' + product['cost'] + '" /></td>';
<?php } ?>	
			]]></add>
		</operation>
	
		<operation>
			<search position="replace" index="1"><![CDATA[
html += '  <td colspan="6" class="center"><?php echo $text_no_results; ?></td>';
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
				html += '  <td colspan="7" class="center"><?php echo $text_no_results; ?></td>';
<?php } else { ?>
				html += '  <td colspan="6" class="center"><?php echo $text_no_results; ?></td>';
<?php } ?>		
			]]></add>
		</operation>
		
        <operation>
            <search position="before" offset="3"><![CDATA[
<td class="left" colspan="2"><?php echo $text_order; ?></td>
            ]]></search>
            <add trim="false"><![CDATA[	
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>
          <table class="form">				
		       <tr>
		         <td><?php echo $entry_extra_cost; ?></td>
		         <td><input style="background-color: #ffd7d7; border: thin solid #999;" type="text" name="extra_cost" value="<?php echo $extra_cost; ?>" />
		           <?php if ($error_extra_cost) { ?>
		           <span class="error"><?php echo $error_extra_cost; ?></span>
		           <?php } ?></td>				   
		       </tr>
          </table>			   
<?php } else { ?>
<input type="hidden" name="extra_cost" value="<?php echo $extra_cost; ?>" />
<?php } ?>		  			  
            ]]></add>
        </operation>		
	</file>
		

	<file name="admin/view/template/sale/return_info.tpl">
        <operation>
            <search position="after"><![CDATA[
      		<div class="box">
            ]]></search>
            <add><![CDATA[	  	
			<?php include(DIR_APPLICATION . 'view/image/adv_reports/separator.png'); ?>
            ]]></add>
        </operation>
			
        <operation>
            <search position="before"><![CDATA[
<?php echo $footer; ?>
            ]]></search>
            <add trim="false"><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>	
<style type="text/css">
.ajax-edit2 {
   display: none;
   float: left;
   margin-right: 5px;
}
.ajax-edit2 input {
   text-align: left;
   cursor: text;
   background-color: #ffd7d7;
   width: 100px; 
   border: thin solid #999  
}
.ajax-edit2 +span {
   cursor: pointer;
}
</style>
<?php if ($this->user->hasPermission('modify', 'sale/return')) { ?>	
<script type="text/javascript">
$(document).ready(function() {
	$('.ajax-edit2').each(function(index, wrapper) {
		$(this).siblings().click(function() {
			$(wrapper).show();
			$(wrapper).siblings().hide();
		})
	});
})

function save_cost(id) {
	var input_cost = $('#cost-'+id+' input');
	var cost = $(input_cost).val();
	$(cost).css('cursor','progress');
	$.ajax({
		<?php if (defined('_JEXEC')) { ?>
		url: 'index.php?option=com_mijoshop&format=raw&tmpl=component&route=sale/return/saveReturnCost&return_id='+id+'&cost='+cost+'&token=<?php echo $token; ?>',
		<?php } else { ?>
		url: 'index.php?route=sale/return/saveReturnCost&return_id='+id+'&cost='+cost+'&token=<?php echo $token; ?>',
		<?php } ?>
		dataType: 'html',
		data: {},
		success: function(cost) { 
			$('#cost-'+id).next().html(cost);
			close_cost(id);
		}
	});
	$(input_cost).css('cursor','default');
}

function close_cost(id) {
	$('.ajax-edit2 input').blur();
	$('#cost-'+id).siblings().show();
	$('#cost-'+id).hide();
}
</script> 
<?php } ?>
<?php } ?>
            ]]></add>
        </operation>
	
        <operation>
            <search position="before" offset="1"><![CDATA[
<td><?php echo $text_return_action; ?></td>
            ]]></search>
            <add trim="false"><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>					
          <tr>
            <td><?php echo $edit_cost; ?></td>
            <td>
			<?php if ($this->user->hasPermission('modify', 'sale/return')) {?>
				<span class="ajax-edit2" id="cost-<?php echo $return_id; ?>" value="<?php echo $return_id; ?>">
				<input type="text" value="<?php echo $cost; ?>"><br>
    			<a onclick="save_cost(<?php echo $return_id; ?>)"><?php echo $text_save ?></a>&nbsp|&nbsp<a onclick="close_cost(<?php echo $return_id; ?>)"; return false;><?php echo $text_close ?></a>
				</span>     
			<?php } ?>       
            <span style="color: #F00"><?php echo $cost; ?></span>
            </td>
          </tr>    
<?php } ?>
            ]]></add>
        </operation>		
	</file>
	

	<file name="admin/view/template/sale/return_form.tpl">
        <operation>
            <search position="after"><![CDATA[
      		<div class="box">
            ]]></search>
            <add><![CDATA[	  	
			<?php include(DIR_APPLICATION . 'view/image/adv_reports/separator.png'); ?>
            ]]></add>
        </operation>
			
		<operation>
			<search position="before" offset="1"><![CDATA[
<td><?php echo $entry_comment; ?></td>
			]]></search>
			<add><![CDATA[
<?php if ($this->user->hasPermission('access', 'module/adv_profit_module') && $laccess) { ?>				
		       <tr>
		         <td><?php echo $entry_cost; ?></td>
		         <td><input style="background-color: #ffd7d7; border: thin solid #999;" type="text" name="cost" value="<?php echo $cost; ?>" />
		           <?php if ($error_cost) { ?>
		           <span class="error"><?php echo $error_cost; ?></span>
		           <?php } ?></td>				   
		       </tr>
<?php } else { ?>
<input type="hidden" name="cost" value="<?php echo $cost; ?>" />
<?php } ?>			    
			]]></add>
		</operation>		
	</file>
	
				
	<file name="catalog/controller/checkout/confirm.php">
        <operation>
            <search position="after"><![CDATA[
$data = array();
            ]]></search>
            <add><![CDATA[
			// payment cost
			$data['payment_cost'] = 0;
			if ($this->config->get('adv_payment_cost_status') && $this->config->get('adv_payment_cost_type') && isset($this->session->data['payment_method']['code']) && $this->cart->hasProducts()) {
				$getPaymentTypes = unserialize($this->config->get('adv_payment_cost_type'));
				if ($getPaymentTypes) {
				  foreach ($getPaymentTypes as $payment_type) {
					if ($this->session->data['payment_method']['code'] == $payment_type['pc_paymentkey']) {	
						
						if (($total >= $payment_type['pc_order_total']) && ($total > 0)) {
							$address = array();
							if (isset($this->session->data['payment_address_id']) && $this->session->data['payment_address_id']) { 
								$this->load->model('account/address');
								$address = $this->model_account_address->getAddress($this->session->data['payment_address_id']);
								
								$country_id	= (isset($address['country_id'])) ? $address['country_id'] : 0;
								$zone_id 	= (isset($address['zone_id'])) ? $address['zone_id'] : 0;
								
							} else { 
								$country_id	= (isset($this->session->data['guest']['payment']['country_id'])) ? $this->session->data['guest']['payment']['country_id'] : 0;
								$zone_id 	= (isset($this->session->data['guest']['payment']['zone_id'])) ? $this->session->data['guest']['payment']['zone_id'] : 0;
							}

							$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE geo_zone_id = '" . (int)$payment_type['pc_geozone'] . "' AND country_id = '" . (int)$country_id . "' AND (zone_id = '" . (int)$zone_id . "' OR zone_id = '0')");
						
							if (!$payment_type['pc_geozone']) {
								$pc_status = true;
							} elseif ($query->num_rows) {
								$pc_status = true;
							} else {
								$pc_status = false;
							}		
			
							if ($pc_status) {
								$data['payment_cost'] = ($payment_type['pc_percentage']*$total)/100 + $payment_type['pc_fixed'];
							}
							
						}
						
					}
				  }
				}
			}

			// shipping cost
			$data['shipping_cost'] = 0;
			if ($this->cart->hasShipping()) {
				if ($this->customer->isLogged()) {
					$this->load->model('account/address');
					$shipping_address = $this->model_account_address->getAddress($this->session->data['shipping_address_id']);	
				} elseif (isset($this->session->data['guest'])) {
					$shipping_address = $this->session->data['guest']['shipping'];
				}	
			
				$query = $this->db->query("SELECT geo_zone_id FROM " . DB_PREFIX . "zone_to_geo_zone WHERE country_id = '" . (int)$shipping_address['country_id'] . "' AND (zone_id = '" . (int)$shipping_address['zone_id'] . "' OR zone_id = '0')");

				if ($query->rows) {	
					foreach ($query->rows as $result) {
						if (($this->config->get('adv_shipping_cost_weight_status') == '1') && ($this->config->get('adv_shipping_cost_weight_' . $result['geo_zone_id'] . '_status') == '1') && ($this->config->get('adv_shipping_cost_weight_' . $result['geo_zone_id'] . '_rate') != '') && $this->cart->hasProducts()) {
				
							if ($total >= $this->config->get('adv_shipping_cost_weight_' . $result['geo_zone_id'] . '_total')) {
								$weight = $this->cart->getWeight();
				
								$rates = explode(',', $this->config->get('adv_shipping_cost_weight_' . $result['geo_zone_id'] . '_rate'));
				
								foreach ($rates as $rate) {
								$adv_shipping_cost_data = explode(':', $rate);
				
									if ($adv_shipping_cost_data[0] >= $weight) {
										if (isset($adv_shipping_cost_data[1])) {
											$data['shipping_cost'] = $adv_shipping_cost_data[1];
										}
										break;
									}
								}
							
							}
						
						}				
					}
				}
			
			}

			// extra cost
			$data['extra_cost'] = 0;
			if (($this->config->get('adv_extra_cost_status') == '1') && $this->cart->hasProducts()) {
				$rates = explode(',', $this->config->get('adv_extra_cost'));
				
				foreach ($rates as $rate) {				
				$adv_extra_cost_data = explode(':', $rate);
				
					if ($adv_extra_cost_data[0] >= $total) {
						if (isset($adv_extra_cost_data[1])) {
							$data['extra_cost'] = $adv_extra_cost_data[1];
						}
						break;
					}
				}
			}	
            ]]></add>
        </operation>

        <operation>
            <search position="after"><![CDATA[
=> $product['price'],
            ]]></search>
            <add><![CDATA[
					'cost'		 		=> $product['cost'],
					'base_price'		=> $product['base_price'],
            ]]></add>
        </operation>
	</file>


	<file name="catalog/controller/checkout/manual.php">
        <operation>
            <search position="after"><![CDATA[
=> $product['price'],
            ]]></search>
            <add><![CDATA[
					'cost'       		=> $product['cost'],
					'base_price'		=> $product['base_price'],
            ]]></add>
        </operation>
	</file>	
	
		
	<file name="catalog/model/checkout/order.php">
        <operation>
            <search position="replace"><![CDATA[
, total = '" . (float)$data['total'] . "'
            ]]></search>
            <add trim="true"><![CDATA[
, total = '" . (float)$data['total'] . "', payment_cost = '" . (float)$data['payment_cost'] . "', shipping_cost = '" . (float)$data['shipping_cost'] . "', extra_cost = '" . (float)$data['extra_cost'] . "'
            ]]></add>
        </operation>
		
        <operation>
            <search position="replace"><![CDATA[
, price = '" . (float)$product['price'] . "'
            ]]></search>
            <add trim="true"><![CDATA[
, price = '" . (float)$product['price'] . "', base_price = '" . (float)$product['base_price'] . "', cost = '" . (float)$product['cost'] . "'
            ]]></add>
        </operation>

        <operation>
            <search position="after"><![CDATA[
=> $order_query->row['total'],
            ]]></search>
            <add><![CDATA[
				'payment_cost'            => $order_query->row['payment_cost'],	
				'shipping_cost'           => $order_query->row['shipping_cost'],
				'extra_cost'           	  => $order_query->row['extra_cost'],
            ]]></add>
        </operation>
		
        <operation>
            <search position="after"><![CDATA[
$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_id = '" . (int)$order_product['product_id'] . "' AND subtract = '1'");
            ]]></search>
            <add><![CDATA[
				$product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$order_product['product_id'] . "' AND subtract = '1'");
				foreach ($product_query->rows as $product) {
					$this->db->query("INSERT INTO " . DB_PREFIX . "product_stock_history SET product_id = '" . (int)$product['product_id'] . "', restock_quantity = '-" . (int)$order_product['quantity'] . "', stock_quantity = '" . (int)$product['quantity'] . "', costing_method = '" . (int)$product['costing_method'] . "', restock_cost = (" . (float)$product['cost_amount'] . " + ((" . (float)$product['cost_percentage'] . " / 100) * " . (float)$product['price'] . ") + " . (float)$product['cost_additional'] . "), cost = '" . (float)$product['cost'] . "', price = '" . (float)$product['price'] . "', comment = 'Order ID: " . (int)$order_id . "', date_added = NOW()");
				}
            ]]></add>
        </operation>
		
        <operation>
            <search position="after"><![CDATA[
$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
            ]]></search>
            <add><![CDATA[
					$product_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
					foreach ($product_option_query->rows as $product_option) {
						$this->db->query("INSERT INTO " . DB_PREFIX . "product_option_stock_history SET product_option_id = '" . (int)$product_option['product_option_id'] . "', product_id = '" . (int)$product_option['product_id'] . "', option_id = '" . (int)$product_option['option_id'] . "', option_value_id = '" . (int)$product_option['option_value_id'] . "', restock_quantity = '-" . (int)$order_product['quantity'] . "', stock_quantity = '" . (int)$product_option['quantity'] . "', costing_method = '" . (int)$product_option['costing_method'] . "', restock_cost = '" . (float)$product_option['cost_amount'] . "', cost = '" . (float)$product_option['cost'] . "', price = '" . (float)$product_option['price'] . "', comment = 'Order ID: " . (int)$order_id . "', date_added = NOW()");
					}	
            ]]></add>
        </operation>
	</file>	


	<file name="catalog/controller/payment/pp_standard.php" error="skip">
        <operation error="skip">
            <search position="after"><![CDATA[
=> $product['model'],
            ]]></search>
            <add><![CDATA[
					'cost'		 		=> $product['cost'],
					'base_price'		=> $product['base_price'],
            ]]></add>
        </operation>
	
        <operation error="skip">
            <search position="after"><![CDATA[
=> $total,
            ]]></search>
            <add><![CDATA[
					'cost'		 		=> $product['cost'],
					'base_price'		=> $product['base_price'],
            ]]></add>
        </operation>
	</file>


	<file name="system/library/cart.php">
        <operation>
            <search position="after"><![CDATA[
$option_price = 0;
            ]]></search>
            <add><![CDATA[
      				$option_cost = 0;
            ]]></add>
        </operation>

		<operation>
            <search position="replace"><![CDATA[
, pov.price_prefix
            ]]></search>
            <add trim="true"><![CDATA[
, pov.price_prefix, pov.cost, pov.cost_prefix
            ]]></add>
        </operation>

		<operation>
            <search position="before"><![CDATA[
if ($option_value_query->row['points_prefix'] == '+') {
            ]]></search>
            <add><![CDATA[
									if ($option_value_query->row['cost_prefix'] == '+') {
										$option_cost += $option_value_query->row['cost'];
									} elseif ($option_value_query->row['cost_prefix'] == '-') {
										$option_cost -= $option_value_query->row['cost'];
									}
            ]]></add>
        </operation>

		<operation>
            <search position="after"><![CDATA[
=> $option_value_query->row['price_prefix'],
            ]]></search>
            <add><![CDATA[
										'cost'                    => $option_value_query->row['cost'],
										'cost_prefix'             => $option_value_query->row['cost_prefix'],
            ]]></add>
        </operation>

		<operation>
            <search position="after"><![CDATA[
'price_prefix'            => '',
            ]]></search>
            <add><![CDATA[
									'cost'                    => '',
									'cost_prefix'             => '',
            ]]></add>
        </operation>

		<operation>
            <search position="after"><![CDATA[
$price = $product_query->row['price'];
            ]]></search>
            <add><![CDATA[
					$base_price = $product_query->row['price'];
					$cost = $product_query->row['cost'];
            ]]></add>
        </operation>

        <operation>
            <search position="after"><![CDATA[
=> ($price + $option_price),
            ]]></search>
            <add><![CDATA[
						'cost'				=> ($cost + $option_cost),
						'base_price'		=> ($base_price + $option_price),
            ]]></add>
        </operation>
	</file>
	
	
	<file name="admin/controller/module/adv_profit_module.php">
        <operation>
            <search position="after"><![CDATA[
public function index() {
            ]]></search>
            <add><![CDATA[
$this->data['adv_current_version'] = '4.4';
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
$this->data['laccess'] = '';
            ]]></search>
            <add><![CDATA[
            ]]></add>
        </operation>		
	
        <operation>
            <search position="before"><![CDATA[
$this->data['token'] = $this->session->data['token'];
            ]]></search>
            <add><![CDATA[
		$this->data['adv_text_ext_name'] = $this->language->get('adv_text_ext_name');
		$this->data['adv_ext_name'] = $this->language->get('adv_ext_name');
		$this->data['adv_ext_short_name'] = $this->language->get('adv_ext_short_name');
		$this->data['adv_text_instal_version'] = $this->language->get('adv_text_instal_version');
		$this->data['adv_text_latest_version'] = $this->language->get('adv_text_latest_version');
		$this->data['adv_ext_version'] = $this->language->get('adv_ext_version');
		$this->data['adv_ext_type'] = $this->language->get('adv_ext_type');
		$this->data['adv_text_ext_compatibility'] = $this->language->get('adv_text_ext_compatibility');
		$this->data['adv_ext_compatibility'] = $this->language->get('adv_ext_compatibility');
		$this->data['adv_text_ext_url'] = $this->language->get('adv_text_ext_url');
		$this->data['adv_ext_url'] = 'http://www.opencart.com/index.php?route=extension/extension/info&extension_id=16601';
		$this->data['adv_all_ext_url'] = 'http://www.opencart.com/index.php?route=extension/extension&filter_username=cmerry';
		$this->data['adv_help_url'] = 'http://www.opencartreports.com/documentation/prm/index.html#support';
		$this->data['adv_legal_notice_url'] = 'http://www.opencartreports.com/documentation/prm/index.html#terms';		
		$this->data['adv_text_reg_info'] = $this->language->get('adv_text_reg_info');
		$this->data['adv_text_reg_status'] = $this->language->get('adv_text_reg_status');
		$this->data['adv_text_ext_support'] = $this->language->get('adv_text_ext_support');
		$this->data['adv_ext_support'] = $this->language->get('adv_ext_support');
		$this->data['adv_ext_subject'] = sprintf($this->language->get('adv_ext_subject'), $this->language->get('adv_ext_name'));
		$this->data['adv_text_ext_legal'] = $this->language->get('adv_text_ext_legal');	
		$this->data['adv_text_copyright'] = $this->language->get('adv_text_copyright');
		$this->data['auth'] = TRUE;	
            ]]></add>
        </operation>
	
        <operation>
            <search position="before"><![CDATA[
$this->template = 'module/adv_profit_module.tpl';
            ]]></search>
            <add><![CDATA[
		$adv_check = curl_init();
 		     // Set URL to download
		curl_setopt($adv_check, CURLOPT_URL,"http://opencartreports.com/version/adv_prm_version.xml");
 		    // Include header in result? (0 = yes, 1 = no)
		curl_setopt($adv_check, CURLOPT_HEADER, 0);
     		// Should cURL return or print out the data? (true = return, false = print)
		curl_setopt($adv_check, CURLOPT_RETURNTRANSFER, true);
 		    // Timeout in seconds
		curl_setopt($adv_check, CURLOPT_TIMEOUT, 10);
 		    // Download the given URL, and return output
		$adv_output = curl_exec($adv_check);
    		// Close the cURL resource, and free system resources
 		curl_close($adv_check);
		$adv_analyse = simplexml_load_string($adv_output,null);
		if ($adv_output != FALSE) {				
		$this->data['adv_prm_version']['version'] = $adv_analyse->children()->version;
		$this->data['adv_prm_version']['whats_new'] = $adv_analyse->children()->whats_new;
		}
            ]]></add>
        </operation>
	</file>	


	<file name="admin/language/*/module/adv_profit_module.php">
        <operation>
            <search position="before"><![CDATA[
?>
            ]]></search>
            <add><![CDATA[
$_['adv_text_ext_name']					= 'Extension name:';
$_['adv_ext_name']						= 'ADV Profit Module';
$_['adv_ext_short_name']				= 'adv_profit_module';
$_['adv_text_instal_version']			= 'Installed version:';
$_['adv_text_latest_version']			= 'Latest version:';
$_['adv_ext_version']					= '4.4';
$_['adv_ext_type']						= 'vQmod';
$_['adv_text_ext_compatibility']		= 'Extension compatibility:';
$_['adv_ext_compatibility']				= 'OpenCart v1.5.5.x, v1.5.6.x';
$_['adv_text_ext_url']					= 'Extension URL:';
$_['adv_text_ext_support']				= 'Extension support:';
$_['adv_text_reg_status']				= 'License status:';
$_['adv_text_reg_info']					= 'License data:';
$_['adv_ext_support']					= 'opencart.reports@gmail.com';
$_['adv_ext_subject']      				= '%s support needed';
$_['adv_text_ext_legal']				= 'Extension legal notice:';
$_['adv_text_copyright']				= 'ADV Reports &amp; Statistics &copy; 2011-2015';
            ]]></add>
        </operation>
	</file>
		
		
	<file name="admin/view/template/module/adv_profit_module.tpl">
        <operation>
            <search position="after"><![CDATA[
      <div id="content">
            ]]></search>
            <add><![CDATA[	  	
      <?php include(DIR_APPLICATION . 'view/image/adv_reports/separator.png'); ?>
            ]]></add>
        </operation>	
        <operation>
            <search position="replace"><![CDATA[
<div id="adv_profit_module"></div>
            ]]></search>
            <add><![CDATA[
	<div style="background-color:#fff0f0; border:thin solid #F99; margin-bottom:10px;">
      <table class="form">
       <tr>
        <td style="width:20%;"><?php echo $adv_text_ext_name; ?></td>
        <td style="width:80%;"><span style="font-size:small; font-weight:bold;"><?php echo $adv_ext_name; ?></span></td>
       </tr>
       <tr>
        <td><?php echo $adv_text_instal_version; ?></td>
        <td><b><?php echo $adv_ext_version; ?></b> [ <?php echo $adv_ext_type; ?> ]</td>
       </tr>
<?php if ($adv_prm_version) { ?>
<?php if ($adv_prm_version['version'] != $adv_current_version) { ?>  
       <tr>
        <td><span style="color:red"><strong><?php echo $adv_text_latest_version; ?></strong></span></td>
        <td><div id="adv_new_version"></div> <div id="adv_what_is_new"></div></td>
       </tr>	
<?php } ?>
<?php } ?>
       <tr>
        <td><?php echo $adv_text_ext_compatibility; ?></td>
        <td><?php echo $adv_ext_compatibility; ?></td>
       </tr>
       <tr>
        <td><?php echo $adv_text_ext_url; ?></td>
        <td><span class="wrap-url"><a href="<?php echo $adv_ext_url; ?>" target="_blank"><?php echo $adv_ext_url ?></a></span><br />
		  <span style="font-weight:bold;">We would appreciate it very much if you could rate the extension once you've had a chance to try it out. Why not tell everybody how great this extension is by leaving a comment as well.<br /></span><br />If you like this extension you might also be interested in my other extensions:<br /><a href="<?php echo $adv_all_ext_url; ?>" target="_blank"><?php echo $adv_all_ext_url ?></a>
		  </td>
       </tr>
        <td><?php echo $adv_text_ext_support; ?></td>
        <td>
          <a href="mailto:<?php echo $adv_ext_support; ?>?subject=<?php echo $adv_ext_subject; ?>" target="_blank"><?php echo $adv_ext_support; ?></a>&nbsp;&nbsp;|&nbsp;&nbsp;
          <b>!!!</b> <a href="<?php echo $adv_help_url; ?>" target="_blank"><?php echo $text_asking_help; ?></a> <b>!!!</b>
        </td>
       </tr>
<?php if ($servers) { ?>
       <tr>
        <td><?php echo $adv_text_reg_status; ?></td>
        <td><?php echo $lstatus; ?></td>
       </tr>	
<?php if ($llicense) { ?>	   	   	   
       <tr>
        <td><?php echo $adv_text_reg_info; ?></td>
        <td><?php echo $llicense; ?><?php echo $ldomain; ?></td>
       </tr>		    
<?php } ?>
<?php } ?>	   
       <tr>
        <td><?php echo $adv_text_ext_legal; ?></td>
        <td><?php echo $adv_text_copyright; ?>&nbsp;&nbsp;|&nbsp;&nbsp;
          <a href="<?php echo $adv_legal_notice_url; ?>" target="_blank"><?php echo $text_terms; ?></a><br />
		  <span style="font-weight:bold;">Please be aware that this product has a per-domain license, meaning you can use it only on a single domain. You will need to purchase a separate license for each domain you wish to use this extension on.</span>
		</td>
       </tr>
      </table>
	 </div>
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[
<?php echo $footer; ?>
            ]]></search>
            <add><![CDATA[
<?php if ($adv_prm_version) { ?>
<?php if ($adv_prm_version['version'] != $adv_current_version) { ?>  
<script type="text/javascript">
$('#adv_new_version').append('<span style="color:red"><strong><?php echo $adv_prm_version["version"]; ?></strong></span>');
$('#adv_what_is_new').append('<?php echo html_entity_decode(str_replace("@@@","<br>",$adv_prm_version["whats_new"]), ENT_QUOTES, "UTF-8"); ?> ');
</script>
<?php } ?>
<?php } ?>
            ]]></add>
        </operation>
	</file>
	
</modification>